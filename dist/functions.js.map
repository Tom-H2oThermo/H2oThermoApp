{"version":3,"file":"functions.js","mappings":"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","sources":["webpack://excel-custom-functions/./src/functions/Constants.js","webpack://excel-custom-functions/./src/functions/Units.js","webpack://excel-custom-functions/./src/functions/Errors.js","webpack://excel-custom-functions/./src/functions/Conversions.js","webpack://excel-custom-functions/./src/functions/Region4SatPressure.js","webpack://excel-custom-functions/./src/functions/Region1Calculations.js","webpack://excel-custom-functions/./src/functions/Boundary2_3Calculations.js","webpack://excel-custom-functions/./src/functions/Region3Calculations.js","webpack://excel-custom-functions/./src/functions/Region4Calculations.js","webpack://excel-custom-functions/./src/functions/Region2Calculations.js","webpack://excel-custom-functions/./src/functions/Region5Calculations.js","webpack://excel-custom-functions/./src/functions/StmProp_fPT.js","webpack://excel-custom-functions/./src/functions/StmProp_fPH.js","webpack://excel-custom-functions/./src/functions/StmProp_fPS.js","webpack://excel-custom-functions/./src/functions/StmProp_fHS.js","webpack://excel-custom-functions/./src/functions/Ice.js","webpack://excel-custom-functions/./src/functions/Viscosity.js","webpack://excel-custom-functions/./src/functions/Conductivity.js","webpack://excel-custom-functions/./src/functions/H2oProperties.js","webpack://excel-custom-functions/./src/functions/functions.js"],"sourcesContent":["//CONSTANTS\r\n\r\nexport const BtuPerKj = 1.05505585262; // (BTU/kJ) exact conversion  BTU IT\r\n\r\n//IAPWS-IF97 Fundamental Constants\r\nexport const R_H2O = 0.461526; //kJ/(kg*K) specific gas constant for water\r\nexport const Tc_H2O = 647.096; //K  critical temperature for water\r\nexport const pc_H2O = 22.064; //MPa  critical pressure for water\r\nexport const RHOc_H2O = 322; //kg/m3  critical density for water\r\nexport const T13_boundary = 623.15; //Temperature boundary between regions 1 & 3\r\nexport const T23_100MPa = 863.15; // Temperature at 100 MPa at the4 retion 2-3 boundary\r\nexport const T25_boundary = 1073.15; // Temperature boundary between regions 2 & 5\r\nexport const T_Cond_Max = 1173.15; // Maximum Temperature for Thermal Conductivity. R15-11 Eq 14\r\nexport const T5max = 2273.15; // Maximum temperature in region 5\r\nexport const Tmin = 273.15; // Minimum valid temperature for the IAPWS equations\r\nexport const Ttriple = 273.16; // Triple poconst temperature\r\nexport const pTriple = 0.000611657; // minimum pressure for many of the equations.  Saturation pressure at 273.16, the triple poconst temperature\r\nexport const pT0 = 0.0006112127; // Pressure at 273.15K if sat pressure curve extended past 273.16 triple point\r\nexport const p2a2b_boundary = 4; // Pressure boundary between regions 2a and 2b\r\nexport const pmax = 100; // Maximum pressure for the IAPWS equations\r\n\r\n//IAPWS-IF97 Regions 2 & 3 boundary constants (Eq 5, table 1)\r\nexport const reg2_3Boundary = [\r\n  0.34805185628969e3, -0.11671859879975e1, 0.10192970039326e-2, 0.57254459862746e3, 0.1391883977887e2,\r\n];\r\n\r\n// reg1Gibb.I = { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32 ];\r\n\r\n//IAPWS-IF97 Region 1 Gibbs Free Energy Coefficients & Exponents (Eq 7, table 2)\r\nexport const reg1_Gibb_I = [\r\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32,\r\n];\r\nexport const reg1_Gibb_J = [\r\n  -2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31, -38, -39,\r\n  -40, -41,\r\n];\r\nexport const reg1_Gibb_n = [\r\n  0.14632971213167, -0.84548187169114, -0.3756360367204e1, 3.3855169168385, -0.95791963387872, 0.15772038513228,\r\n  -0.16616417199501e-1, 0.81214629983568e-3, 0.28319080123804e-3, -0.60706301565874e-3, -0.18990068218419e-1,\r\n  -0.32529748770505e-1, -0.21841717175414e-1, -0.5283835796993e-4, -0.47184321073267e-3, -0.30001780793026e-3,\r\n  0.47661393906987e-4, -0.44141845330846e-5, -0.72694996297594e-15, -0.31679644845054e-4, -0.28270797985312e-5,\r\n  -0.85205128120103e-9, -0.22425281908e-5, -0.65171222895601e-6, -0.14341729937924e-12, -0.40516996860117e-6,\r\n  -0.12734301741641e-8, -0.17424871230634e-9, -0.68762131295531e-18, 0.14478307828521e-19, 0.26335781662795e-22,\r\n  -0.11947622640071e-22, 0.18228094581404e-23, -0.93537087292458e-25,\r\n];\r\n\r\n//IAPWS-IF97 Region 1 T(p,h) backward equation Coefficients & Exponents (Eq 11, table 6)\r\nexport const reg1_Tph_I = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 4, 5, 6];\r\nexport const reg1_Tph_J = [0, 1, 2, 6, 22, 32, 0, 1, 2, 3, 4, 10, 32, 10, 32, 10, 32, 32, 32, 32];\r\nexport const reg1_Tph_n = [\r\n  -238.72489924521, 404.21188637945, 113.49746881718, -5.8457616048039, -1.528548241314e-4, -1.0866707695377e-6,\r\n  -13.391744872602, 43.211039183559, -54.010067170506, 30.535892203916, -6.5964749423638, 9.3965400878363e-3,\r\n  1.157364750534e-7, -2.5858641282073e-5, -4.0644363084799e-9, 6.6456186191635e-8, 8.0670734103027e-11,\r\n  -9.3477771213947e-13, 5.8265442020601e-15, -1.5020185953503e-17,\r\n];\r\n\r\n//IAPWS-IF97 Region 1 T(p,s) backward equation Coefficients & Exponents (Eq 13, table 8)\r\nexport const reg1_Tps_I = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 4];\r\nexport const reg1_Tps_J = [0, 1, 2, 3, 11, 31, 0, 1, 2, 3, 12, 31, 0, 1, 2, 9, 31, 10, 32, 32];\r\nexport const reg1_Tps_n = [\r\n  174.78268058307, 34.806930892873, 6.5292584978455, 0.33039981775489, -0.19281382923196e-6, -0.24909197244573e-22,\r\n  -0.26107636489332, 0.22592965981586, -0.64256463395226e-1, 7.8876289270526e-3, 3.5672110607366e-10,\r\n  1.7332496994895e-24, 5.6608900654837e-4, -0.32635483139717e-3, 4.4778286690632e-5, -0.51322156908507e-9,\r\n  -0.42522657042207e-25, 2.6400441360689e-13, 7.8124600459723e-29, -0.30732199903668e-30,\r\n];\r\n\r\n//IAPWS-IF97 Region 2 Gibbs Free Energy, ideal gas part, Coefficients & Exponents (Eq 16, table 10)\r\n//reg2_tbl10_na coefficients used if Eq 16 is incorporated into Eq 18 (first two terms different)\r\nexport const reg2_Gibb_Ideal_J = [0, 1, -5, -4, -3, -2, -1, 2, 3];\r\nexport const reg2_Gibb_Ideal_n = [\r\n  -9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444,\r\n  -4.383951131945, -0.28408632460772, 0.021268463753307,\r\n];\r\nexport const reg2_Gibb_Ideal_na = [\r\n  -9.6937268393049, 10.087275970006, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444,\r\n  -4.383951131945, -0.28408632460772, 0.021268463753307,\r\n];\r\n\r\n//IAPWS-IF97 Region 2 Gibbs Free Energy, residual part, Coefficients & Exponents (Eq 17, table 11)\r\nexport const reg2_Gibb_Res_I = [\r\n  1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16, 18, 20, 20,\r\n  20, 21, 22, 23, 24, 24, 24,\r\n];\r\nexport const reg2_Gibb_Res_J = [\r\n  0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14, 29, 50, 57, 20,\r\n  35, 48, 21, 53, 39, 26, 40, 58,\r\n];\r\nexport const reg2_Gibb_Res_n = [\r\n  -0.17731742473213e-2, -0.17834862292358e-1, -0.45996013696365e-1, -0.57581259083432e-1, -0.5032527872793e-1,\r\n  -0.33032641670203e-4, -0.18948987516315e-3, -0.39392777243355e-2, -0.43797295650573e-1, -0.26674547914087e-4,\r\n  2.0481737692309e-8, 4.3870667284435e-7, -0.3227767723857e-4, -0.15033924542148e-2, -0.40668253562649e-1,\r\n  -0.78847309559367e-9, 1.2790717852285e-8, 4.8225372718507e-7, 2.2922076337661e-6, -0.16714766451061e-10,\r\n  -0.21171472321355e-2, -0.23895741934104e2, -0.5905956432427e-17, -0.12621808899101e-5, -0.38946842435739e-1,\r\n  1.1256211360459e-11, -0.82311340897998e1, 1.9809712802088e-8, 1.0406965210174e-19, -0.10234747095929e-12,\r\n  -0.10018179379511e-8, -0.80882908646985e-10, 0.10693031879409, -0.33662250574171, 8.9185845355421e-25,\r\n  3.0629316876232e-13, -0.42002467698208e-5, -0.59056029685639e-25, 3.7826947613457e-6, -0.12768608934681e-14,\r\n  7.3087610595061e-29, 5.5414715350778e-17, -0.9436970724121e-6,\r\n];\r\n\r\n//IAPWS-IF97 Metastable-Vapor region Gibbs Free Energy, residual part, Coefficients & Exponents (Eq 19, table 16)\r\nexport const reg2_MSV_Gibb_Res_I = [1, 1, 1, 1, 2, 2, 2, 3, 3, 4, 4, 5, 5];\r\nexport const reg2_MSV_Gibb_Res_J = [0, 2, 5, 11, 1, 7, 16, 4, 16, 7, 10, 9, 10];\r\nexport const reg2_MSV_Gibb_Res_n = [\r\n  -0.73362260186506e-2, -0.88223831943146e-1, -0.72334555213245e-1, -0.40813178534455e-2, 2.0097803380207e-3,\r\n  -0.53045921898642e-1, -0.7619040908697e-2, -0.63498037657313e-2, -0.86043093028588e-1, 0.007532158152277,\r\n  -0.79238375446139e-2, -0.22888160778447e-3, -0.2645650148281e-2,\r\n];\r\n\r\n//IAPWS-IF97 B2bc equ to def boundary between subregions 2b & 2c WRT T(p,h) calc, Coefficients & Exponents (Eq 20 & 21, table 19)\r\nexport const reg2_B2bc_n = [\r\n  0.90584278514723e3, -0.67955786399241, 0.12809002730136e-3, 0.26526571908428e4, 0.45257578905948e1,\r\n];\r\n\r\n//IAPWS-IF97 Region 2a T(p,h) backward equation Coefficients & Exponents (Eq 22, table 20)\r\nexport const reg2a_Tph_I = [\r\n  0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 7,\r\n];\r\nexport const reg2a_Tph_J = [\r\n  0, 1, 2, 3, 7, 20, 0, 1, 2, 3, 7, 9, 11, 18, 44, 0, 2, 7, 36, 38, 40, 42, 44, 24, 44, 12, 32, 44, 32, 36, 42, 34, 44,\r\n  28,\r\n];\r\nexport const reg2a_Tph_n = [\r\n  1089.8952318288, 849.51654495535, -0.10781748091826e3, 33.153654801263, -0.74232016790248e1, 11.765048724356,\r\n  1.844574935579, -0.41792700549624e1, 6.2478196935812, -0.17344563108114e2, -0.20058176862096e3, 271.96065473796,\r\n  -0.45511318285818e3, 3091.9688604755, 252266.40357872, -0.61707422868339e-2, -0.31078046629583, 11.670873077107,\r\n  128127984.04046, -0.98554909623276e9, 2822454697.3002, -0.35948971410703e10, 1722734991.3197, -0.13551334240775e5,\r\n  12848734.66465, 1.3865724283226, 235988.32556514, -0.13105236545054e8, 7399.9835474766, -0.5519669703006e6,\r\n  3715408.5996233, 19127.72923966, -0.41535164835634e6, -0.62459855192507e2,\r\n];\r\n\r\n//IAPWS-IF97 Region 2b T(p,h) backward equation Coefficients & Exponents (Eq 23, table 21)\r\nexport const reg2b_Tph_I = [\r\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 7, 7, 9, 9,\r\n];\r\nexport const reg2b_Tph_J = [\r\n  0, 1, 2, 12, 18, 24, 28, 40, 0, 2, 6, 12, 18, 24, 28, 40, 2, 8, 18, 40, 1, 2, 12, 24, 2, 12, 18, 24, 28, 40, 18, 24,\r\n  40, 28, 2, 28, 1, 40,\r\n];\r\nexport const reg2b_Tph_n = [\r\n  1489.5041079516, 743.07798314034, -0.97708318797837e2, 2.4742464705674, -0.63281320016026, 1.1385952129658,\r\n  -0.47811863648625, 8.5208123431544e-3, 0.93747147377932, 3.3593118604916, 3.3809355601454, 0.16844539671904,\r\n  0.73875745236695, -0.47128737436186, 0.15020273139707, -0.2176411421975e-2, -0.21810755324761e-1, -0.10829784403677,\r\n  -0.46333324635812e-1, 7.1280351959551e-5, 1.1032831789999e-4, 1.8955248387902e-4, 3.0891541160537e-3,\r\n  1.3555504554949e-3, 2.8640237477456e-7, -0.10779857357512e-4, -0.76462712454814e-4, 1.4052392818316e-5,\r\n  -0.31083814331434e-4, -0.10302738212103e-5, 2.821728163504e-7, 1.2704902271945e-6, 7.3803353468292e-8,\r\n  -0.11030139238909e-7, -0.81456365207833e-13, -0.25180545682962e-10, -0.17565233969407e-17, 8.6934156344163e-15,\r\n];\r\n\r\n//IAPWS-IF97 Region 2c T(p,h) backward equation Coefficients & Exponents (Eq 24, table 22)\r\nexport const reg2c_Tph_I = [-7, -7, -6, -6, -5, -5, -2, -2, -1, -1, 0, 0, 1, 1, 2, 6, 6, 6, 6, 6, 6, 6, 6];\r\nexport const reg2c_Tph_J = [0, 4, 0, 2, 0, 2, 0, 1, 0, 2, 0, 1, 4, 8, 4, 0, 1, 4, 10, 12, 16, 20, 22];\r\nexport const reg2c_Tph_n = [\r\n  -0.32368398555242e13, 7326335090218.1, 358250899454.47, -0.5834013185159e12, -0.1078306821747e11, 20825544563.171,\r\n  610747.83564516, 859777.2253558, -0.2574572360417e5, 31081.088422714, 1208.2315865936, 482.19755109255,\r\n  3.7966001272486, -0.10842984880077e2, -0.4536417267666e-1, 1.4559115658698e-13, 1.126159740723e-12,\r\n  -0.17804982240686e-10, 1.2324579690832e-7, -0.11606921130984e-5, 2.7846367088554e-5, -0.59270038474176e-3,\r\n  1.2918582991878e-3,\r\n];\r\n\r\n//IAPWS-IF97 Region 2a T(p,s) backward equation Coefficients & Exponents (Eq 25, table 25)\r\nexport const reg2a_Tps_I = [\r\n  -1.5, -1.5, -1.5, -1.5, -1.5, -1.5, -1.25, -1.25, -1.25, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.75, -0.75, -0.5, -0.5,\r\n  -0.5, -0.5, -0.25, -0.25, -0.25, -0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75, 0.75, 0.75,\r\n  0.75, 1.0, 1.0, 1.25, 1.25, 1.5, 1.5,\r\n];\r\nexport const reg2a_Tps_J = [\r\n  -24, -23, -19, -13, -11, -10, -19, -15, -6, -26, -21, -17, -16, -9, -8, -15, -14, -26, -13, -9, -7, -27, -25, -11, -6,\r\n  1, 4, 8, 11, 0, 1, 5, 6, 10, 14, 16, 0, 4, 9, 17, 7, 18, 3, 15, 5, 18,\r\n];\r\nexport const reg2a_Tps_n = [\r\n  -0.39235983861984e6, 515265.7382727, 40482.443161048, -0.32193790923902e3, 96.961424218694, -0.22867846371773e2,\r\n  -0.44942914124357e6, -0.50118336020166e4, 0.35684463560015, 44235.33584819, -0.13673388811708e5, 421632.60207864,\r\n  22516.925837475, 474.42144865646, -0.14931130797647e3, -0.19781126320452e6, -0.2355439947076e5, -0.19070616302076e5,\r\n  55375.669883164, 3829.3691437363, -0.60391860580567e3, 1936.3102620331, 4266.064369861, -0.59780638872718e4,\r\n  -0.70401463926862e3, 338.36784107553, 20.862786635187, 0.033834172656196, -0.43124428414893e-4, 166.53791356412,\r\n  -0.13986292055898e3, -0.78849547999872, 0.072132411753872, -0.59754839398283e-2, -0.12141358953904e-4,\r\n  2.3227096733871e-7, -0.10538463566194e2, 2.0718925496502, -0.72193155260427e-1, 2.074988708112e-7,\r\n  -0.18340657911379e-1, 2.9036272348696e-7, 0.21037527893619, 2.5681239729999e-4, -0.12799002933781e-1,\r\n  -0.82198102652018e-5,\r\n];\r\n\r\n//IAPWS-IF97 Region 2b T(p,s) backward equation Coefficients & Exponents (Eq 26, table 26)\r\nexport const reg2b_Tps_I = [\r\n  -6, -6, -5, -5, -4, -4, -4, -3, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n  2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5,\r\n];\r\nexport const reg2b_Tps_J = [\r\n  0, 11, 0, 11, 0, 1, 11, 0, 1, 11, 12, 0, 1, 6, 10, 0, 1, 5, 8, 9, 0, 1, 2, 4, 5, 6, 9, 0, 1, 2, 3, 7, 8, 0, 1, 5, 0,\r\n  1, 3, 0, 1, 0, 1, 2,\r\n];\r\nexport const reg2b_Tps_n = [\r\n  316876.65083497, 20.864175881858, -0.39859399803599e6, -0.21816058518877e2, 223697.85194242, -0.27841703445817e4,\r\n  9.920743607148, -0.75197512299157e5, 2970.8605951158, -0.34406878548526e1, 0.38815564249115, 17511.29508575,\r\n  -0.14237112854449e4, 1.0943803364167, 0.89971619308495, -0.33759740098958e4, 471.62885818355, -0.19188241993679e1,\r\n  0.41078580492196, -0.33465378172097, 1387.0034777505, -0.40663326195838e3, 41.72734715961, 2.1932549434532,\r\n  -0.10320050009077e1, 0.35882943516703, 5.2511453726066e-3, 12.838916450705, -0.28642437219381e1, 0.56912683664855,\r\n  -0.99962954584931e-1, -0.32632037778459e-2, 2.3320922576723e-4, -0.1533480985745, 0.029072288239902,\r\n  3.7534702741167e-4, 1.7296691702411e-3, -0.38556050844504e-3, -0.35017712292608e-4, -0.14566393631492e-4,\r\n  5.6420857267269e-6, 4.1286150074605e-8, -0.20684671118824e-7, 1.6409393674725e-9,\r\n];\r\n\r\n//IAPWS-IF97 Region 2c T(p,s) backward equation Coefficients & Exponents (Eq 27, table 27)\r\nexport const reg2c_Tps_I = [\r\n  -2, -2, -1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 7,\r\n];\r\nexport const reg2c_Tps_J = [0, 1, 0, 0, 1, 2, 3, 0, 1, 3, 4, 0, 1, 2, 0, 1, 5, 0, 1, 4, 0, 1, 2, 0, 1, 0, 1, 3, 4, 5];\r\nexport const reg2c_Tps_n = [\r\n  909.68501005365, 2404.566708842, -0.5916232638713e3, 541.45404128074, -0.27098308411192e3, 979.76525097926,\r\n  -0.46966772959435e3, 14.399274604723, -0.19104204230429e2, 5.3299167111971, -0.21252975375934e2, -0.3114733441376,\r\n  0.60334840894623, -0.42764839702509e-1, 5.8185597255259e-3, -0.14597008284753e-1, 5.6631175631027e-3,\r\n  -0.76155864584577e-4, 2.2440342919332e-4, -0.12561095013413e-4, 6.3323132660934e-7, -0.20541989675375e-5,\r\n  3.6405370390082e-8, -0.29759897789215e-8, 1.0136618529763e-8, 5.9925719692351e-12, -0.20677870105164e-10,\r\n  -0.20874278181886e-10, 1.0162166825089e-10, -0.16429828281347e-9,\r\n];\r\n\r\n//IAPWS-IF97 Region 3 Helmholtz Free Energy Coefficients & Exponents (Eq 28, table 30)\r\nexport const reg3_HelmH_I = [\r\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 8, 9, 9, 10, 10,\r\n  11,\r\n];\r\nexport const reg3_HelmH_J = [\r\n  0, 0, 1, 2, 7, 10, 12, 23, 2, 6, 15, 17, 0, 2, 6, 7, 22, 26, 0, 2, 4, 16, 26, 0, 2, 4, 26, 1, 3, 26, 0, 2, 26, 2, 26,\r\n  2, 26, 0, 1, 26,\r\n];\r\nexport const reg3_HelmH_n = [\r\n  1.0658070028513, -0.15732845290239e2, 20.944396974307, -0.76867707878716e1, 2.6185947787954, -0.2808078114862e1,\r\n  1.2053369696517, -0.84566812812502e-2, -0.12654315477714e1, -0.11524407806681e1, 0.88521043984318, -0.64207765181607,\r\n  0.38493460186671, -0.85214708824206, 4.8972281541877, -0.30502617256965e1, 0.039420536879154, 0.12558408424308,\r\n  -0.2799932969871, 1.389979956946, -0.2018991502357e1, -0.82147637173963e-2, -0.47596035734923, 0.0439840744735,\r\n  -0.44476435428739, 0.90572070719733, 0.70522450087967, 0.10770512626332, -0.32913623258954, -0.50871062041158,\r\n  -0.22175400873096e-1, 0.094260751665092, 0.16436278447961, -0.13503372241348e-1, -0.14834345352472e-1,\r\n  5.7922953628084e-4, 3.2308904703711e-3, 8.0964802996215e-5, -0.16557679795037e-3, -0.44923899061815e-4,\r\n];\r\n\r\n//IAPWS-IF97 Region 4 Helmholtz Saturation Equation Coefficients & Exponents (Eq 29 to 31, table 34)\r\nexport const reg4_sat_eq_n = [\r\n  1167.0521452767, -0.72421316703206e6, -0.17073846940092e2, 12020.82470247, -0.32325550322333e7, 14.91510861353,\r\n  -0.48232657361591e4, 405113.40542057, -0.23855557567849, 650.17534844798,\r\n];\r\n\r\n//IAPWS-IF97 Region 5 Gibbs Free Energy, ideal gas part, Coefficients & Exponents (Eq 33, table 37)\r\nexport const reg5_Gibb_Ideal_J = [0, 1, -3, -2, -1, 2];\r\nexport const reg5_Gibb_Ideal_n = [\r\n  -0.13179983674201e2, 6.8540841634434, -0.24805148933466e-1, 0.36901534980333, -0.31161318213925e1, -0.32961626538917,\r\n];\r\n\r\n//IAPWS-IF97 Region 5 Gibbs Free Energy, residual part, Coefficients & Exponents (Eq 34, table 38)\r\nexport const reg5_Gibb_Res_I = [1, 1, 1, 2, 2, 3];\r\nexport const reg5_Gibb_Res_J = [1, 2, 3, 3, 9, 7];\r\nexport const reg5_Gibb_Res_n = [\r\n  1.5736404855259e-3, 9.0153761673944e-4, -0.50270077677648e-2, 2.2440037409485e-6, -0.41163275453471e-5,\r\n  3.7919454822955e-8,\r\n];\r\n\r\n// IAPWS SR2-01 (2014) table 2 coefficients for p(h,s) for region 1\r\nexport const reg1_pHS_I = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 4, 4, 5];\r\nexport const reg1_pHS_J = [0, 1, 2, 4, 5, 6, 8, 14, 0, 1, 4, 6, 0, 1, 10, 4, 1, 4, 0];\r\nexport const reg1_pHS_n = [\r\n  -6.91997014660582e-1, -1.8361254878756e1, -9.28332409297335, 6.59639569909906e1, -1.62060388912024e1,\r\n  4.50620017338667e2, 8.5468067822417e2, 6.07523214001161e3, 3.26487682621856e1, -2.69408844582931e1, -3.199478483343e2,\r\n  -9.2835430704332e2, 3.03634537455249e1, -6.50540422444146e1, -4.3099131651613e3, -7.47512324096068e2,\r\n  7.30000345529245e2, 1.14284032569021e3, -4.36407041874559e2,\r\n];\r\n\r\n// IAPWS SR2-01 (2014) table 5 coefficients for h2ab(s) - The 4 MPa isobar boundary between regions 2a and 2b\r\nexport const h2ab_n = [-0.349898083432139e4, 0.257560716905876e4, -0.421073558227969e3, 0.276349063799944e2];\r\n\r\n// IAPWS SR2-01 (2014) table 6 coefficients for p(h,s) for region 2a\r\nexport const reg2a_pHS_I = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 6, 7];\r\nexport const reg2a_pHS_J = [\r\n  1, 3, 6, 16, 20, 22, 0, 1, 2, 3, 5, 6, 10, 16, 20, 22, 3, 16, 20, 0, 2, 3, 6, 16, 16, 3, 16, 3, 1,\r\n];\r\nexport const reg2a_pHS_n = [\r\n  -1.82575361923032e-2, -1.25229548799536e-1, 5.92290437320145e-1, 6.04769706185122, 2.38624965444474e2,\r\n  -2.98639090222922e2, 5.1225081304075e-2, -4.37266515606486e-1, 4.13336902999504e-1, -5.16468254574773,\r\n  -5.57014838445711, 1.28555037824478e1, 1.1414410895329e1, -1.19504225652714e2, -2.8477798596156e3, 4.31757846408006e3,\r\n  1.1289404080265, 1.97409186206319e3, 1.51612444706087e3, 1.41324451421235e-2, 5.85501282219601e-1, -2.97258075863012,\r\n  5.94567314847319, -6.23656565798905e3, 9.65986235133332e3, 6.81500934948134, -6.33207286824489e3, -5.5891922446576,\r\n  4.00645798472063e-2,\r\n];\r\n\r\n// IAPWS SR2-01 (2014) table 7 coefficients for p(h,s) for region 2b\r\nexport const reg2b_pHS_I = [\r\n  0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 6, 6, 6, 7, 7, 8, 8, 8, 8, 12, 14,\r\n];\r\nexport const reg2b_pHS_J = [\r\n  0, 1, 2, 4, 8, 0, 1, 2, 3, 5, 12, 1, 6, 18, 0, 1, 7, 12, 1, 16, 1, 12, 1, 8, 18, 1, 16, 1, 3, 14, 18, 10, 16,\r\n];\r\nexport const reg2b_pHS_n = [\r\n  8.01496989929495e-2, -5.43862807146111e-1, 3.37455597421283e-1, 8.9055545115745, 3.13840736431485e2,\r\n  7.97367065977789e-1, -1.2161697355624, 8.72803386937477, -1.69769781757602e1, -1.86552827328416e2, 9.51159274344237e4,\r\n  -1.89168510120494e1, -4.3340703719484e3, 5.43212633012715e8, 1.44793408386013e-1, 1.28024559637516e2,\r\n  -6.72309534071268e4, 3.36972380095287e7, -5.8663419676272e2, -2.21403224769889e10, 1.71606668708389e3,\r\n  -5.70817595806302e8, -3.12109693178482e3, -2.0784138463301e6, 3.05605946157786e12, 3.22157004314333e3,\r\n  3.26810259797295e11, -1.44104158934487e3, 4.10694867802691e2, 1.09077066873024e11, -2.47964654258893e13,\r\n  1.88801906865134e9, -1.23651009018773e14,\r\n];\r\n\r\n// IAPWS SR2-01 (2014) table 8 coefficients for p(h,s) for region 2c\r\nexport const reg2c_pHS_I = [\r\n  0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 10, 12, 16,\r\n];\r\nexport const reg2c_pHS_J = [\r\n  0, 1, 2, 3, 4, 8, 0, 2, 5, 8, 14, 2, 3, 7, 10, 18, 0, 5, 8, 16, 18, 18, 1, 4, 6, 14, 8, 18, 7, 7, 10,\r\n];\r\nexport const reg2c_pHS_n = [\r\n  1.12225607199012e-1, -3.39005953606712, -3.20503911730094e1, -1.975973051049e2, -4.07693861553446e2,\r\n  1.32943775222331e4, 1.70846839774007, 3.73694198142245e1, 3.58144365815434e3, 4.23014446424664e5, -7.51071025760063e8,\r\n  5.23446127607898e1, -2.28351290812417e2, -9.60652417056937e5, -8.07059292526074e7, 1.62698017225669e12,\r\n  7.72465073604171e-1, 4.63929973837746e4, -1.37317885134128e7, 1.70470392630512e12, -2.51104628187308e13,\r\n  3.1774883083552e13, 5.38685623675312e1, -5.53089094625169e4, -1.02861522421405e6, 2.04249418756234e12,\r\n  2.73918446626977e8, -2.63963146312685e15, -1.07890854108088e9, -2.96492620980124e10, -1.11754907323424e15,\r\n];\r\n\r\n// Region 3 backward equations IAPWS SR3-03 (2014)\r\n// T(p,h), v(p,h), T(p,s), v(p,s)\r\n\r\n// IAPWS SR3-03 Table 2: BW Eqn boundary between subregions 3a and 3b\r\nexport const reg3_h3ab_fP = [0.201464004206875e4, 0.374696550136983e1, -0.219921901054187e-1, 0.87513168600995e-4];\r\n\r\n// IAPWS SR3-03 Table 3: backward equation T3a(p,h)\r\nexport const reg3a_Tph_I = [\r\n  -12, -12, -12, -12, -12, -12, -12, -12, -10, -10, -10, -8, -8, -8, -8, -5, -3, -2, -2, -2, -1, -1, 0, 0, 1, 3, 3, 4,\r\n  4, 10, 12,\r\n];\r\nexport const reg3a_Tph_J = [\r\n  0, 1, 2, 6, 14, 16, 20, 22, 1, 5, 12, 0, 2, 4, 10, 2, 0, 1, 3, 4, 0, 2, 0, 1, 1, 0, 1, 0, 3, 4, 5,\r\n];\r\nexport const reg3a_Tph_n = [\r\n  -0.133645667811215e-6, 0.455912656802978e-5, -0.146294640700979e-4, 0.63934131297008e-2, 0.372783927268847e3,\r\n  -0.718654377460447e4, 0.5734947521034e6, -0.267569329111439e7, -0.334066283302614e-4, -0.245479214069597e-1,\r\n  0.478087847764996e2, 0.764664131818904e-5, 0.128350627676972e-2, 0.171219081377331e-1, -0.851007304583213e1,\r\n  -0.136513461629781e-1, -0.384460997596657e-5, 0.337423807911655e-2, -0.551624873066791, 0.72920227710747,\r\n  -0.992522757376041e-2, -0.119308831407288, 0.793929190615421, 0.454270731799386, 0.20999859125991,\r\n  -0.642109823904738e-2, -0.23515586860454e-1, 0.252233108341612e-2, -0.764885133368119e-2, 0.136176427574291e-1,\r\n  -0.133027883575669e-1,\r\n];\r\n\r\n// IAPWS SR3-03 Table 4: backward equation T3b(p,h)\r\nexport const reg3b_Tph_I = [\r\n  -12, -12, -10, -10, -10, -10, -10, -8, -8, -8, -8, -8, -6, -6, -6, -4, -4, -3, -2, -2, -1, -1, -1, -1, -1, -1, 0, 0,\r\n  1, 3, 5, 6, 8,\r\n];\r\nexport const reg3b_Tph_J = [\r\n  0, 1, 0, 1, 5, 10, 12, 0, 1, 2, 4, 10, 0, 1, 2, 0, 1, 5, 0, 4, 2, 4, 6, 10, 14, 16, 0, 2, 1, 1, 1, 1, 1,\r\n];\r\nexport const reg3b_Tph_n = [\r\n  0.32325457364492e-4, -0.127575556587181e-3, -0.475851877356068e-3, 0.156183014181602e-2, 0.105724860113781,\r\n  -0.858514221132534e2, 0.724140095480911e3, 0.296475810273257e-2, -0.592721983365988e-2, -0.126305422818666e-1,\r\n  -0.115716196364853, 0.849000969739595e2, -0.108602260086615e-1, 0.154304475328851e-1, 0.750455441524466e-1,\r\n  0.252520973612982e-1, -0.602507901232996e-1, -0.307622221350501e1, -0.574011959864879e-1, 0.503471360939849e1,\r\n  -0.925081888584834, 0.391733882917546e1, -0.77314600713019e2, 0.949308762098587e4, -0.141043719679409e7,\r\n  0.849166230819026e7, 0.861095729446704, 0.32334644281172, 0.873281936020439, -0.436653048526683, 0.286596714529479,\r\n  -0.131778331276228, 0.676682064330275e-2,\r\n];\r\n\r\n// IAPWS SR3-03 Table 6: backward equation V3a(p,h) specific volume f(p,T)\r\nexport const reg3a_Vph_I = [\r\n  -12, -12, -12, -12, -10, -10, -10, -8, -8, -6, -6, -6, -4, -4, -3, -2, -2, -1, -1, -1, -1, 0, 0, 1, 1, 1, 2, 2, 3, 4,\r\n  5, 8,\r\n];\r\nexport const reg3a_Vph_J = [\r\n  6, 8, 12, 18, 4, 7, 10, 5, 12, 3, 4, 22, 2, 3, 7, 3, 16, 0, 1, 2, 3, 0, 1, 0, 1, 2, 0, 2, 0, 2, 2, 2,\r\n];\r\nexport const reg3a_Vph_n = [\r\n  0.529944062966028e-2, -0.170099690234461, 0.111323814312927e2, -0.217898123145125e4, -0.506061827980875e-3,\r\n  0.556495239685324, -0.943672726094016e1, -0.297856807561527, 0.939353943717186e2, 0.192944939465981e-1,\r\n  0.421740664704763, -0.36891412628233e7, -0.737566847600639e-2, -0.354753242424366, -0.199768169338727e1,\r\n  0.115456297059049e1, 0.56836687581596e4, 0.808169540124668e-2, 0.172416341519307, 0.104270175292927e1,\r\n  -0.297691372792847, 0.560394465163593, 0.275234661176914, -0.148347894866012, -0.651142513478515e-1,\r\n  -0.292468715386302e1, 0.664876096952665e-1, 0.352335014263844e1, -0.146340792313332e-1, -0.224503486668184e1,\r\n  0.110533464706142e1, -0.408757344495612e-1,\r\n];\r\n\r\n// IAPWS SR3-03 Table 7: backward equation V3b(p,h) specific volume f(p,T)\r\nexport const reg3b_Vph_I = [\r\n  -12, -12, -8, -8, -8, -8, -8, -8, -6, -6, -6, -6, -6, -6, -4, -4, -4, -3, -3, -2, -2, -1, -1, -1, -1, 0, 1, 1, 2, 2,\r\n];\r\nexport const reg3b_Vph_J = [0, 1, 0, 1, 3, 6, 7, 8, 0, 1, 2, 5, 6, 10, 3, 6, 10, 0, 2, 1, 2, 0, 1, 4, 5, 0, 0, 1, 2, 6];\r\nexport const reg3b_Vph_n = [\r\n  -0.225196934336318e-8, 0.140674363313486e-7, 0.23378408528056e-5, -0.331833715229001e-4, 0.107956778514318e-2,\r\n  -0.271382067378863, 0.107202262490333e1, -0.853821329075382, -0.215214194340526e-4, 0.76965608822273e-3,\r\n  -0.431136580433864e-2, 0.453342167309331, -0.507749535873652, -0.100475154528389e3, -0.219201924648793,\r\n  -0.321087965668917e1, 0.607567815637771e3, 0.557686450685932e-3, 0.18749904002955, 0.905368030448107e-2,\r\n  0.285417173048685, 0.329924030996098e-1, 0.239897419685483, 0.482754995951394e1, -0.118035753702231e2,\r\n  0.169490044091791, -0.179967222507787e-1, 0.371810116332674e-1, -0.536288335065096e-1, 0.16069710109252e1,\r\n];\r\n\r\n// IAPWS SR3-03 Table 10: backward equation T3a(p,s)\r\nexport const reg3a_Tps_I = [\r\n  -12, -12, -10, -10, -10, -10, -8, -8, -8, -8, -6, -6, -6, -5, -5, -5, -4, -4, -4, -2, -2, -1, -1, 0, 0, 0, 1, 2, 2, 3,\r\n  8, 8, 10,\r\n];\r\nexport const reg3a_Tps_J = [\r\n  28, 32, 4, 10, 12, 14, 5, 7, 8, 28, 2, 6, 32, 0, 14, 32, 6, 10, 36, 1, 4, 1, 6, 0, 1, 4, 0, 0, 3, 2, 0, 1, 2,\r\n];\r\nexport const reg3a_Tps_n = [\r\n  0.150042008263875e10, -0.159397258480424e12, 0.502181140217975e-3, -0.672057767855466e2, 0.145058545404456e4,\r\n  -0.82388953488889e4, -0.154852214233853, 0.112305046746695e2, -0.297000213482822e2, 0.438565132635495e11,\r\n  0.137837838635464e-2, -0.297478527157462e1, 0.971777947349413e13, -0.571527767052398e-4, 0.28830794977842e5,\r\n  -0.744428289262703e14, 0.128017324848921e2, -0.368275545889071e3, 0.664768904779177e16, 0.44935925195888e-1,\r\n  -0.422897836099655e1, -0.240614376434179, -0.474341365254924e1, 0.72409399912611, 0.923874349695897,\r\n  0.399043655281015e1, 0.384066651868009e-1, -0.359344365571848e-2, -0.735196448821653, 0.188367048396131,\r\n  0.141064266818704e-3, -0.257418501496337e-2, 0.123220024851555e-2,\r\n];\r\n\r\n// IAPWS SR3-03 Table 11: backward equation T3b(p,s)\r\nexport const reg3b_Tps_I = [\r\n  -12, -12, -12, -12, -8, -8, -8, -6, -6, -6, -5, -5, -5, -5, -5, -4, -3, -3, -2, 0, 2, 3, 4, 5, 6, 8, 12, 14,\r\n];\r\nexport const reg3b_Tps_J = [1, 3, 4, 7, 0, 1, 3, 0, 2, 4, 0, 1, 2, 4, 6, 12, 1, 6, 2, 0, 1, 1, 0, 24, 0, 3, 1, 2];\r\nexport const reg3b_Tps_n = [\r\n  0.52711170160166, -0.401317830052742e2, 0.153020073134484e3, -0.224799398218827e4, -0.193993484669048,\r\n  -0.140467557893768e1, 0.426799878114024e2, 0.752810643416743, 0.226657238616417e2, -0.622873556909932e3,\r\n  -0.660823667935396, 0.841267087271658, -0.253717501764397e2, 0.485708963532948e3, 0.880531517490555e3,\r\n  0.265015592794626e7, -0.359287150025783, -0.656991567673753e3, 0.241768149185367e1, 0.856873461222588,\r\n  0.655143675313458, -0.213535213206406, 0.562974957606348e-2, -0.316955725450471e15, -0.699997000152457e-3,\r\n  0.119845803210767e-1, 0.193848122022095e-4, -0.215095749182309e-4,\r\n];\r\n\r\n// IAPWS SR3-03 Table 13: backward equation V3a(p,s)\r\nexport const reg3a_Vps_I = [\r\n  -12, -12, -12, -10, -10, -10, -10, -8, -8, -8, -8, -6, -5, -4, -3, -3, -2, -2, -1, -1, 0, 0, 0, 1, 2, 4, 5, 6,\r\n];\r\nexport const reg3a_Vps_J = [10, 12, 14, 4, 8, 10, 20, 5, 6, 14, 16, 28, 1, 5, 2, 4, 3, 8, 1, 2, 0, 1, 3, 0, 0, 2, 2, 0];\r\nexport const reg3a_Vps_n = [\r\n  0.795544074093975e2, -0.23826124298459e4, 0.176813100617787e5, -0.110524727080379e-2, -0.153213833655326e2,\r\n  0.297544599376982e3, -0.350315206871242e8, 0.277513761062119, -0.523964271036888, -0.148011182995403e6,\r\n  0.160014899374266e7, 0.170802322663427e13, 0.246866996006494e-3, 0.16532608479798e1, -0.118008384666987,\r\n  0.2537986423559e1, 0.965127704669424, -0.282172420532826e2, 0.203224612353823, 0.110648186063513e1, 0.52612794845128,\r\n  0.277000018736321, 0.108153340501132e1, -0.744127885357893e-1, 0.164094443541384e-1, -0.680468275301065e-1,\r\n  0.25798857610164e-1, -0.145749861944416e-3,\r\n];\r\n\r\n// IAPWS SR3-03 Table 14: backward equation V3b(p,s)\r\nexport const reg3b_Vps_I = [\r\n  -12, -12, -12, -12, -12, -12, -10, -10, -10, -10, -8, -5, -5, -5, -4, -4, -4, -4, -3, -2, -2, -2, -2, -2, -2, 0, 0, 0,\r\n  1, 1, 2,\r\n];\r\nexport const reg3b_Vps_J = [\r\n  0, 1, 2, 3, 5, 6, 0, 1, 2, 4, 0, 1, 2, 3, 0, 1, 2, 3, 1, 0, 1, 2, 3, 4, 12, 0, 1, 2, 0, 2, 2,\r\n];\r\nexport const reg3b_Vps_n = [\r\n  0.591599780322238e-4, -0.185465997137856e-2, 0.104190510480013e-1, 0.59864730203859e-2, -0.771391189901699,\r\n  0.172549765557036e1, -0.467076079846526e-3, 0.134533823384439e-1, -0.808094336805495e-1, 0.508139374365767,\r\n  0.128584643361683e-2, -0.163899353915435e1, 0.586938199318063e1, -0.292466667918613e1, -0.614076301499537e-2,\r\n  0.576199014049172e1, -0.121613320606788e2, 0.167637540957944e1, -0.744135838773463e1, 0.378168091437659e-1,\r\n  0.401432203027688e1, 0.160279837479185e2, 0.317848779347728e1, -0.358362310304853e1, -0.115995260446827e7,\r\n  0.199256573577909, -0.122270624794624, -0.191449143716586e2, -0.150448002905284e-1, 0.146407900162154e2,\r\n  -0.32747778718823e1,\r\n];\r\n\r\n// IAPWS SR3-03 Table 17: backward boundary equation Psat(h)\r\nexport const reg3_PSATh_I = [0, 1, 1, 1, 1, 5, 7, 8, 14, 20, 22, 24, 28, 36];\r\nexport const reg3_PSATh_J = [0, 1, 3, 4, 36, 3, 0, 24, 16, 16, 3, 18, 8, 24];\r\nexport const reg3_PSATh_n = [\r\n  0.600073641753024, -0.936203654849857e1, 0.246590798594147e2, -0.107014222858224e3, -0.915821315805768e14,\r\n  -0.862332011700662e4, -0.235837344740032e2, 0.252304969384128e18, -0.389718771997719e19, -0.333775713645296e23,\r\n  0.356499469636328e11, -0.148547544720641e27, 0.330611514838798e19, 0.813641294467829e38,\r\n];\r\n\r\n// IAPWS SR3-03 Table 19: backward boundary equation Psat(s)\r\nexport const reg3_PSATs_I = [0, 1, 1, 4, 12, 12, 16, 24, 28, 32];\r\nexport const reg3_PSATs_J = [0, 1, 32, 7, 4, 14, 36, 10, 0, 18];\r\nexport const reg3_PSATs_n = [\r\n  0.639767553612785, -0.129727445396014e2, -0.224595125848403e16, 0.177466741801846e7, 0.717079349571538e10,\r\n  -0.378829107169011e18, -0.955586736431328e35, 0.187269814676188e24, 0.119254746466473e12, 0.110649277244882e37,\r\n];\r\n\r\n// IAPWS SR4-04 (2014) table 3 coefficients for p(h,s) for region 3a\r\nexport const reg3a_pHS_I = [\r\n  0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 6, 7, 8, 10, 10, 14, 18, 20, 22, 22, 24, 28, 28, 32, 32,\r\n];\r\nexport const reg3a_pHS_J = [\r\n  0, 1, 5, 0, 3, 4, 8, 14, 6, 16, 0, 2, 3, 0, 1, 4, 5, 28, 28, 24, 1, 32, 36, 22, 28, 36, 16, 28, 36, 16, 36, 10, 28,\r\n];\r\nexport const reg3a_pHS_n = [\r\n  7.70889828326934, -2.60835009128688e1, 2.67416218930389e2, 1.72221089496844e1, -2.9354233214597e2, 6.14135601882478e2,\r\n  -6.10562757725674e4, -6.51272251118219e7, 7.35919313521937e4, -1.16646505914191e10, 3.55267086434461e1,\r\n  -5.96144543825955e2, -4.75842430145708e2, 6.96781965359503e1, 3.35674250377312e2, 2.50526809130882e4,\r\n  1.46997380630766e5, 5.38069315091534e19, 1.43619827291346e21, 3.64985866165994e19, -2.54741561156775e3,\r\n  2.40120197096563e27, -3.93847464679496e29, 1.47073407024852e24, -4.26391250432059e31, 1.94509340621077e38,\r\n  6.66212132114896e23, 7.06777016552858e33, 1.75563621975576e41, 1.08408607429124e28, 7.30872705175151e43,\r\n  1.5914584739887e24, 3.77121605943324e40,\r\n];\r\n\r\n// IAPWS SR4-04 (2014) table 4 coefficients for p(h,s) for region 3b\r\nexport const reg3b_pHS_I = [\r\n  -12, -12, -12, -12, -12, -10, -10, -10, -10, -8, -8, -6, -6, -6, -6, -5, -4, -4, -4, -3, -3, -3, -3, -2, -2, -1, 0, 2,\r\n  2, 5, 6, 8, 10, 14, 14,\r\n];\r\nexport const reg3b_pHS_J = [\r\n  2, 10, 12, 14, 20, 2, 10, 14, 18, 2, 8, 2, 6, 7, 8, 10, 4, 5, 8, 1, 3, 5, 6, 0, 1, 0, 3, 0, 1, 0, 1, 1, 1, 3, 7,\r\n];\r\nexport const reg3b_pHS_n = [\r\n  1.25244360717979e-13, -1.26599322553713e-2, 5.06878030140626, 3.17847171154202e1, -3.91041161399932e5,\r\n  -9.75733406392044e-11, -1.86312419488279e1, 5.10973543414101e2, 3.73847005822362e5, 2.99804024666572e-8,\r\n  2.00544393820342e1, -4.98030487662829e-6, -1.0230180636003e1, 5.52819126990325e1, -2.06211367510878e2,\r\n  -7.94012232324823e3, 7.82248472028153, -5.86544326902468e1, 3.55073647696481e3, -1.15303107290162e-4,\r\n  -1.75092403171802, 2.5798168774816e2, -7.27048374179467e2, 1.21644822609198e-4, 3.93137871762692e-2,\r\n  7.04181005909296e-3, -8.2910820069811e1, -2.6517881813125e-1, 1.37531682453991e1, -5.22394090753046e1,\r\n  2.40556298941048e3, -2.27361631268929e4, 8.90746343932567e4, -2.39234565822486e7, 5.68795808129714e9,\r\n];\r\n\r\n// IAPWS SR4-04 (2014) table 9 coefficients for boundary equation h'1(s)\r\nexport const reg3_h1_satLiqS_I = [\r\n  0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 7, 8, 12, 12, 14, 14, 16, 20, 20, 22, 24, 28, 32, 32,\r\n];\r\nexport const reg3_h1_satLiqS_J = [\r\n  14, 36, 3, 16, 0, 5, 4, 36, 4, 16, 24, 18, 24, 1, 4, 2, 4, 1, 22, 10, 12, 28, 8, 3, 0, 6, 8,\r\n];\r\nexport const reg3_h1_satLiqS_n = [\r\n  3.32171191705237e-1, 6.11217706323496e-4, -8.82092478906822, -4.5562819254325e-1, -2.63483840850452e-5,\r\n  -2.23949661148062e1, -4.28398660164013, -6.16679338856916e-1, -1.4682303110404e1, 2.84523138727299e2,\r\n  -1.13398503195444e2, 1.15671380760859e3, 3.95551267359325e2, -1.54891257229285, 1.94486637751291e1, -3.57915139457043,\r\n  -3.35369414148819, -6.6442679633246e-1, 3.23321885383934e4, 3.31766744667084e3, -2.23501257931087e4,\r\n  5.73953875852936e6, 1.73226193407919e2, -3.63968822121321e-2, 8.34596332878346e-7, 5.03611916682674,\r\n  6.55444787064505e1,\r\n];\r\n\r\n// IAPWS SR4-04 (2014) table 10 coefficients for boundary equation h'3a(s)\r\nexport const reg3_h3a_satLiqS_I = [0, 0, 0, 0, 2, 3, 4, 4, 5, 5, 6, 7, 7, 7, 10, 10, 10, 32, 32];\r\nexport const reg3_h3a_satLiqS_J = [1, 4, 10, 16, 1, 36, 3, 16, 20, 36, 4, 2, 28, 32, 14, 32, 36, 0, 6];\r\nexport const reg3_h3a_satLiqS_n = [\r\n  8.22673364673336e-1, 1.81977213534479e-1, -1.12000260313624e-2, -7.46778287048033e-4, -1.79046263257381e-1,\r\n  4.24220110836657e-2, -3.41355823438768e-1, -2.09881740853565, -8.22477343323596, -4.99684082076008,\r\n  1.91413958471069e-1, 5.81062241093136e-2, -1.65505498701029e3, 1.58870443421201e3, -8.50623535172818e1,\r\n  -3.17714386511207e4, -9.45890406632871e4, -1.3927384708869e-6, 6.3105253224098e-1,\r\n];\r\n\r\n// IAPWS SR4-04 (2014) table 16 coefficients for boundary equation h\"2ab(s)\r\nexport const reg3_h2ab_satVapS_I = [\r\n  1, 1, 2, 2, 4, 4, 7, 8, 8, 10, 12, 12, 18, 20, 24, 28, 28, 28, 28, 28, 32, 32, 32, 32, 32, 36, 36, 36, 36, 36,\r\n];\r\nexport const reg3_h2ab_satVapS_J = [\r\n  8, 24, 4, 32, 1, 2, 7, 5, 12, 1, 0, 7, 10, 12, 32, 8, 12, 20, 22, 24, 2, 7, 12, 14, 24, 10, 12, 20, 22, 28,\r\n];\r\nexport const reg3_h2ab_satVapS_n = [\r\n  -5.24581170928788e2, -9.26947218142218e6, -2.37385107491666e2, 2.10770155812776e10, -2.39494562010986e1,\r\n  2.21802480294197e2, -5.10472533393438e6, 1.24981396109147e6, 2.00008436996201e9, -8.15158509791035e2,\r\n  -1.57612685637523e2, -1.14200422332791e10, 6.62364680776872e15, -2.27622818296144e18, -1.71048081348406e31,\r\n  6.60788766938091e15, 1.66320055886021e22, -2.18003784381501e29, -7.87276140295618e29, 1.51062329700346e31,\r\n  7.95732170300541e6, 1.31957647355347e15, -3.2509706829914e23, -4.18600611419248e25, 2.97478906557467e34,\r\n  -9.53588761745473e19, 1.66957699620939e24, -1.75407764869978e32, 3.47581490626396e34, -7.10971318427851e38,\r\n];\r\n\r\n// IAPWS SR4-04 (2014) table 17 coefficients for boundary equation h\"2c3b(s)\r\nexport const reg3_h2c3b_satVapS_I = [0, 0, 0, 1, 1, 5, 6, 7, 8, 8, 12, 16, 22, 22, 24, 36];\r\nexport const reg3_h2c3b_satVapS_J = [0, 3, 4, 0, 12, 36, 12, 16, 2, 20, 32, 36, 2, 32, 7, 20];\r\nexport const reg3_h2c3b_satVapS_n = [\r\n  1.04351280732769, -2.27807912708513, 1.80535256723202, 4.20440834792042e-1, -1.0572124483466e5, 4.36911607493884e24,\r\n  -3.28032702839753e11, -6.7868676080427e15, 7.43957464645363e3, -3.56896445355761e19, 1.67590585186801e31,\r\n  -3.55028625419105e37, 3.96611982166538e11, -4.14716268484468e40, 3.59080103867382e18, -1.16994334851995e40,\r\n];\r\n\r\n// IAPWS SR4-04 (2014) table 23 coefficients for boundary equation hB13(s)\r\nexport const reg3_hB13_I = [0, 1, 1, 3, 5, 6];\r\nexport const reg3_hB13_J = [0, -2, 2, -12, -4, -3];\r\nexport const reg3_hB13_n = [\r\n  9.13965547600543e-1, -4.30944856041991e-5, 6.03235694765419e1, 1.17518273082168e-18, 2.20000904781292e-1,\r\n  -6.90815545851641e1,\r\n];\r\n\r\n// IAPWS SR4-04 (2014) table 25 coefficients for boundary equation TB23(h,s)\r\nexport const reg3_TB23HS_I = [-12, -10, -8, -4, -3, -2, -2, -2, -2, 0, 1, 1, 1, 3, 3, 5, 6, 6, 8, 8, 8, 12, 12, 14, 14];\r\nexport const reg3_TB23HS_J = [\r\n  10, 8, 3, 4, 3, -6, 2, 3, 4, 0, -3, -2, 10, -2, -1, -5, -6, -3, -8, -2, -1, -12, -1, -12, 1,\r\n];\r\nexport const reg3_TB23HS_n = [\r\n  6.2909626082981e-4, -8.23453502583165e-4, 5.15446951519474e-8, -1.17565945784945, 3.48519684726192,\r\n  -5.07837382408313e-12, -2.84637670005479, -2.36092263939673, 6.01492324973779, 1.48039650824546, 3.60075182221907e-4,\r\n  -1.26700045009952e-2, -1.22184332521413e6, 1.49276502463272e-1, 6.98733471798484e-1, -2.52207040114321e-2,\r\n  1.47151930985213e-2, -1.08618917681849, -9.36875039816322e-4, 8.19877897570217e1, -1.82041861521835e2,\r\n  2.61907376402688e-6, -2.9162641702596e4, 1.40660774926165e-5, 7.83237062349385e6,\r\n];\r\n\r\n// IAPWS SR4-04 (2014) table 28 coefficients for boundary equation Tsat(h,s)\r\nexport const reg3_TsatHS_I = [\r\n  0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 8, 10, 10, 12, 14, 14, 16, 16, 18, 18, 18, 20,\r\n  28,\r\n];\r\nexport const reg3_TsatHS_J = [\r\n  0, 3, 12, 0, 1, 2, 5, 0, 5, 8, 0, 2, 3, 4, 0, 1, 1, 2, 4, 16, 6, 8, 22, 1, 20, 36, 24, 1, 28, 12, 32, 14, 22, 36, 24,\r\n  36,\r\n];\r\nexport const reg3_TsatHS_n = [\r\n  1.79882673606601e-1, -2.67507455199603e-1, 1.162767226126, 1.47545428713616e-1, -5.12871635973248e-1,\r\n  4.21333567697984e-1, 5.6374952218987e-1, 4.29274443819153e-1, -3.3570455214214, 1.08890916499278e1,\r\n  -2.48483390456012e-1, 3.0415322190639e-1, -4.94819763939905e-1, 1.07551674933261, 7.33888415457688e-2,\r\n  1.40170545411085e-2, -1.06110975998808e-1, 1.68324361811875e-2, 1.25028363714877, 1.01316840309509e3,\r\n  -1.51791558000712, 5.24277865990866e1, 2.30495545563912e4, 2.49459806365456e-2, 2.10796467412137e6,\r\n  3.66836848613065e8, -1.44814105365163e8, -1.7927637300359e-3, 4.89955602100459e9, 4.71262212070518e2,\r\n  -8.29294390198652e10, -1.71545662263191e3, 3.55777682973575e6, 5.86062760258436e11, -1.29887635078195e7,\r\n  3.17247449371057e10,\r\n];\r\n\r\n//IAPWS SR5-05 Table 1 - Region 3 subregion boundary coefficients T3x = f(p), except for T3ef(p)\r\nexport const reg3_T3ab_I = [0, 1, 2, -1, -2];\r\nexport const reg3_T3ab_n = [\r\n  0.154793642129415e4, -0.187661219490113e3, 0.213144632222113e2, -0.191887498864292e4, 0.918419702359447e3,\r\n];\r\n\r\nexport const reg3_T3cd_I = [0, 1, 2, 3];\r\nexport const reg3_T3cd_n = [0.585276966696349e3, 0.278233532206915e1, -0.127283549295878e-1, 0.159090746562729e-3];\r\n\r\nexport const reg3_T3gh_I = [0, 1, 2, 3, 4];\r\nexport const reg3_T3gh_n = [\r\n  -0.249284240900418e5, 0.428143584791546e4, -0.26902917314013e3, 0.751608051114157e1, -0.787105249910383e-1,\r\n];\r\n\r\nexport const reg3_T3ij_I = [0, 1, 2, 3, 4];\r\nexport const reg3_T3ij_n = [\r\n  0.584814781649163e3, -0.616179320924617, 0.260763050899562, -0.5870710768644593e-2, 0.515308185433082e-4,\r\n];\r\n\r\nexport const reg3_T3jk_I = [0, 1, 2, 3, 4];\r\nexport const reg3_T3jk_n = [\r\n  0.617229772068439e3, -0.770600270141675e1, 0.697072596851896, -0.157391839848015e-1, 0.137897492684194e-3,\r\n];\r\n\r\nexport const reg3_T3mn_I = [0, 1, 2, 3];\r\nexport const reg3_T3mn_n = [0.535339483742384e3, 0.761978122720128e1, -0.158365725441648, 0.192871054508108e-2];\r\n\r\nexport const reg3_T3op_I = [0, 1, 2, -1, -2];\r\nexport const reg3_T3op_n = [\r\n  0.969461372400213e3, -0.332500170441278e3, 0.642859598466067e2, 0.773845935768222e3, -0.152313732937084e4,\r\n];\r\n\r\nexport const reg3_T3qu_I = [0, 1, 2, 3];\r\nexport const reg3_T3qu_n = [0.565603648239126e3, 0.529062258221222e1, -0.102020639611016, 0.122240301070145e-2];\r\n\r\nexport const reg3_T3rx_I = [0, 1, 2, 3];\r\nexport const reg3_T3rx_n = [0.584561202520006e3, -0.102961025163669e1, 0.243293362700452, -0.294905044740799e-2];\r\n\r\n// IAPWS SR5-05 Table 4 - Region 3 Reducing Quantities , coefficients, and parameters for subregions 3a through 3t\r\nexport const reg3a_v = 0.0024;\r\nexport const reg3a_p = 100;\r\nexport const reg3a_T = 760;\r\nexport const reg3a_a = 0.085;\r\nexport const reg3a_b = 0.817;\r\nexport const reg3a_c = 1;\r\nexport const reg3a_d = 1;\r\nexport const reg3a_e = 1;\r\n\r\nexport const reg3b_v = 0.0041;\r\nexport const reg3b_p = 100;\r\nexport const reg3b_T = 860;\r\nexport const reg3b_a = 0.28;\r\nexport const reg3b_b = 0.779;\r\nexport const reg3b_c = 1;\r\nexport const reg3b_d = 1;\r\nexport const reg3b_e = 1;\r\n\r\nexport const reg3c_v = 0.0022;\r\nexport const reg3c_p = 40;\r\nexport const reg3c_T = 690;\r\nexport const reg3c_a = 0.259;\r\nexport const reg3c_b = 0.903;\r\nexport const reg3c_c = 1;\r\nexport const reg3c_d = 1;\r\nexport const reg3c_e = 1;\r\n\r\nexport const reg3d_v = 0.0029;\r\nexport const reg3d_p = 40;\r\nexport const reg3d_T = 690;\r\nexport const reg3d_a = 0.559;\r\nexport const reg3d_b = 0.939;\r\nexport const reg3d_c = 1;\r\nexport const reg3d_d = 1;\r\nexport const reg3d_e = 4;\r\n\r\nexport const reg3e_v = 0.0032;\r\nexport const reg3e_p = 40;\r\nexport const reg3e_T = 710;\r\nexport const reg3e_a = 0.587;\r\nexport const reg3e_b = 0.918;\r\nexport const reg3e_c = 1;\r\nexport const reg3e_d = 1;\r\nexport const reg3e_e = 1;\r\n\r\nexport const reg3f_v = 0.0064;\r\nexport const reg3f_p = 40;\r\nexport const reg3f_T = 730;\r\nexport const reg3f_a = 0.587;\r\nexport const reg3f_b = 0.891;\r\nexport const reg3f_c = 0.5;\r\nexport const reg3f_d = 1;\r\nexport const reg3f_e = 4;\r\n\r\nexport const reg3g_v = 0.0027;\r\nexport const reg3g_p = 25;\r\nexport const reg3g_T = 660;\r\nexport const reg3g_a = 0.872;\r\nexport const reg3g_b = 0.971;\r\nexport const reg3g_c = 1;\r\nexport const reg3g_d = 1;\r\nexport const reg3g_e = 4;\r\n\r\nexport const reg3h_v = 0.0032;\r\nexport const reg3h_p = 25;\r\nexport const reg3h_T = 660;\r\nexport const reg3h_a = 0.898;\r\nexport const reg3h_b = 0.983;\r\nexport const reg3h_c = 1;\r\nexport const reg3h_d = 1;\r\nexport const reg3h_e = 4;\r\n\r\nexport const reg3i_v = 0.0041;\r\nexport const reg3i_p = 25;\r\nexport const reg3i_T = 660;\r\nexport const reg3i_a = 0.91;\r\nexport const reg3i_b = 0.984;\r\nexport const reg3i_c = 0.5;\r\nexport const reg3i_d = 1;\r\nexport const reg3i_e = 4;\r\n\r\nexport const reg3j_v = 0.0054;\r\nexport const reg3j_p = 25;\r\nexport const reg3j_T = 670;\r\nexport const reg3j_a = 0.875;\r\nexport const reg3j_b = 0.964;\r\nexport const reg3j_c = 0.5;\r\nexport const reg3j_d = 1;\r\nexport const reg3j_e = 4;\r\n\r\nexport const reg3k_v = 0.0077;\r\nexport const reg3k_p = 25;\r\nexport const reg3k_T = 680;\r\nexport const reg3k_a = 0.802;\r\nexport const reg3k_b = 0.935;\r\nexport const reg3k_c = 1;\r\nexport const reg3k_d = 1;\r\nexport const reg3k_e = 1;\r\n\r\nexport const reg3l_v = 0.0026;\r\nexport const reg3l_p = 24;\r\nexport const reg3l_T = 650;\r\nexport const reg3l_a = 0.908;\r\nexport const reg3l_b = 0.989;\r\nexport const reg3l_c = 1;\r\nexport const reg3l_d = 1;\r\nexport const reg3l_e = 4;\r\n\r\nexport const reg3m_v = 0.0028;\r\nexport const reg3m_p = 23;\r\nexport const reg3m_T = 650;\r\nexport const reg3m_a = 1.0;\r\nexport const reg3m_b = 0.997;\r\nexport const reg3m_c = 1;\r\nexport const reg3m_d = 0.25;\r\nexport const reg3m_e = 1;\r\n\r\nexport const reg3n_v = 0.0031;\r\nexport const reg3n_p = 23;\r\nexport const reg3n_T = 650;\r\nexport const reg3n_a = 0.976;\r\nexport const reg3n_b = 0.997;\r\n\r\nexport const reg3o_v = 0.0034;\r\nexport const reg3o_p = 23;\r\nexport const reg3o_T = 650;\r\nexport const reg3o_a = 0.974;\r\nexport const reg3o_b = 0.996;\r\nexport const reg3o_c = 0.5;\r\nexport const reg3o_d = 1;\r\nexport const reg3o_e = 1;\r\n\r\nexport const reg3p_v = 0.0041;\r\nexport const reg3p_p = 23;\r\nexport const reg3p_T = 650;\r\nexport const reg3p_a = 0.972;\r\nexport const reg3p_b = 0.997;\r\nexport const reg3p_c = 0.5;\r\nexport const reg3p_d = 1;\r\nexport const reg3p_e = 1;\r\n\r\nexport const reg3q_v = 0.0022;\r\nexport const reg3q_p = 23;\r\nexport const reg3q_T = 650;\r\nexport const reg3q_a = 0.848;\r\nexport const reg3q_b = 0.983;\r\nexport const reg3q_c = 1;\r\nexport const reg3q_d = 1;\r\nexport const reg3q_e = 4;\r\n\r\nexport const reg3r_v = 0.0054;\r\nexport const reg3r_p = 23;\r\nexport const reg3r_T = 650;\r\nexport const reg3r_a = 0.874;\r\nexport const reg3r_b = 0.982;\r\nexport const reg3r_c = 1;\r\nexport const reg3r_d = 1;\r\nexport const reg3r_e = 1;\r\n\r\nexport const reg3s_v = 0.0022;\r\nexport const reg3s_p = 21;\r\nexport const reg3s_T = 640;\r\nexport const reg3s_a = 0.886;\r\nexport const reg3s_b = 0.99;\r\nexport const reg3s_c = 1;\r\nexport const reg3s_d = 1;\r\nexport const reg3s_e = 4;\r\n\r\nexport const reg3t_v = 0.0088;\r\nexport const reg3t_p = 20;\r\nexport const reg3t_T = 650;\r\nexport const reg3t_a = 0.803;\r\nexport const reg3t_b = 1.02;\r\nexport const reg3t_c = 1;\r\nexport const reg3t_d = 1;\r\nexport const reg3t_e = 1;\r\n\r\n// IAPWS SR5-05 Table 9 - Region 3 subregion boundary coefficients T3uv and T3wx\r\nexport const reg3_T3uv_I = [0, 1, 2, 3];\r\nexport const reg3_T3uv_n = [0.528199646263062e3, 0.890579602135307e1, -0.222814134903755, 0.286791682263697e-2];\r\n\r\nexport const reg3_T3wx_I = [0, 1, 2, -1, -2];\r\nexport const reg3_T3wx_n = [\r\n  0.72805260914538e1, 0.973505869861952e2, 0.147370491183191e2, 0.329196213998375e3, 0.873371668682417e3,\r\n];\r\n\r\n// IAPWS SR5-05 Table 12 - Region 3 Reducing Quantities , coefficients, and parameters for subregions 3u through 3z\r\nexport const reg3u_v = 0.0026;\r\nexport const reg3u_p = 23;\r\nexport const reg3u_T = 650;\r\nexport const reg3u_a = 0.902;\r\nexport const reg3u_b = 0.988;\r\nexport const reg3u_c = 1;\r\nexport const reg3u_d = 1;\r\nexport const reg3u_e = 1;\r\n\r\nexport const reg3v_v = 0.0031;\r\nexport const reg3v_p = 23;\r\nexport const reg3v_T = 650;\r\nexport const reg3v_a = 0.96;\r\nexport const reg3v_b = 0.995;\r\nexport const reg3v_c = 1;\r\nexport const reg3v_d = 1;\r\nexport const reg3v_e = 1;\r\n\r\nexport const reg3w_v = 0.0039;\r\nexport const reg3w_p = 23;\r\nexport const reg3w_T = 650;\r\nexport const reg3w_a = 0.959;\r\nexport const reg3w_b = 0.995;\r\nexport const reg3w_c = 1;\r\nexport const reg3w_d = 1;\r\nexport const reg3w_e = 4;\r\n\r\nexport const reg3x_v = 0.0049;\r\nexport const reg3x_p = 23;\r\nexport const reg3x_T = 650;\r\nexport const reg3x_a = 0.91;\r\nexport const reg3x_b = 0.988;\r\nexport const reg3x_c = 1;\r\nexport const reg3x_d = 1;\r\nexport const reg3x_e = 1;\r\n\r\nexport const reg3y_v = 0.0031;\r\nexport const reg3y_p = 22;\r\nexport const reg3y_T = 650;\r\nexport const reg3y_a = 0.996;\r\nexport const reg3y_b = 0.994;\r\nexport const reg3y_c = 1;\r\nexport const reg3y_d = 1;\r\nexport const reg3y_e = 4;\r\n\r\nexport const reg3z_v = 0.0038;\r\nexport const reg3z_p = 22;\r\nexport const reg3z_T = 650;\r\nexport const reg3z_a = 0.993;\r\nexport const reg3z_b = 0.994;\r\nexport const reg3z_c = 1;\r\nexport const reg3z_d = 1;\r\nexport const reg3z_e = 4;\r\n\r\n// IAPWS SR5-05 Table A1.1 - Region 3a Coefficients for backward equations v(P, T)\r\nexport const reg3a_I = [\r\n  -12, -12, -12, -10, -10, -10, -8, -8, -8, -6, -5, -5, -5, -4, -3, -3, -3, -3, -2, -2, -2, -1, -1, -1, 0, 0, 1, 1, 2,\r\n  2,\r\n];\r\nexport const reg3a_J = [5, 10, 12, 5, 10, 12, 5, 8, 10, 1, 1, 5, 10, 8, 0, 1, 3, 6, 0, 2, 3, 0, 1, 2, 0, 1, 0, 2, 0, 2];\r\nexport const reg3a_n = [\r\n  0.110879558823853e-2, 0.572616740810616e3, -0.767051948380852e5, -0.253321069529674e-1, 0.628008049345689e4,\r\n  0.234105654131876e6, 0.216867826045856, -0.156237904341963e3, -0.269893956176613e5, -0.180407100085505e-3,\r\n  0.116732227668261e-2, 0.26698704085604e2, 0.282776617243286e5, -0.242431520029523e4, 0.435217323022733e-3,\r\n  -0.0122494831387441, 1.79357604019989, 44.2729521058314, -0.00593223489018342, 0.453186261685774, 1.3582570312914,\r\n  0.0408748415856745, 0.474686397863312, 1.18646814997915, 0.546987265727549, 0.195266770452643, -0.0502268790869663,\r\n  -0.369645308193377, 0.0063382803752842, 0.0797441793901017,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.2 - Region 3b Coefficients for backward equations v(P, T)\r\nexport const reg3b_I = [\r\n  -12, -12, -10, -10, -8, -6, -6, -6, -5, -5, -5, -4, -4, -4, -3, -3, -3, -3, -3, -2, -2, -2, -1, -1, 0, 0, 1, 1, 2, 3,\r\n  4, 4,\r\n];\r\nexport const reg3b_J = [\r\n  10, 12, 8, 14, 8, 5, 6, 8, 5, 8, 10, 2, 4, 5, 0, 1, 2, 3, 5, 0, 2, 5, 0, 2, 0, 1, 0, 2, 0, 2, 0, 1,\r\n];\r\nexport const reg3b_n = [\r\n  -0.827670470003621e-1, 0.416887126010565e2, 0.483651982197059e-1, -0.291032084950276e5, -0.111422582236948e3,\r\n  -0.202300083904014e-1, 0.294002509338515e3, 0.140244997609658e3, -0.344384158811459e3, 0.361182452612149e3,\r\n  -0.140699677420738e4, -0.202023902676481e-2, 0.171346792457471e3, -0.425597804058632e1, 0.691346085000334e-5,\r\n  0.151140509678925e-2, -0.0416375290166236, -41.3754957011042, -50.6673295721637, -0.000572212965569023,\r\n  6.08817368401785, 23.9600660256161, 0.0122261479925384, 2.16356057692938, 0.398198903368642, -0.116892827834085,\r\n  -0.102845919373532, -0.492676637589284, 0.065554045640679, -0.24046253507853, -0.0269798180310075, 0.128369435967012,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.3 - Region 3c Coefficients for backward equations v(P, T)\r\nexport const reg3c_I = [\r\n  -12, -12, -12, -10, -10, -10, -8, -8, -8, -6, -5, -5, -5, -4, -4, -3, -3, -2, -2, -2, -1, -1, -1, 0, 0, 0, 1, 1, 2, 2,\r\n  2, 2, 3, 3, 8,\r\n];\r\nexport const reg3c_J = [\r\n  6, 8, 10, 6, 8, 10, 5, 6, 7, 8, 1, 4, 7, 2, 8, 0, 3, 0, 4, 5, 0, 1, 2, 0, 1, 2, 0, 2, 0, 1, 3, 7, 0, 7, 1,\r\n];\r\nexport const reg3c_n = [\r\n  0.31196778876303e1, 0.276713458847564e5, 0.322583103403269e8, -0.342416065095363e3, -0.899732529907377e6,\r\n  -0.793892049821251e8, 0.953193003217388e2, 0.229784742345072e4, 0.175336675322499e6, 0.791214365222792e7,\r\n  0.319933345844209e-4, -0.659508863555767e2, -0.833426563212851e6, 0.645734680583292e-1, -0.382031020570813e7,\r\n  0.406398848470079e-4, 0.310327498492008e2, -0.000892996718483724, 234.604891591616, 3775.15668966951,\r\n  0.0158646812591361, 0.707906336241843, 12.601622514657, 0.736143655772152, 0.676544268999101, -17.8100588189137,\r\n  -0.156531975531713, 11.7707430048158, 0.0840143653860447, -0.186442467471949, -44.0170203949645, 1232904.23502494,\r\n  -0.0240650039730845, -1070777.16660869, 0.0438319858566475,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.4 - Region 3d Coefficients for backward equations v(P, T)\r\nexport const reg3d_I = [\r\n  -12, -12, -12, -12, -12, -12, -10, -10, -10, -10, -10, -10, -10, -8, -8, -8, -8, -6, -6, -5, -5, -5, -5, -4, -4, -4,\r\n  -3, -3, -2, -2, -1, -1, -1, 0, 0, 1, 1, 3,\r\n];\r\nexport const reg3d_J = [\r\n  4, 6, 7, 10, 12, 16, 0, 2, 4, 6, 8, 10, 14, 3, 7, 8, 10, 6, 8, 1, 2, 5, 7, 0, 1, 7, 2, 4, 0, 1, 0, 1, 5, 0, 2, 0, 6,\r\n  0,\r\n];\r\nexport const reg3d_n = [\r\n  -0.452484847171645e-9, 0.315210389538801e-4, -0.214991352047545e-2, 0.508058874808345e3, -0.127123036845932e8,\r\n  0.115371133120497e13, -0.197805728776273e-15, 0.241554806033972e-10, -0.156481703640525e-5, 0.277211346836625e-2,\r\n  -0.203578994462286e2, 0.144369489909053e7, -0.411254217946539e11, 0.623449786243773e-5, -0.221774281146038e2,\r\n  -0.689315087933158e5, -0.195419525060713e8, 0.316373510564015e4, 0.224040754426988e7, -4.36701347922356e-6,\r\n  -0.000404213852833996, -348.153203414663, -385294.213555289, 1.35203700099403e-7, 0.000134648383271089,\r\n  125031.835351736, 0.0968123678455841, 225.660517512438, -0.000190102435341872, -0.0299628410819229,\r\n  0.00500833915372121, 0.387842482998411, -1385.35367777182, 0.870745245971773, 1.71946252068742, -0.0326650121426383,\r\n  4980.44171727877, 0.00551478022765087,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.5 - Region 3e Coefficients for backward equations v(P, T)\r\nexport const reg3e_I = [\r\n  -12, -12, -10, -10, -10, -10, -10, -8, -8, -8, -6, -5, -4, -4, -3, -3, -3, -2, -2, -2, -2, -1, 0, 0, 1, 1, 1, 2, 2,\r\n];\r\nexport const reg3e_J = [14, 16, 3, 6, 10, 14, 16, 7, 8, 10, 6, 6, 2, 4, 2, 6, 7, 0, 1, 3, 4, 0, 0, 1, 0, 4, 6, 0, 2];\r\nexport const reg3e_n = [\r\n  0.715815808404721e9, -0.114328360753449e12, 0.37653100201572e-11, -0.903983668691157e-4, 0.665695908836252e6,\r\n  0.535364174960127e10, 0.794977402335603e11, 0.922230563421437e2, -0.142586073991215e6, -0.111796381424162e7,\r\n  0.89612162964076e4, -0.669989239070491e4, 0.451242538486834e-2, -0.339731325977713e2, -1.20523111552278,\r\n  47599.2667717124, -266627.750390341, -0.000153314954386524, 0.305638404828265, 123.654999499486, -1043.90794213011,\r\n  -0.0157496516174308, 0.685331118940253, 1.78373462873903, -0.54467412487891, 2045.29931318843, -22834.2359328752,\r\n  0.413197481515899, -34.1931835910405,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.6 - Region 3f Coefficients for backward equations v(P, T)\r\nexport const reg3f_I = [\r\n  0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 6, 7, 7, 10, 12, 12, 12, 14, 14, 14, 14, 14, 16, 16, 18, 18, 20,\r\n  20, 20, 22, 24, 24, 28, 32,\r\n];\r\nexport const reg3f_J = [\r\n  -3, -2, -1, 0, 1, 2, -1, 1, 2, 3, 0, 1, -5, -2, 0, -3, -8, 1, -6, -4, 1, -6, -10, -8, -4, -12, -10, -8, -6, -4, -10,\r\n  -8, -12, -10, -12, -10, -6, -12, -12, -4, -12, -12,\r\n];\r\nexport const reg3f_n = [\r\n  -0.251756547792325e-7, 0.601307193668763e-5, -0.100615977450049e-2, 0.999969140252192, 0.214107759236486e1,\r\n  -0.165175571959086e2, -0.141987303638727e-2, 0.269251915156554e1, 0.349741815858722e2, -0.300208695771783e2,\r\n  -0.131546288252539e1, -0.839091277286169e1, 0.181545608337015e-9, -0.591099206478909e-3, 0.152115067087106e1,\r\n  0.252956470663225e-4, 0.100726265203786e-14, -0.14977453386065e1, -0.793940970562969e-9, -0.150290891264717e-3,\r\n  0.151205531275133e1, 4.70942606221652e-6, 1.95049710391712e-13, -9.11627886266077e-9, 0.000604374640201265,\r\n  -2.25132933900136e-16, 6.10916973582981e-12, -3.03063908043404e-7, -1.37796070798409e-5, -0.000919296736666106,\r\n  6.39288223132545e-10, 7.53259479898699e-7, -4.00321478682929e-13, 7.56140294351614e-9, -9.12082054034891e-12,\r\n  -2.37612381140539e-8, 2.69586010591874e-5, -7.32828135157839e-11, 2.4199557830666e-10, -0.000405735532730322,\r\n  1.89424143498011e-10, -4.86632965074563e-10,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.7 - Region 3g Coefficients for backward equations v(P, T)\r\nexport const reg3g_I = [\r\n  -12, -12, -12, -12, -12, -12, -10, -10, -10, -8, -8, -8, -8, -6, -6, -5, -5, -4, -3, -2, -2, -2, -2, -1, -1, -1, 0, 0,\r\n  0, 1, 1, 1, 3, 5, 6, 8, 10, 10,\r\n];\r\nexport const reg3g_J = [\r\n  7, 12, 14, 18, 22, 24, 14, 20, 24, 7, 8, 10, 12, 8, 22, 7, 20, 22, 7, 3, 5, 14, 24, 2, 8, 18, 0, 1, 2, 0, 1, 3, 24,\r\n  22, 12, 3, 0, 6,\r\n];\r\nexport const reg3g_n = [\r\n  0.412209020652996e-4, -0.114987238280587e7, 0.94818088503208e10, -0.195788865718971e18, 0.4962507048713e25,\r\n  -0.105549884548496e29, -0.758642165988278e12, -0.922172769596101e23, 0.725379072059348e30, -0.617718249205859e2,\r\n  0.107555033344858e5, -0.379545802336487e8, 0.228646846221831e12, -0.499741093010619e7, -0.280214310054101e31,\r\n  0.104915406769586e7, 0.613754229168619e28, 0.802056715528378e32, -0.298617819828065e8, -91.0782540134681,\r\n  135033.227281565, -7129493834082110000, -1.04578785289542e36, 30.4331584444093, 5932507979.59445,\r\n  -3.64174062110798e27, 0.921791403532461, -0.337693609657471, -72.4644143758508, -0.110480239272601, 5.36516031875059,\r\n  -2914.41872156205, 6.16338176535305e39, -1.2088917586118e38, 8.18396024524612e22, 940781944.835829, -36727.9669545448,\r\n  -8375139317986550,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.8 - Region 3h Coefficients for backward equations v(P, T)\r\nexport const reg3h_I = [\r\n  -12, -12, -10, -10, -10, -10, -10, -10, -8, -8, -8, -8, -8, -6, -6, -6, -5, -5, -5, -4, -4, -3, -3, -2, -1, -1, 0, 1,\r\n  1,\r\n];\r\nexport const reg3h_J = [8, 12, 4, 6, 8, 10, 14, 16, 0, 1, 6, 7, 8, 4, 6, 8, 2, 3, 4, 2, 4, 1, 2, 0, 0, 2, 0, 0, 2];\r\nexport const reg3h_n = [\r\n  0.561379678887577e-1, 0.774135421587083e10, 0.111482975877938e-8, -0.143987128208183e-2, 0.19369655876492e4,\r\n  -0.605971823585005e9, 0.171951568124337e14, -0.185461154985145e17, 0.38785116807801e-16, -0.395464327846105e-13,\r\n  -0.170875935679023e3, -0.21201062070122e4, 0.177683337348191e8, 0.110177443629575e2, -234396.091693313,\r\n  -6561744.21999594, 1.56362212977396e-5, -2.129462570214, 13.5249306374858, 0.177189164145813, 1394.99167345464,\r\n  -0.00703670932036388, -0.152011044389648, 9.81916922991113e-5, 0.00147199658618076, 20.2618487025578,\r\n  0.89934551894424, -0.211346402240858, 24.9971752957491,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.9 - Region 3i Coefficients for backward equations v(P, T)\r\nexport const reg3i_I = [\r\n  0, 0, 0, 1, 1, 1, 1, 2, 3, 3, 4, 4, 4, 5, 5, 5, 7, 7, 8, 8, 10, 12, 12, 12, 14, 14, 14, 14, 18, 18, 18, 18, 18, 20,\r\n  20, 22, 24, 24, 32, 32, 36, 36,\r\n];\r\nexport const reg3i_J = [\r\n  0, 1, 10, -4, -2, -1, 0, 0, -5, 0, -3, -2, -1, -6, -1, 12, -4, -3, -6, 10, -8, -12, -6, -4, -10, -8, -4, 5, -12, -10,\r\n  -8, -6, 2, -12, -10, -12, -12, -8, -10, -5, -10, -8,\r\n];\r\nexport const reg3i_n = [\r\n  0.106905684359136e1, -0.148620857922333e1, 0.259862256980408e15, -0.446352055678749e-11, -0.566620757170032e-6,\r\n  -0.235302885736849e-2, -0.269226321968839, 0.922024992944392e1, 0.357633505503772e-11, -0.173942565562222e2,\r\n  0.700681785556229e-5, -0.267050351075768e-3, -0.231779669675624e1, -0.753533046979752e-12, 0.481337131452891e1,\r\n  -0.223286270422356e22, -0.118746004987383e-4, 0.646412934136496e-2, -0.410588536330937e-9, 0.422739537057241e20,\r\n  0.313698180473812e-12, 1.6439533434504e-24, -3.39823323754373e-6, -0.0135268639905021, -7.23252514211625e-15,\r\n  1.84386437538366e-9, -0.0463959533752385, -99226310037675, 6.88169154439335e-17, -2.22620998452197e-11,\r\n  -5.40843018624083e-8, 0.00345570606200257, 42227580030.4086, -1.26974478770487e-15, 9.27237985153679e-10,\r\n  6.12670812016489e-14, -7.22693924063497e-12, -0.000383669502636822, 0.000374684572410204, -93197.6897511086,\r\n  -0.0247690616026922, 65.8110546759474,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.10 - Region 3j Coefficients for backward equations v(P, T)\r\nexport const reg3j_I = [\r\n  0, 0, 0, 1, 1, 1, 2, 2, 3, 4, 4, 5, 5, 5, 6, 10, 12, 12, 14, 14, 14, 16, 18, 20, 20, 24, 24, 28, 28,\r\n];\r\nexport const reg3j_J = [\r\n  -1, 0, 1, -2, -1, 1, -1, 1, -2, -2, 2, -3, -2, 0, 3, -6, -8, -3, -10, -8, -5, -10, -12, -12, -10, -12, -6, -12, -5,\r\n];\r\nexport const reg3j_n = [\r\n  -0.11137131739554e-3, 0.100342892423685e1, 0.530615581928979e1, 0.179058760078792e-5, -0.728541958464774e-3,\r\n  -0.187576133371704e2, 0.199060874071849e-2, 0.24357475537729e2, -0.177040785499444e-3, -0.25968038522713e-2,\r\n  -0.198704578406823e3, 0.738627790224287e-4, -0.236264692844138e-2, -0.161023121314333e1, 6223.22971786473,\r\n  -9.60754116701669e-9, -5.10572269720488e-11, 0.00767373781404211, 6.63855469485254e-15, -7.17590735526745e-10,\r\n  1.46564542926508e-5, 3.09029474277013e-12, -4.64216300971708e-16, -3.90499637961161e-14, -2.36716126781431e-10,\r\n  4.54652854268717e-12, -0.00422271787482497, 2.83911742354706e-11, 2.70929002720228,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.11 - Region 3k Coefficients for backward equations v(P, T)\r\nexport const reg3k_I = [\r\n  -2, -2, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 5, 5, 5, 6, 6, 6, 6, 8, 10, 12,\r\n];\r\nexport const reg3k_J = [\r\n  10, 12, -5, 6, -12, -6, -2, -1, 0, 1, 2, 3, 14, -3, -2, 0, 1, 2, -8, -6, -3, -2, 0, 4, -12, -6, -3, -12, -10, -8, -5,\r\n  -12, -12, -10,\r\n];\r\nexport const reg3k_n = [\r\n  -0.401215699576099e9, 0.484501478318406e11, 0.394721471363678e-14, 0.372629967374147e5, -0.369794374168666e-29,\r\n  -0.380436407012452e-14, 0.475361629970233e-6, -0.879148916140706e-3, 0.844317863844331, 0.1224331626566e2,\r\n  -0.104529634830279e3, 0.589702771277429e3, -0.291026851164444e14, 0.17034307284185e-5, -0.277617606975748e-3,\r\n  -0.344709605486686e1, 0.221333862447095e2, -194.646110037079, 8.08354639772825e-16, -1.8084520914547e-11,\r\n  -6.96664158132412e-6, -0.00181057560300994, 2.55830298579027, 3289.13873658481, -1.73270241249904e-19,\r\n  -6.61876792558034e-7, -0.0039568892342125, 6.04203299819132e-18, -4.00879935920517e-14, 1.60751107464958e-9,\r\n  3.83719409025556e-5, -6.49565446702457e-15, -1.49095328506e-12, 5.41449377329581e-9,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.12 - Region 3l Coefficients for backward equations v(P, T)\r\nexport const reg3l_I = [\r\n  -12, -12, -12, -12, -12, -10, -10, -8, -8, -8, -8, -8, -8, -8, -6, -5, -5, -4, -4, -3, -3, -3, -3, -2, -2, -2, -1, -1,\r\n  -1, 0, 0, 0, 0, 1, 1, 2, 4, 5, 5, 6, 10, 10, 14,\r\n];\r\nexport const reg3l_J = [\r\n  14, 16, 18, 20, 22, 14, 24, 6, 10, 12, 14, 18, 24, 36, 8, 4, 5, 7, 16, 1, 3, 18, 20, 2, 3, 10, 0, 1, 3, 0, 1, 2, 12,\r\n  0, 16, 1, 0, 0, 1, 14, 4, 12, 10,\r\n];\r\nexport const reg3l_n = [\r\n  0.260702058647537e10, -0.188277213604704e15, 0.554923870289667e19, -0.758966946387758e23, 0.413865186848908e27,\r\n  -0.81503800073806e12, -0.381458260489955e33, -0.123239564600519e-1, 0.226095631437174e8, -0.49501780950672e12,\r\n  0.529482996422863e16, -0.444359478746295e23, 0.521635864527315e35, -0.487095672740742e55, -0.714430209937547e6,\r\n  0.127868634615495, -0.100752127917598e2, 0.77745143796099e7, -0.108105480796471e25, -0.357578581169659e-5,\r\n  -0.212857169423484e1, 2.70706111085238e29, -6.95953622348829e32, 0.11060902747228, 72.1559163361354, -306367307532219,\r\n  0.000026583961888553, 0.0253392392889754, -214.443041836579, 0.937846601489667, 2.231840431017, 33.8401222509191,\r\n  4.94237237179718e20, -0.198068404154428, -1.4141534988114e30, -99.3862421613651, 125.070534142731, -996.473529004439,\r\n  47313.7909872765, 1.16662121219322e32, -3158749762715330, -4.45703369196945e32, 6.42794932373694e32,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.13 - Region 3m Coefficients for backward equations v(P, T)\r\nexport const reg3m_I = [\r\n  0, 3, 8, 20, 1, 3, 4, 5, 1, 6, 2, 4, 14, 2, 5, 3, 0, 1, 1, 1, 28, 2, 16, 0, 5, 0, 3, 4, 12, 16, 1, 8, 14, 0, 2, 3, 4,\r\n  8, 14, 24,\r\n];\r\nexport const reg3m_J = [\r\n  0, 0, 0, 2, 5, 5, 5, 5, 6, 6, 7, 8, 8, 10, 10, 12, 14, 14, 18, 20, 20, 22, 22, 24, 24, 28, 28, 28, 28, 28, 32, 32, 32,\r\n  36, 36, 36, 36, 36, 36, 36,\r\n];\r\nexport const reg3m_n = [\r\n  0.811384363481847, -0.568199310990094e4, -0.178657198172556e11, 0.795537657613427e32, -0.814568209346872e5,\r\n  -0.659774567602874e8, -0.152861148659302e11, -0.560165667510446e12, 0.458384828593949e6, -0.385754000383848e14,\r\n  0.453735800004273e8, 0.939454935735563e12, 0.266572856432938e28, -0.547578313899097e10, 0.200725701112386e15,\r\n  0.185007245563239e13, 0.185135446828337e9, -0.170451090076385e12, 0.157890366037614e15, -0.202530509748774e16,\r\n  3.6819392618357e59, 170215539458936000, 6.39234909918741e41, -821698160721956, -7.95260241872306e23,\r\n  233415869478510000, -6.00079934586803e22, 5.94584382273384e24, 1.89461279349492e39, -8.10093428842645e45,\r\n  1.88813911076809e21, 1.11052244098768e35, 2.91133958602503e45, -3.2942192395146e21, -1.37570282536696e25,\r\n  1.81508996303902e27, -3.46865122768353e29, -2.1196114877426e37, -1.28617899887675e48, 4.79817895699239e64,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.14 - Region 3n Coefficients for backward equations v(P, T)\r\nexport const reg3n_I = [\r\n  0, 3, 4, 6, 7, 10, 12, 14, 18, 0, 3, 5, 6, 8, 12, 0, 3, 7, 12, 2, 3, 4, 2, 4, 7, 4, 3, 5, 6, 0, 0, 3, 1, 0, 1, 0, 1,\r\n  0, 1,\r\n];\r\nexport const reg3n_J = [\r\n  -12, -12, -12, -12, -12, -12, -12, -12, -12, -10, -10, -10, -10, -10, -10, -8, -8, -8, -8, -6, -6, -6, -5, -5, -5, -4,\r\n  -3, -3, -3, -2, -1, -1, 0, 1, 1, 2, 4, 5, 6,\r\n];\r\nexport const reg3n_n = [\r\n  0.280967799943151e-38, 0.614869006573609e-30, 0.582238667048942e-27, 0.390628369238462e-22, 0.821445758255119e-20,\r\n  0.402137961842776e-14, 0.651718171878301e-12, -0.211773355803058e-7, 0.264953354380072e-2, -0.135031446451331e-31,\r\n  -0.607246643970893e-23, -0.402352115234494e-18, -0.744938506925544e-16, 0.189917206526237e-12, 0.364975183508473e-5,\r\n  0.177274872361946e-25, -0.334952758812999e-18, -0.421537726098389e-8, -0.391048167929649e-1, 5.41276911564176e-14,\r\n  7.05412100773699e-12, 2.58585887897486e-9, -4.93111362030162e-11, -1.58649699894543e-6, -0.5250374278861,\r\n  0.00220019901729615, -0.00643064132636925, 62.9154149015048, 135.147318617061, 2.40560808321713e-7,\r\n  -0.000890763306701305, -4402.09599407714, -302.807107747776, 1591.58748314599, 232534.272709876, -792681.2071326,\r\n  -86987136466.2769, 354542769185.671, 400849240129329,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.15 - Region 3o Coefficients for backward equations v(P, T)\r\nexport const reg3o_I = [0, 0, 0, 2, 3, 4, 4, 4, 4, 4, 5, 5, 6, 7, 8, 8, 8, 10, 10, 14, 14, 20, 20, 24];\r\nexport const reg3o_J = [\r\n  -12, -4, -1, -1, -10, -12, -8, -5, -4, -1, -4, -3, -8, -12, -10, -8, -4, -12, -8, -12, -8, -12, -10, -12,\r\n];\r\nexport const reg3o_n = [\r\n  0.128746023979718e-34, -0.735234770382342e-11, 0.28907869214915e-2, 0.244482731907223, 0.141733492030985e-23,\r\n  -0.354533853059476e-28, -0.594539202901431e-17, -0.585188401782779e-8, 0.201377325411803e-5, 0.138647388209306e1,\r\n  -0.173959365084772e-4, 0.137680878349369e-2, 8.14897605805513e-15, 4.25596631351839e-26, -3.87449113787755e-18,\r\n  1.3981474793024e-13, -0.00171849638951521, 6.41890529513296e-22, 1.18960578072018e-11, -1.55282762571611e-18,\r\n  2.33907907347507e-8, -1.74093247766213e-13, 3.77682649089149e-9, -5.16720236575302e-11,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.16 - Region 3p Coefficients for backward equations v(P, T)\r\nexport const reg3p_I = [0, 0, 0, 0, 1, 2, 3, 3, 4, 6, 7, 7, 8, 10, 12, 12, 12, 14, 14, 14, 16, 18, 20, 22, 24, 24, 36];\r\nexport const reg3p_J = [\r\n  -1, 0, 1, 2, 1, -1, -3, 0, -2, -2, -5, -4, -2, -3, -12, -6, -5, -10, -8, -3, -8, -8, -10, -10, -12, -8, -12,\r\n];\r\nexport const reg3p_n = [\r\n  -0.982825342010366e-4, 0.105145700850612e1, 0.116033094095084e3, 0.324664750281543e4, -0.123592348610137e4,\r\n  -0.561403450013495e-1, 0.856677401640869e-7, 0.236313425393924e3, 0.972503292350109e-2, -0.103001994531927e1,\r\n  -0.149653706199162e-8, -0.215743778861592e-4, -0.834452198291445e1, 0.586602660564988, 3.43480022104968e-26,\r\n  8.16256095947021e-6, 0.00294985697916798, 7.11730466276584e-17, 4.00954763806941e-10, 10.7766027032853,\r\n  -4.09449599138182e-7, -7.29121307758902e-6, 6.77107970938909e-9, 6.02745973022975e-8, -3.82323011855257e-11,\r\n  0.00179946628317437, -0.000345042834640005,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.17 - Region 3q Coefficients for backward equations v(P, T)\r\nexport const reg3q_I = [\r\n  -12, -12, -10, -10, -10, -10, -8, -6, -5, -5, -4, -4, -3, -2, -2, -2, -2, -1, -1, -1, 0, 1, 1, 1,\r\n];\r\nexport const reg3q_J = [10, 12, 6, 7, 8, 10, 8, 6, 2, 5, 3, 4, 3, 0, 1, 2, 4, 0, 1, 2, 0, 0, 1, 3];\r\nexport const reg3q_n = [\r\n  -0.82043384325995e5, 0.473271518461586e11, -0.805950021005413e-1, 0.32860002543598e2, -0.35661702998249e4,\r\n  -0.172985781433335e10, 0.351769232729192e8, -0.775489259985144e6, 0.710346691966018e-4, 0.993499883820274e5,\r\n  -0.64209417190457, -0.612842816820083e4, 232.808472983776, -1.42808220416837e-5, -0.00643596060678456,\r\n  -4.28577227475614, 2256.89939161918, 0.0010035565172151, 0.333491455143516, 1.09697576888873, 0.961917379376452,\r\n  -0.0838165632204598, 2.47795908411492, -3191.14969006533,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.18 - Region 3r Coefficients for backward equations v(P, T)\r\nexport const reg3r_I = [\r\n  -8, -8, -3, -3, -3, -3, -3, 0, 0, 0, 0, 3, 3, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 12, 14,\r\n];\r\nexport const reg3r_J = [\r\n  6, 14, -3, 3, 4, 5, 8, -1, 0, 1, 5, -6, -2, -12, -10, -8, -5, -12, -10, -8, -6, -5, -4, -3, -2, -12, -12,\r\n];\r\nexport const reg3r_n = [\r\n  0.144165955660863e-2, -0.701438599628258e13, -0.830946716459219e-16, 0.261975135368109, 0.393097214706245e3,\r\n  -0.104334030654021e5, 0.490112654154211e9, -0.147104222772069e-3, 0.103602748043408e1, 0.305308890065089e1,\r\n  -0.399745276971264e7, 0.56923371959375e-11, -0.464923504407778e-1, -5.35400396512906e-18, 3.99988795693162e-13,\r\n  -5.36479560201811e-7, 0.0159536722411202, 2.70303248860217e-15, 2.44247453858506e-8, -9.83430636716454e-6,\r\n  0.0663513144224454, -9.93456957845006, 546.491323528491, -14336.5406393758, 150764.974125511, -3.37209709340105e-10,\r\n  3.77501980025469e-9,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.19 - Region 3s Coefficients for backward equations v(P, T)\r\nexport const reg3s_I = [\r\n  -12, -12, -10, -8, -6, -5, -5, -4, -4, -3, -3, -2, -1, -1, -1, 0, 0, 0, 0, 1, 1, 3, 3, 3, 4, 4, 4, 5, 14,\r\n];\r\nexport const reg3s_J = [\r\n  20, 24, 22, 14, 36, 8, 16, 6, 32, 3, 8, 4, 1, 2, 3, 0, 1, 4, 28, 0, 32, 0, 1, 2, 3, 18, 24, 4, 24,\r\n];\r\nexport const reg3s_n = [\r\n  -0.532466612140254e23, 0.100415480000824e32, -0.191540001821367e30, 0.105618377808847e17, 0.202281884477061e59,\r\n  0.884585472596134e8, 0.166540181638363e23, -0.313563197669111e6, -0.185662327545324e54, -0.624942093918942e-1,\r\n  -0.50416072413259e10, 0.187514491833092e5, 0.121399979993217e-2, 0.188317043049455e1, -1670.7350396206,\r\n  0.965961650599775, 2.94885696802488, -65391.5627346115, 6.04012200163444e49, -0.198339358557937, -1.75984090163501e57,\r\n  3.56314881403987, -575.991255144384, 45621.3415338071, -10917404.4987829, 4.37796099975134e33, -6.16552611135792e45,\r\n  1935687689.17797, 9.50898170425042e53,\r\n];\r\n\r\n// IAPWS SR5-05 Table A1.20 - Region 3t Coefficients for backward equations v(P, T)\r\nexport const reg3t_I = [\r\n  0, 0, 0, 0, 1, 1, 2, 2, 2, 3, 3, 4, 4, 7, 7, 7, 7, 7, 10, 10, 10, 10, 10, 18, 20, 22, 22, 24, 28, 32, 32, 32, 36,\r\n];\r\nexport const reg3t_J = [\r\n  0, 1, 4, 12, 0, 10, 0, 6, 14, 3, 8, 0, 10, 3, 4, 7, 20, 36, 10, 12, 14, 16, 22, 18, 32, 22, 36, 24, 28, 22, 32, 36,\r\n  36,\r\n];\r\nexport const reg3t_n = [\r\n  0.155287249586268e1, 0.664235115009031e1, -0.28936623672721e4, -0.385923202309848e13, -0.291002915783761e1,\r\n  -0.829088246858083e12, 0.176814899675218e1, -0.534686695713469e9, 0.160464608687834e18, 0.196435366560186e6,\r\n  0.156637427541729e13, -0.178154560260006e1, -0.229746237623692e16, 0.385659001648006e8, 0.110554446790543e10,\r\n  -0.677073830687349e14, -3.27910592086523e30, -3.41552040860644e50, -5.27251339709047e20, 2.45375640937055e23,\r\n  -1.68776617209269e26, 3.58958955867578e28, -6.56475280339411e35, 3.55286045512301e38, 5.6902145441327e57,\r\n  -7.00584546433113e47, -7.05772623326374e64, 1.66861176200148e52, -3.00475129680486e60, -6.68481295196808e50,\r\n  4.28432338620678e68, -4.44227367758304e71, -2.81396013562745e76,\r\n];\r\n\r\n// IAPWS SR5-05 Table A2.1 - Region 3u Coefficients for backward equations v(P, T)\r\nexport const reg3u_I = [\r\n  -12, -10, -10, -10, -8, -8, -8, -6, -6, -5, -5, -5, -3, -1, -1, -1, -1, 0, 0, 1, 2, 2, 3, 5, 5, 5, 6, 6, 8, 8, 10, 12,\r\n  12, 12, 14, 14, 14, 14,\r\n];\r\nexport const reg3u_J = [\r\n  14, 10, 12, 14, 10, 12, 14, 8, 12, 4, 8, 12, 2, -1, 1, 12, 14, -3, 1, -2, 5, 10, -5, -4, 2, 3, -5, 2, -8, 8, -4, -12,\r\n  -4, 4, -12, -10, -6, 6,\r\n];\r\nexport const reg3u_n = [\r\n  0.122088349258355e18, 0.104216468608488e10, -0.882666931564652e16, 0.259929510849499e20, 0.222612779142211e15,\r\n  -0.878473585050085e18, -0.314432577551552e22, -0.216934916996285e13, 0.159079648196849e21, -0.339567617303423e3,\r\n  0.884387651337836e13, -0.843405926846418e21, 0.114178193518022e2, -0.122708229235641e-3, -0.106201671767107e3,\r\n  0.903443213959313e25, -0.693996270370852e28, 0.648916718965575e-8, 0.718957567127851e4, 0.00105581745346187,\r\n  -651903203602581, -1.60116813274676e24, -5.10254294237837e-9, -0.152355388953402, 677143292290.144, 276378438378930,\r\n  0.0116862983141686, -30142694798017.1, 1.6971981388484e-8, 1.04674840020929e26, -10801.690456014,\r\n  -9.90623601934295e-13, 5361164.83602738, 2.26145963747881e21, -4.8873156577621e-10, 0.000015100154888067,\r\n  -22770.046464392, -7.81754507698846e27,\r\n];\r\n\r\n// IAPWS SR5-05 Table A2.2 - Region 3v Coefficients for backward equations v(P, T)\r\nexport const reg3v_I = [\r\n  -10, -8, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -3, -3, -3, -2, -2, -1, -1, 0, 0, 0, 1, 1, 3,\r\n  4, 4, 4, 5, 8, 10, 12, 14,\r\n];\r\nexport const reg3v_J = [\r\n  -8, -12, -12, -3, 5, 6, 8, 10, 1, 2, 6, 8, 10, 14, -12, -10, -6, 10, -3, 10, 12, 2, 4, -2, 0, -2, 6, 10, -12, -10, 3,\r\n  -6, 3, 10, 2, -12, -2, -3, 1,\r\n];\r\nexport const reg3v_n = [\r\n  -0.415652812061591e-54, 0.177441742924043e-60, -0.357078668203377e-54, 0.359252213604114e-25, -0.259123736380269e2,\r\n  0.59461976619346e5, -0.624184007103158e11, 0.313080299915944e17, 0.105006446192036e-8, -0.192824336984852e-5,\r\n  0.654144373749937e6, 0.513117462865044e13, -0.697595750347391e19, -0.103977184454767e29, 0.119563135540666e-47,\r\n  -0.436677034051655e-41, 0.926990036530639e-29, 0.587793105620748e21, 0.280375725094731e-17, -1.92359972440634e22,\r\n  7.42705723302738e26, -51.7429682450605, 8206120.48645469, -1.88214882341448e-9, 0.0184587261114837,\r\n  -1.35830407782663e-6, -72368188562634800, -2.23449194054124e26, -1.11526741826431e-35, 2.76032601145151e-29,\r\n  134856491567853, 6.5244029334586e-10, 51065511977436000, -4.68138358908732e31, -7606674911832790,\r\n  -4.17247986986821e-19, 31254567775610.4, -100375333864186, 2.47761392329058e26,\r\n];\r\n\r\n// IAPWS SR5-05 Table A2.3 - Region 3w Coefficients for backward equations v(P, T)\r\nexport const reg3w_I = [\r\n  -12, -12, -10, -10, -8, -8, -8, -6, -6, -6, -6, -5, -4, -4, -3, -3, -2, -2, -1, -1, -1, 0, 0, 1, 2, 2, 3, 3, 5, 5, 5,\r\n  8, 8, 10, 10,\r\n];\r\nexport const reg3w_J = [\r\n  8, 14, -1, 8, 6, 8, 14, -4, -3, 2, 8, -10, -1, 3, -10, 3, 1, 2, -8, -4, 1, -12, 1, -1, -1, 2, -12, -5, -10, -8, -6,\r\n  -12, -10, -12, -8,\r\n];\r\nexport const reg3w_n = [\r\n  -0.586219133817016e-7, -0.894460355005526e11, 0.531168037519774e-30, 0.109892402329239, -0.575368389425212e-1,\r\n  0.228276853990249e5, -0.158548609655002e19, 0.329865748576503e-27, -0.634987981190669e-24, 0.615762068640611e-8,\r\n  -0.961109240985747e8, -0.406274286652625e-44, -0.471103725498077e-12, 0.725937724828145, 0.187768525763682e-38,\r\n  -0.103308436323771e4, -0.662552816342168e-1, 579.51404176571, 2.37416732616644e-27, 2.71700235739893e-15,\r\n  -90.78862134836, -1.71242509570207e-37, 156.792067854621, 0.92326135790147, -5.97865988422577, 3219887.67636389,\r\n  -3.99441390042203e-30, 4.93429086046981e-8, 8.12036983370565e-20, -2.07610284654137e-12, -3.40821291419719e-7,\r\n  5.42000573372233e-18, -8.56711586510214e-13, 2.66170454405981e-14, 8.58133791857099e-6,\r\n];\r\n\r\n// IAPWS SR5-05 Table A2.4 - Region 3x Coefficients for backward equations v(P, T)\r\nexport const reg3x_I = [\r\n  -8, -6, -5, -4, -4, -4, -3, -3, -1, 0, 0, 0, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 6, 8, 8, 8, 8, 10, 12, 12, 12, 12, 14, 14,\r\n  14, 14,\r\n];\r\nexport const reg3x_J = [\r\n  14, 10, 10, 1, 2, 14, -2, 12, 5, 0, 4, 10, -10, -1, 6, -12, 0, 8, 3, -6, -2, 1, 1, -6, -3, 1, 8, -8, -10, -8, -5, -4,\r\n  -12, -10, -8, -6,\r\n];\r\nexport const reg3x_n = [\r\n  0.377373741298151e19, -0.507100883722913e13, -0.10336322559886e16, 0.184790814320773e-5, -0.924729378390945e-3,\r\n  -0.425999562292738e24, -0.462307771873973e-12, 0.107319065855767e22, 0.648662492280682e11, 0.244200600688281e1,\r\n  -0.851535733484258e10, 0.169894481433592e22, 0.21578022250902e-26, -0.320850551367334, -0.38264244845861e17,\r\n  -0.275386077674421e-28, -0.563199253391666e6, -0.326068646279314e21, 39794900155318.4, 1.00824008584757e-7,\r\n  16223.4569738433, -43235522531.9745, -592874245598.61, 1.33061647281106, 1573381.97797544, 25818961427085.3,\r\n  2.62413209706358e24, -0.0920011937431142, 0.00220213765905426, -11.0433759109547, 8470048.70612087, -592910695.762536,\r\n  -0.000018302717326966, 0.181339603516302, -1192.28759669889, 4308676.58061468,\r\n];\r\n\r\n// IAPWS SR5-05 Table A2.5 - Region 3y Coefficients for backward equations v(P, T)\r\nexport const reg3y_I = [0, 0, 0, 0, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 8, 8, 10, 12];\r\nexport const reg3y_J = [-3, 1, 5, 8, 8, -4, -1, 4, 5, -8, 4, 8, -6, 6, -2, 1, -8, -2, -5, -8];\r\nexport const reg3y_n = [\r\n  -0.525597995024633e-9, 0.583441305228407e4, -0.134778968457925e17, 0.118973500934212e26, -0.159096490904708e27,\r\n  -0.315839902302021e-6, 0.496212197158239e3, 0.327777227273171e19, -0.527114657850696e22, 0.210017506281863e-16,\r\n  7.05106224399834e20, -2.66713136106469e30, -1.45370512554562e-8, 1.4933391705313e27, -14979562.0287641,\r\n  -3818819062711000, 7.24660165585797e-5, -93780816955019.3, 5144114683.76383, -82819.8594040141,\r\n];\r\n\r\n// IAPWS SR5-05 Table A2.6 - Region 3z Coefficients for backward equations v(P, T)\r\nexport const reg3z_I = [-8, -6, -5, -5, -4, -4, -4, -3, -3, -3, -2, -1, 0, 1, 2, 3, 3, 6, 6, 6, 6, 8, 8];\r\nexport const reg3z_J = [3, 6, 6, 8, 5, 6, 8, -2, 5, 6, 2, -6, 3, 1, 6, -6, -2, -6, -5, -4, -1, -8, -4];\r\nexport const reg3z_n = [\r\n  0.24400789229065e-10, -0.463057430331242e7, 0.728803274777712e10, 0.327776302858856e16, -0.110598170118409e10,\r\n  -0.323899915729957e13, 0.923814007023245e16, 0.842250080413712e-12, 0.663221436245506e12, -0.167170186672139e15,\r\n  0.253749358701391e4, -8.19731559610523e-21, 328380587890.663, -62500479.1171543, 8.03197957462023e20,\r\n  -2.04397011338353e-11, -3783.91047055938, 0.0097287654593862, 15.4355721681459, -3739.62862928643, -68285901137.4572,\r\n  -0.000248488015614543, 3945360.49497068,\r\n];\r\n\r\n// IAPWS R12-08 table 1 coefficients for viscosity equation ViscHi\r\nexport const visc_Hi = [1.67752, 2.20462, 0.6366564, -0.241605];\r\n\r\n// IAPWS R12-08 table 2 coefficients for viscosity equation ViscHij\r\n// export const visc_Hij_i = [ 0, 1, 2, 3, 0, 1, 2, 3, 5, 0, 1, 2, 3, 4, 0, 1, 0, 3, 4, 3, 5 ];\r\n// export const visc_Hij_j = [ 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6 ];\r\n// export visc_Hij_i_n = [ 5.20094E-01, 8.50895E-02, -1.08374E+00, -2.89555E-01, 2.22531E-01, 9.99115E-01, 1.88797E+00, 1.26613E+00, 1.20573E-01, -2.81378E-01, -9.06851E-01, -7.72479E-01, -4.89837E-01, -2.57040E-01, 1.61913E-01, 2.57399E-01, -3.25372E-02, 6.98452E-02, 8.72102E-03, -4.35673E-03, -5.93264E-04 ];\r\nexport const visc_Hij = [\r\n  [5.20094e-1, 2.22531e-1, -2.81378e-1, 1.61913e-1, -3.25372e-2, 0, 0],\r\n  [8.50895e-2, 9.99115e-1, -9.06851e-1, 2.57399e-1, 0, 0, 0],\r\n  [-1.08374, 1.88797, -7.72479e-1, 0, 0, 0, 0],\r\n  [-2.89555e-1, 1.26613, -4.89837e-1, 0, 6.98452e-2, 0, -4.35673e-3],\r\n  [0, 0, -2.5704e-1, 0, 0, 8.72102e-3, 0],\r\n  [0, 1.20573e-1, 0, 0, 0, 0, -5.93264e-4],\r\n];\r\n\r\n//IAPWS R12-08 Table 3 Visosity Critical-Region Constants\r\nexport const x_mi = 0.068; // Critical exponent for viscosity\r\nexport const q_C = 1 / 1.9; // (1/nm)\r\nexport const q_D = 1 / 1.1; // (1/nm)\r\nexport const ni = 0.63;\r\nexport const gamma = 1.239;\r\nexport const xi_0 = 0.13; // (nm)\r\nexport const Gamma_0 = 0.06;\r\nexport const TR = 1.5 * Tc_H2O; // (nm).  IAPWS R12-08 Tabke 3\r\n\r\n// IAPWS R15-11 Thermal Conductivity Table 1 Equation 16 coefficients\r\nexport const cond_Lk = [2.443221e-3, 1.323095e-2, 6.770357e-3, -3.454586e-3, 4.096266e-4];\r\n\r\n// IAPWS R15-11 Thermal Conductivity Table 2 Equation 17 coefficients\r\nexport const cond_Lij = [\r\n  [1.60397357, -0.646013523, 0.111443906, 0.102997357, -0.0504123634, 0.00609859258],\r\n  [2.33771842, -2.78843778, 1.53616167, -0.463045512, 0.0832827019, -0.00719201245],\r\n  [2.19650529, -4.54580785, 3.55777244, -1.40944978, 0.275418278, -0.0205938816],\r\n  [-1.21051378, 1.60812989, -0.621178141, 0.0716373224, 0, 0],\r\n  [-2.720337, 4.57586331, -3.18369245, 1.1168348, -0.19268305, 0.012913842],\r\n];\r\n\r\n// IAPWS R15-11 Thermal Conductivity Table 6 Equation 25 coefficients\r\nexport const cond_Aij = [\r\n  [6.53786807199516, 6.52717759281799, 5.35500529896124, 1.55225959906681, 1.11999926419994],\r\n  [-5.61149954923348, -6.30816983387575, -3.96415689925446, 0.464621290821181, 0.595748562571649],\r\n  [3.39624167361325, 8.08379285492595, 8.91990208918795, 8.93237374861479, 9.8895256507892],\r\n  [-2.27492629730878, -9.82240510197603, -12.033872950579, -11.0321960061126, -10.325505114704],\r\n  [10.2631854662709, 12.1358413791395, 9.19494865194302, 6.1678099993336, 4.66861294457414],\r\n  [1.97815050331519, -5.54349664571295, -2.16866274479712, -0.965458722086812, -0.503243546373828],\r\n];\r\n","export const SI = 0;\r\nexport const USCustomary = 1;\r\nexport const MetricBarA = 2;\r\nexport const MetricKpa = 3;\r\n\r\nexport const VectorParameters = {\r\n  Pressure: 0,\r\n  Temperature: 1,\r\n  Quality: 2,\r\n  Enthalpy: 3,\r\n  Entropy: 4,\r\n  InternalEnergy: 5,\r\n  Volume: 6,\r\n  IsobaricHeat: 7,\r\n  IsochoricHeat: 8,\r\n  SpeedOfSound: 9,\r\n  dPdT_V: 12,\r\n  dPdT_U: 13,\r\n  dPdT_H: 14,\r\n  dPdT_S: 15,\r\n  dPdV_T: 16,\r\n  dPdV_U: 17,\r\n  dPdV_H: 18,\r\n  dPdV_S: 19,\r\n  dPdU_T: 20,\r\n  dPdU_V: 21,\r\n  dPdU_H: 22,\r\n  dPdU_S: 23,\r\n  dPdH_T: 24,\r\n  dPdH_V: 25,\r\n  dPdH_U: 26,\r\n  dPdH_S: 27,\r\n  dPdS_T: 28,\r\n  dPdS_V: 29,\r\n  dPdS_U: 30,\r\n  dPdS_H: 31,\r\n  dTdP_V: 32,\r\n  dTdP_U: 33,\r\n  dTdP_H: 34,\r\n  dTdP_S: 35,\r\n  dTdV_P: 36,\r\n  dTdV_U: 37,\r\n  dTdV_H: 38,\r\n  dTdV_S: 39,\r\n  dTdU_P: 40,\r\n  dTdU_V: 41,\r\n  dTdU_H: 42,\r\n  dTdU_S: 43,\r\n  dTdH_P: 44,\r\n  dTdH_V: 45,\r\n  dTdH_U: 46,\r\n  dTdH_S: 47,\r\n  dTdS_P: 48,\r\n  dTdS_V: 49,\r\n  dTdS_U: 50,\r\n  dTdS_H: 51,\r\n  dVdP_T: 52,\r\n  dVdP_U: 53,\r\n  dVdP_H: 54,\r\n  dVdP_S: 55,\r\n  dVdT_P: 56,\r\n  dVdT_U: 57,\r\n  dVdT_H: 58,\r\n  dVdT_S: 59,\r\n  dVdU_P: 60,\r\n  dVdU_T: 61,\r\n  dVdU_H: 62,\r\n  dVdU_S: 63,\r\n  dVdH_P: 64,\r\n  dVdH_T: 65,\r\n  dVdH_U: 66,\r\n  dVdH_S: 67,\r\n  dVdS_P: 68,\r\n  dVdS_T: 69,\r\n  dVdS_U: 70,\r\n  dVdS_H: 71,\r\n  dUdP_T: 72,\r\n  dUdP_V: 73,\r\n  dUdP_H: 74,\r\n  dUdP_S: 75,\r\n  dUdT_P: 76,\r\n  dUdT_V: 77,\r\n  dUdT_H: 78,\r\n  dUdT_S: 79,\r\n  dUdV_P: 80,\r\n  dUdV_T: 81,\r\n  dUdV_H: 82,\r\n  dUdV_S: 83,\r\n  dUdH_P: 84,\r\n  dUdH_T: 85,\r\n  dUdH_V: 86,\r\n  dUdH_S: 87,\r\n  dUdS_P: 88,\r\n  dUdS_T: 89,\r\n  dUdS_V: 90,\r\n  dUdS_H: 91,\r\n  dHdP_T: 92,\r\n  dHdP_V: 93,\r\n  dHdP_U: 94,\r\n  dHdP_S: 95,\r\n  dHdT_P: 96,\r\n  dHdT_V: 97,\r\n  dHdT_U: 98,\r\n  dHdT_S: 99,\r\n  dHdV_P: 100,\r\n  dHdV_T: 101,\r\n  dHdV_U: 102,\r\n  dHdV_S: 103,\r\n  dHdU_P: 104,\r\n  dHdU_T: 105,\r\n  dHdU_V: 106,\r\n  dHdU_S: 107,\r\n  dHdS_P: 108,\r\n  dHdS_T: 109,\r\n  dHdS_V: 110,\r\n  dHdS_U: 111,\r\n  dSdP_T: 112,\r\n  dSdP_V: 113,\r\n  dSdP_U: 114,\r\n  dSdP_H: 115,\r\n  dSdT_P: 116,\r\n  dSdT_V: 117,\r\n  dSdT_U: 118,\r\n  dSdT_H: 119,\r\n  dSdV_P: 120,\r\n  dSdV_T: 121,\r\n  dSdV_U: 122,\r\n  dSdV_H: 123,\r\n  dSdU_P: 124,\r\n  dSdU_T: 125,\r\n  dSdU_V: 126,\r\n  dSdU_H: 127,\r\n  dSdH_P: 128,\r\n  dSdH_T: 129,\r\n  dSdH_V: 130,\r\n  dSdH_U: 131,\r\n};\r\n","// Error Strings\r\nexport const ErrorUnitsNotInRange = \"Invalid Units - should be 0 through 3.\";\r\nexport const ErrorReturnTypeUnknown = \"Unknown return type.\";\r\nexport const PressureOrTempNotInRange = \"Pressure and/or temperature not within the valid range\";\r\nexport const TemperatureOrPressureNotValid = \"Temperature and/or Pressure not within the valid range\";\r\nexport const TemperatureOrPressureNotInRegion1 = \"Temperature and/or Pressure not within the valid range for Region 1\";\r\nexport const TemperatureOrPressureNotInRegion2 = \"Temperature and/or Pressure not within the valid range for Region 2\";\r\nexport const TemperatureOrPressureNotInRegion3 = \"Temperature and/or Pressure not within the valid range for Region 3\";\r\nexport const TemperatureNotInRegion3a3b = \"Temperature not within the valid range for subregions 3a or 3b\";\r\nexport const TemperatureNotInRegion3c3d3e3f = \"Temperature not within the valid range for subregions 3c, 3d, 3e or 3f\";\r\nexport const TemperatureNotInRegion3c3g3h3i3j3k =\r\n  \"Temperature not within the valid range for subregions 3c, 3g, 3h, 3i, 3j or 3k\";\r\nexport const TemperatureNotInRegion3c3l3h3i3j3k =\r\n  \"Temperature not within the valid range for subregions 3c, 3l, 3h, 3i, 3j or 3k\";\r\nexport const TemperatureNotInRegion3c3l3m3n3o3p3j3k =\r\n  \"Temperature not within the valid range for subregions 3c, 3l, 3m, 3n, 3o, 3p, 3j, or 3k\";\r\nexport const TemperatureNotInRegion3u3v3w3x =\r\n  \"Temperature not within the valid range for subregions 3u, 3v, 3w, and 3x\";\r\nexport const TemperatureNotInRegion3u3x3y3z =\r\n  \"Temperature not within the valid range for subregions 3u, 3x, 3y, and 3z\";\r\nexport const TemperatureNotInRegion3u3y = \"Temperature not within the valid range for subregions 3u or 3y\";\r\nexport const TemperatureNotInRegion3x3z = \"Temperature not within the valid range for subregions 3x or 3z\";\r\nexport const TemperatureNotInRegion3c3s3r3k = \"Temperature not within the valid range for subregions 3c, 3s, 3r, or 3k\";\r\nexport const TemperatureNotInRegion3c3s3t = \"Temperature not within the valid range for subregions 3c, 3s or 3t\";\r\nexport const TemperatureNotInRegion3c3t = \"Temperature not within the valid range for subregions 3c or 3t\";\r\nexport const TemperatureNotInRegion3c3s3u3y = \"Temperature not within the valid range for subregions 3c, 3s, 3u or 3y\";\r\nexport const PressureNotWithinValidRange = \"Pressure not within the valid range\";\r\nexport const TemperatureNotWithinValidRange = \"Temperature not within the valid range\";\r\nexport const PressureNotWithinValidSaturatedSteamRegion = \"Pressure not within valid saturated steam region\";\r\nexport const QualityNotWithinValidRange = \"Quality not within the valid range\";\r\nexport const PressureNotValid = \"Pressure not within the valid range\";\r\nexport const PressureOrIndexNotValid = \"Pressure and/or Parameter Index not within the valid range\";\r\nexport const PressureOrQualityNotValid = \"Pressure and/or quality not within the valid range\";\r\nexport const EntropyNotValidForSaturatedSteam = \"Entropy not within valid range for saturated steam\";\r\nexport const EntropyNotValid = \"Entropy not within valid range\";\r\nexport const EntropyOrPressureNotValid = \"Entropy and/or Pressure not within the valid range\";\r\nexport const EnthalpyNotValidForEntropy = \"Enthalpy not within valid range for the given entropy\";\r\nexport const EnthalpyNotValid = \"Enthalpy not within the valid range\";\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport * as Constants from \"./Constants.js\";\r\nimport * as Units from \"./Units.js\";\r\nimport * as Errors from \"./Errors.js\";\r\n\r\nconst KpaPerPsi = 6.894757293168361;\r\n//const MpaPerPsi = 6.894757e3;\r\nconst PsiPerMpa = 145.0377; //  ASME Steam Tables Book - Table 2-3\r\n\r\n// Convert the SI SteamProperties Array (MPa, K, etc) to required Units\r\nexport function SteamPropertiesConversionReg4(inputProperties, units = Units.SI) {\r\n  var outputProperties = inputProperties;\r\n\r\n  switch (units) {\r\n    case Units.SI:\r\n      // Nothing to do\r\n      break;\r\n    case Units.USCustomary:\r\n      outputProperties[Units.VectorParameters.Pressure] = inputProperties[Units.VectorParameters.Pressure] * PsiPerMpa; // Pressure - MPa to psia\r\n      outputProperties[Units.VectorParameters.Temperature] = KtoF(inputProperties[Units.VectorParameters.Temperature]); // Temperature - K to deg F\r\n      outputProperties[Units.VectorParameters.Quality] = inputProperties[Units.VectorParameters.Quality]; // Quality - dimensionless\r\n      outputProperties[Units.VectorParameters.Enthalpy] =\r\n        inputProperties[Units.VectorParameters.Enthalpy] * BtuPerLbm_Per_KjPerKg; // Specific enthalpy - kJ/kg to BTU/lbm\r\n      outputProperties[Units.VectorParameters.Entropy] =\r\n        inputProperties[Units.VectorParameters.Entropy] * BtuPerLbmR_Per_KjPerKgK; // Specific entropy - kJ/kg/K to BTU/lbm/R\r\n      outputProperties[Units.VectorParameters.InternalEnergy] =\r\n        inputProperties[Units.VectorParameters.InternalEnergy] * BtuPerLbm_Per_KjPerKg; // Specific internal energy - kJ/kg to BTU/lbm\r\n      outputProperties[Units.VectorParameters.Volume] =\r\n        inputProperties[Units.VectorParameters.Volume] * Ft3perLbm_per_M3PerKg; // Specific Volume - m3/kg to ft3/lbm\r\n      outputProperties[Units.VectorParameters.IsobaricHeat] =\r\n        inputProperties[Units.VectorParameters.IsobaricHeat] * BtuPerLbmR_Per_KjPerKgK; // Isobaric (constant pressure) heat capacity - kJ/kg/K to BTU/lbm/R\r\n      outputProperties[Units.VectorParameters.IsochoricHeat] =\r\n        inputProperties[Units.VectorParameters.IsochoricHeat] * BtuPerLbmR_Per_KjPerKgK; // Isochoric (constant volume) heat capacity - kJ/kg/K to BTU/lbm/R\r\n      outputProperties[Units.VectorParameters.SpeedOfSound] = MetersPerSecondToFeetPerSecond(\r\n        inputProperties[Units.VectorParameters.SpeedOfSound] // Speed of sound - m/s to ft/s\r\n      );\r\n      break;\r\n    case Units.MetricBarA:\r\n      outputProperties = inputProperties;\r\n      outputProperties[Units.VectorParameters.Pressure] = MpaToBar(inputProperties[Units.VectorParameters.Pressure]);\r\n      outputProperties[Units.VectorParameters.Temperature] = KtoC(inputProperties[Units.VectorParameters.Temperature]);\r\n      break;\r\n    case Units.MetricKpa:\r\n      outputProperties = inputProperties;\r\n      outputProperties[Units.VectorParameters.Pressure] = MpaToKpa(inputProperties[Units.VectorParameters.Pressure]);\r\n      outputProperties[Units.VectorParameters.Temperature] = KtoC(inputProperties[Units.VectorParameters.Temperature]);\r\n      break;\r\n    default:\r\n      throw Errors.ErrorUnitsNotInRange;\r\n  }\r\n  return outputProperties;\r\n}\r\n\r\n// Converts the resulting calculated SI properties to the requested return units\r\nexport function SteamPropertiesConversion(inputProperties, units = Units.SI) {\r\n  var outputProperties = SteamPropertiesConversionReg4(inputProperties, units);\r\n  switch (units) {\r\n    case Units.SI:\r\n      // Nothing to do\r\n      break;\r\n    case Units.USCustomary:\r\n      outputProperties[12] = inputProperties[12] * MPa_per_K_To_psia_per_R; // dPdT_V\r\n      outputProperties[13] = inputProperties[13] * MPa_per_K_To_psia_per_R; // dPdT_U\r\n      outputProperties[14] = inputProperties[14] * MPa_per_K_To_psia_per_R; // dPdT_H\r\n      outputProperties[15] = inputProperties[15] * MPa_per_K_To_psia_per_R; // dPdT_S\r\n      outputProperties[16] = inputProperties[16] * MPa_per_M3PerKg_To_psia_per_Ft3PerLbm; // dPdV_T\r\n      outputProperties[17] = inputProperties[17] * MPa_per_M3PerKg_To_psia_per_Ft3PerLbm; // dPdV_U\r\n      outputProperties[18] = inputProperties[18] * MPa_per_M3PerKg_To_psia_per_Ft3PerLbm; // dPdV_H\r\n      outputProperties[19] = inputProperties[19] * MPa_per_M3PerKg_To_psia_per_Ft3PerLbm; // dPdV_S\r\n      outputProperties[20] = inputProperties[20] * MPa_per_KjPerKg_To_psia_per_BtuPerLbm; // dPdU_T\r\n      outputProperties[21] = inputProperties[21] * MPa_per_KjPerKg_To_psia_per_BtuPerLbm; // dPdU_V\r\n      outputProperties[22] = inputProperties[22] * MPa_per_KjPerKg_To_psia_per_BtuPerLbm; // dPdU_H\r\n      outputProperties[23] = inputProperties[23] * MPa_per_KjPerKg_To_psia_per_BtuPerLbm; // dPdU_S\r\n      outputProperties[24] = inputProperties[24] * MPa_per_KjPerKg_To_psia_per_BtuPerLbm; // dPdH_T\r\n      outputProperties[25] = inputProperties[25] * MPa_per_KjPerKg_To_psia_per_BtuPerLbm; // dPdH_V\r\n      outputProperties[26] = inputProperties[26] * MPa_per_KjPerKg_To_psia_per_BtuPerLbm; // dPdH_U\r\n      outputProperties[27] = inputProperties[27] * MPa_per_KjPerKg_To_psia_per_BtuPerLbm; // dPdH_S\r\n      outputProperties[28] = inputProperties[28] * MPa_per_KjPerKg_K_To_psia_per_BtuPerLbm_R; // dPdS_T\r\n      outputProperties[29] = inputProperties[29] * MPa_per_KjPerKg_K_To_psia_per_BtuPerLbm_R; // dPdS_V\r\n      outputProperties[30] = inputProperties[39] * MPa_per_KjPerKg_K_To_psia_per_BtuPerLbm_R; // dPdS_U\r\n      outputProperties[31] = inputProperties[31] * MPa_per_KjPerKg_K_To_psia_per_BtuPerLbm_R; // dPdS_S\r\n      outputProperties[32] = inputProperties[32] * K_per_MPa_To_R_per_Psia; // dTdP_V\r\n      outputProperties[33] = inputProperties[33] * K_per_MPa_To_R_per_Psia; // dTdP_U\r\n      outputProperties[34] = inputProperties[34] * K_per_MPa_To_R_per_Psia; // dTdP_H\r\n      outputProperties[35] = inputProperties[35] * K_per_MPa_To_R_per_Psia; // dTdP_S\r\n      outputProperties[36] = inputProperties[36] * K_per_M3perKg_To_R_per_Ft3PerLbm; // dTdV_P\r\n      outputProperties[37] = inputProperties[37] * K_per_M3perKg_To_R_per_Ft3PerLbm; // dTdV_U\r\n      outputProperties[38] = inputProperties[38] * K_per_M3perKg_To_R_per_Ft3PerLbm; // dTdV_H\r\n      outputProperties[39] = inputProperties[39] * K_per_M3perKg_To_R_per_Ft3PerLbm; // dTdV_S\r\n      outputProperties[40] = inputProperties[40] * K_per_KjPerKg_To_R_per_BtuPerLbm; // dTdU_P\r\n      outputProperties[41] = inputProperties[41] * K_per_KjPerKg_To_R_per_BtuPerLbm; // dTdU_V\r\n      outputProperties[42] = inputProperties[42] * K_per_KjPerKg_To_R_per_BtuPerLbm; // dTdU_H\r\n      outputProperties[43] = inputProperties[43] * K_per_KjPerKg_To_R_per_BtuPerLbm; // dTdU_S\r\n      outputProperties[44] = inputProperties[44] * K_per_KjPerKg_To_R_per_BtuPerLbm; // dTdH_P\r\n      outputProperties[45] = inputProperties[45] * K_per_KjPerKg_To_R_per_BtuPerLbm; // dTdH_V\r\n      outputProperties[46] = inputProperties[46] * K_per_KjPerKg_To_R_per_BtuPerLbm; // dTdH_U\r\n      outputProperties[47] = inputProperties[47] * K_per_KjPerKg_To_R_per_BtuPerLbm; // dTdH_S\r\n      outputProperties[48] = inputProperties[48] * K_per_KjPerKg_K_To_R_per_BtuPerLbm_R; // dTdS_P\r\n      outputProperties[49] = inputProperties[49] * K_per_KjPerKg_K_To_R_per_BtuPerLbm_R; // dTdS_V\r\n      outputProperties[50] = inputProperties[50] * K_per_KjPerKg_K_To_R_per_BtuPerLbm_R; // dTdS_U\r\n      outputProperties[51] = inputProperties[51] * K_per_KjPerKg_K_To_R_per_BtuPerLbm_R; // dTdS_H\r\n      outputProperties[52] = inputProperties[52] * M3PerKg_per_MPa_To_Ft3PerLbm_per_Psia; // dVdP_T\r\n      outputProperties[53] = inputProperties[53] * M3PerKg_per_MPa_To_Ft3PerLbm_per_Psia; // dVdP_U\r\n      outputProperties[54] = inputProperties[54] * M3PerKg_per_MPa_To_Ft3PerLbm_per_Psia; // dVdP_H\r\n      outputProperties[55] = inputProperties[55] * M3PerKg_per_MPa_To_Ft3PerLbm_per_Psia; // dVdP_S\r\n      outputProperties[56] = inputProperties[56] * M3PerKg_per_K_To_Ft3PerLbm_per_R; // dVdT_P\r\n      outputProperties[57] = inputProperties[57] * M3PerKg_per_K_To_Ft3PerLbm_per_R; // dVdT_U\r\n      outputProperties[58] = inputProperties[58] * M3PerKg_per_K_To_Ft3PerLbm_per_R; // dVdT_H\r\n      outputProperties[59] = inputProperties[59] * M3PerKg_per_K_To_Ft3PerLbm_per_R; // dVdT_S\r\n      outputProperties[60] = inputProperties[60] * M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm; // dVdU_P\r\n      outputProperties[61] = inputProperties[61] * M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm; // dVdU_T\r\n      outputProperties[62] = inputProperties[62] * M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm; // dVdU_H\r\n      outputProperties[63] = inputProperties[63] * M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm; // dVdU_S\r\n      outputProperties[64] = inputProperties[64] * M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm; // dVdH_P\r\n      outputProperties[65] = inputProperties[65] * M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm; // dVdH_T\r\n      outputProperties[66] = inputProperties[66] * M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm; // dVdH_U\r\n      outputProperties[67] = inputProperties[67] * M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm; // dVdH_S\r\n      outputProperties[68] = inputProperties[68] * M3PerKg_per_KjPerKg_K_To_Ft3perLbm_per_BtuPerLbmR; // dVdS_P\r\n      outputProperties[69] = inputProperties[69] * M3PerKg_per_KjPerKg_K_To_Ft3perLbm_per_BtuPerLbmR; // dVdS_T\r\n      outputProperties[70] = inputProperties[70] * M3PerKg_per_KjPerKg_K_To_Ft3perLbm_per_BtuPerLbmR; // dVdS_U\r\n      outputProperties[71] = inputProperties[71] * M3PerKg_per_KjPerKg_K_To_Ft3perLbm_per_BtuPerLbmR; // dVdS_H\r\n      outputProperties[72] = inputProperties[72] * KjPerKg_per_MPa_To_BtuPerLbm_per_Psia; // dUdP_T\r\n      outputProperties[73] = inputProperties[73] * KjPerKg_per_MPa_To_BtuPerLbm_per_Psia; // dUdP_V\r\n      outputProperties[74] = inputProperties[74] * KjPerKg_per_MPa_To_BtuPerLbm_per_Psia; // dUdP_H\r\n      outputProperties[75] = inputProperties[75] * KjPerKg_per_MPa_To_BtuPerLbm_per_Psia; // dUdP_S\r\n      outputProperties[76] = inputProperties[76] * KjPerKg_per_K_To_BtuPerLbm_per_R; // dUdT_P\r\n      outputProperties[77] = inputProperties[77] * KjPerKg_per_K_To_BtuPerLbm_per_R; // dUdT_V\r\n      outputProperties[78] = inputProperties[78] * KjPerKg_per_K_To_BtuPerLbm_per_R; // dUdT_H\r\n      outputProperties[79] = inputProperties[79] * KjPerKg_per_K_To_BtuPerLbm_per_R; // dUdT_S\r\n      outputProperties[80] = inputProperties[80] * KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm; // dUdV_P\r\n      outputProperties[81] = inputProperties[81] * KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm; // dUdV_T\r\n      outputProperties[82] = inputProperties[82] * KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm; // dUdV_H\r\n      outputProperties[83] = inputProperties[83] * KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm; // dUdV_S\r\n      outputProperties[88] = inputProperties[88] * KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR; // dUdS_P\r\n      outputProperties[89] = inputProperties[89] * KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR; // dUdS_T\r\n      outputProperties[90] = inputProperties[90] * KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR; // dUdS_V\r\n      outputProperties[91] = inputProperties[91] * KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR; // dUdS_H\r\n      outputProperties[92] = inputProperties[92] * KjPerKg_per_MPa_To_BtuPerLbm_per_Psia; // dHdP_T\r\n      outputProperties[93] = inputProperties[93] * KjPerKg_per_MPa_To_BtuPerLbm_per_Psia; // dHdP_V\r\n      outputProperties[94] = inputProperties[94] * KjPerKg_per_MPa_To_BtuPerLbm_per_Psia; // dHdP_U\r\n      outputProperties[95] = inputProperties[95] * KjPerKg_per_MPa_To_BtuPerLbm_per_Psia; // dHdP_S\r\n      outputProperties[96] = inputProperties[96] * KjPerKg_per_K_To_BtuPerLbm_per_R; // dHdT_P\r\n      outputProperties[97] = inputProperties[97] * KjPerKg_per_K_To_BtuPerLbm_per_R; // dHdT_V\r\n      outputProperties[98] = inputProperties[98] * KjPerKg_per_K_To_BtuPerLbm_per_R; // dHdT_U\r\n      outputProperties[99] = inputProperties[99] * KjPerKg_per_K_To_BtuPerLbm_per_R; // dHdT_S\r\n      outputProperties[100] = inputProperties[100] * KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm; // dHdV_P\r\n      outputProperties[101] = inputProperties[101] * KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm; // dHdV_T\r\n      outputProperties[102] = inputProperties[102] * KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm; // dHdV_U\r\n      outputProperties[103] = inputProperties[103] * KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm; // dHdV_S\r\n      outputProperties[108] = inputProperties[108] * KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR; // dHdS_P\r\n      outputProperties[109] = inputProperties[109] * KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR; // dHdS_T\r\n      outputProperties[110] = inputProperties[110] * KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR; // dHdS_V\r\n      outputProperties[111] = inputProperties[111] * KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR; // dHdS_U\r\n      outputProperties[112] = inputProperties[112] * KjPerKgK_per_Mpa_To_BtuPerLbmR_per_Psia; // dSdP_T\r\n      outputProperties[113] = inputProperties[113] * KjPerKgK_per_Mpa_To_BtuPerLbmR_per_Psia; // dSdP_V\r\n      outputProperties[114] = inputProperties[114] * KjPerKgK_per_Mpa_To_BtuPerLbmR_per_Psia; // dSdP_U\r\n      outputProperties[115] = inputProperties[115] * KjPerKgK_per_Mpa_To_BtuPerLbmR_per_Psia; // dSdP_H\r\n      outputProperties[116] = inputProperties[116] * KjPerKgK_per_K_To_BtuPerLbmR_per_R; // dSdT_P\r\n      outputProperties[117] = inputProperties[117] * KjPerKgK_per_K_To_BtuPerLbmR_per_R; // dSdT_V\r\n      outputProperties[118] = inputProperties[118] * KjPerKgK_per_K_To_BtuPerLbmR_per_R; // dSdT_U\r\n      outputProperties[119] = inputProperties[119] * KjPerKgK_per_K_To_BtuPerLbmR_per_R; // dSdT_H\r\n      outputProperties[120] = inputProperties[120] * KjPerKgK_per_M3PerKg_To_BtuPerLbmR_per_Ft3PerLbm; // dSdV_P\r\n      outputProperties[121] = inputProperties[121] * KjPerKgK_per_M3PerKg_To_BtuPerLbmR_per_Ft3PerLbm; // dSdV_T\r\n      outputProperties[122] = inputProperties[122] * KjPerKgK_per_M3PerKg_To_BtuPerLbmR_per_Ft3PerLbm; // dSdV_U\r\n      outputProperties[123] = inputProperties[123] * KjPerKgK_per_M3PerKg_To_BtuPerLbmR_per_Ft3PerLbm; // dSdV_H\r\n      outputProperties[124] = inputProperties[124] * KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm; // dSdU_P\r\n      outputProperties[125] = inputProperties[125] * KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm; // dSdU_T\r\n      outputProperties[126] = inputProperties[126] * KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm; // dSdU_V\r\n      outputProperties[127] = inputProperties[127] * KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm; // dSdU_H\r\n      outputProperties[128] = inputProperties[128] * KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm; // dSdH_P\r\n      outputProperties[129] = inputProperties[129] * KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm; // dSdH_T\r\n      outputProperties[130] = inputProperties[130] * KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm; // dSdH_V\r\n      outputProperties[131] = inputProperties[131] * KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm; // dSdH_U\r\n      break;\r\n    case Units.MetricBarA:\r\n      outputProperties[12] = inputProperties[12] * MPa_per_K_To_bara_per_C; // dPdT_V\r\n      outputProperties[13] = inputProperties[13] * MPa_per_K_To_bara_per_C; // dPdT_U\r\n      outputProperties[14] = inputProperties[14] * MPa_per_K_To_bara_per_C; // dPdT_H\r\n      outputProperties[15] = inputProperties[15] * MPa_per_K_To_bara_per_C; // dPdT_S\r\n      outputProperties[16] = inputProperties[16] * MPa_per_M3PerKg_To_bara_per_M3PerKg; // dPdV_T\r\n      outputProperties[17] = inputProperties[17] * MPa_per_M3PerKg_To_bara_per_M3PerKg; // dPdV_U\r\n      outputProperties[18] = inputProperties[18] * MPa_per_M3PerKg_To_bara_per_M3PerKg; // dPdV_H\r\n      outputProperties[19] = inputProperties[19] * MPa_per_M3PerKg_To_bara_per_M3PerKg; // dPdV_S\r\n      outputProperties[20] = inputProperties[20] * MPa_per_KjPerKg_To_bara_per_KjPerKg; // dPdU_T\r\n      outputProperties[21] = inputProperties[21] * MPa_per_KjPerKg_To_bara_per_KjPerKg; // dPdU_V\r\n      outputProperties[22] = inputProperties[22] * MPa_per_KjPerKg_To_bara_per_KjPerKg; // dPdU_H\r\n      outputProperties[23] = inputProperties[23] * MPa_per_KjPerKg_To_bara_per_KjPerKg; // dPdU_S\r\n      outputProperties[24] = inputProperties[24] * MPa_per_KjPerKg_To_bara_per_KjPerKg; // dPdU_T\r\n      outputProperties[25] = inputProperties[25] * MPa_per_KjPerKg_To_bara_per_KjPerKg; // dPdU_V\r\n      outputProperties[26] = inputProperties[26] * MPa_per_KjPerKg_To_bara_per_KjPerKg; // dPdU_U\r\n      outputProperties[27] = inputProperties[27] * MPa_per_KjPerKg_To_bara_per_KjPerKg; // dPdU_S\r\n      outputProperties[28] = inputProperties[28] * MPa_per_KjPerKg_K_To_bara_per_KjPerKg_C; // dPdS_T\r\n      outputProperties[29] = inputProperties[29] * MPa_per_KjPerKg_K_To_bara_per_KjPerKg_C; // dPdS_V\r\n      outputProperties[30] = inputProperties[39] * MPa_per_KjPerKg_K_To_bara_per_KjPerKg_C; // dPdS_U\r\n      outputProperties[31] = inputProperties[31] * MPa_per_KjPerKg_K_To_bara_per_KjPerKg_C; // dPdS_S\r\n      outputProperties[32] = inputProperties[32] * K_per_MPa_To_C_per_Bara; // dTdP_V\r\n      outputProperties[33] = inputProperties[33] * K_per_MPa_To_C_per_Bara; // dTdP_U\r\n      outputProperties[34] = inputProperties[34] * K_per_MPa_To_C_per_Bara; // dTdP_H\r\n      outputProperties[35] = inputProperties[35] * K_per_MPa_To_C_per_Bara; // dTdP_S\r\n      outputProperties[52] = inputProperties[52] * M3PerKg_per_MPa_To_M3PerKg_per_Bara; // dVdP_T\r\n      outputProperties[53] = inputProperties[53] * M3PerKg_per_MPa_To_M3PerKg_per_Bara; // dVdP_U\r\n      outputProperties[54] = inputProperties[54] * M3PerKg_per_MPa_To_M3PerKg_per_Bara; // dVdP_H\r\n      outputProperties[55] = inputProperties[55] * M3PerKg_per_MPa_To_M3PerKg_per_Bara; // dVdP_S\r\n      outputProperties[72] = inputProperties[72] * KjPerKg_per_MPa_To_KjPerKg_per_Bara; // dUdP_T\r\n      outputProperties[73] = inputProperties[73] * KjPerKg_per_MPa_To_KjPerKg_per_Bara; // dUdP_V\r\n      outputProperties[74] = inputProperties[74] * KjPerKg_per_MPa_To_KjPerKg_per_Bara; // dUdP_H\r\n      outputProperties[75] = inputProperties[75] * KjPerKg_per_MPa_To_KjPerKg_per_Bara; // dUdP_S\r\n      outputProperties[92] = inputProperties[92] * KjPerKg_per_MPa_To_KjPerKg_per_Bara; // dHdP_T\r\n      outputProperties[93] = inputProperties[93] * KjPerKg_per_MPa_To_KjPerKg_per_Bara; // dHdP_V\r\n      outputProperties[94] = inputProperties[94] * KjPerKg_per_MPa_To_KjPerKg_per_Bara; // dHdP_U\r\n      outputProperties[95] = inputProperties[95] * KjPerKg_per_MPa_To_KjPerKg_per_Bara; // dHdP_S\r\n      outputProperties[112] = inputProperties[112] * KjPerKgK_per_Mpa_To_KjPerKgC_per_Bara; // dSdP_T\r\n      outputProperties[113] = inputProperties[113] * KjPerKgK_per_Mpa_To_KjPerKgC_per_Bara; // dSdP_V\r\n      outputProperties[114] = inputProperties[114] * KjPerKgK_per_Mpa_To_KjPerKgC_per_Bara; // dSdP_U\r\n      outputProperties[115] = inputProperties[115] * KjPerKgK_per_Mpa_To_KjPerKgC_per_Bara; // dSdP_H\r\n      break;\r\n    case Units.MetricKpa:\r\n      outputProperties[12] = inputProperties[12] * MPa_per_K_To_kPa_per_C; // dPdT_V\r\n      outputProperties[13] = inputProperties[13] * MPa_per_K_To_kPa_per_C; // dPdT_U\r\n      outputProperties[14] = inputProperties[14] * MPa_per_K_To_kPa_per_C; // dPdT_H\r\n      outputProperties[15] = inputProperties[15] * MPa_per_K_To_kPa_per_C; // dPdT_S\r\n      outputProperties[16] = inputProperties[16] * MPa_per_M3PerKg_To_kPa_per_M3PerKg; // dPdV_T\r\n      outputProperties[17] = inputProperties[17] * MPa_per_M3PerKg_To_kPa_per_M3PerKg; // dPdV_U\r\n      outputProperties[18] = inputProperties[18] * MPa_per_M3PerKg_To_kPa_per_M3PerKg; // dPdV_H\r\n      outputProperties[19] = inputProperties[19] * MPa_per_M3PerKg_To_kPa_per_M3PerKg; // dPdV_S\r\n      outputProperties[20] = inputProperties[20] * MPa_per_KjPerKg_To_kPa_per_KjPerKg; // dPdU_T\r\n      outputProperties[21] = inputProperties[21] * MPa_per_KjPerKg_To_kPa_per_KjPerKg; // dPdU_V\r\n      outputProperties[22] = inputProperties[22] * MPa_per_KjPerKg_To_kPa_per_KjPerKg; // dPdU_H\r\n      outputProperties[23] = inputProperties[23] * MPa_per_KjPerKg_To_kPa_per_KjPerKg; // dPdU_S\r\n      outputProperties[24] = inputProperties[24] * MPa_per_KjPerKg_To_kPa_per_KjPerKg; // dPdU_T\r\n      outputProperties[25] = inputProperties[25] * MPa_per_KjPerKg_To_kPa_per_KjPerKg; // dPdU_V\r\n      outputProperties[26] = inputProperties[26] * MPa_per_KjPerKg_To_kPa_per_KjPerKg; // dPdU_U\r\n      outputProperties[27] = inputProperties[27] * MPa_per_KjPerKg_To_kPa_per_KjPerKg; // dPdU_S\r\n      outputProperties[28] = inputProperties[28] * MPa_per_KjPerKg_K_To_kPa_per_KjPerKg_C; // dPdS_T\r\n      outputProperties[29] = inputProperties[29] * MPa_per_KjPerKg_K_To_kPa_per_KjPerKg_C; // dPdS_V\r\n      outputProperties[30] = inputProperties[39] * MPa_per_KjPerKg_K_To_kPa_per_KjPerKg_C; // dPdS_U\r\n      outputProperties[31] = inputProperties[31] * MPa_per_KjPerKg_K_To_kPa_per_KjPerKg_C; // dPdS_S\r\n      outputProperties[32] = inputProperties[32] * K_per_MPa_To_C_per_Kpa; // dTdP_V\r\n      outputProperties[33] = inputProperties[33] * K_per_MPa_To_C_per_Kpa; // dTdP_U\r\n      outputProperties[34] = inputProperties[34] * K_per_MPa_To_C_per_Kpa; // dTdP_H\r\n      outputProperties[35] = inputProperties[35] * K_per_MPa_To_C_per_Kpa; // dTdP_S\r\n      outputProperties[52] = inputProperties[52] * M3PerKg_per_MPa_To_M3PerKg_per_KPa; // dVdP_T\r\n      outputProperties[53] = inputProperties[53] * M3PerKg_per_MPa_To_M3PerKg_per_KPa; // dVdP_U\r\n      outputProperties[54] = inputProperties[54] * M3PerKg_per_MPa_To_M3PerKg_per_KPa; // dVdP_H\r\n      outputProperties[55] = inputProperties[55] * M3PerKg_per_MPa_To_M3PerKg_per_KPa; // dVdP_S\r\n      outputProperties[72] = inputProperties[72] * KJPerKg_per_MPa_To_KjPerKg_per_Kpa; // dUdP_T\r\n      outputProperties[73] = inputProperties[73] * KJPerKg_per_MPa_To_KjPerKg_per_Kpa; // dUdP_V\r\n      outputProperties[74] = inputProperties[74] * KJPerKg_per_MPa_To_KjPerKg_per_Kpa; // dUdP_H\r\n      outputProperties[75] = inputProperties[75] * KJPerKg_per_MPa_To_KjPerKg_per_Kpa; // dUdP_S\r\n      outputProperties[92] = inputProperties[92] * KJPerKg_per_MPa_To_KjPerKg_per_Kpa; // dHdP_T\r\n      outputProperties[93] = inputProperties[93] * KJPerKg_per_MPa_To_KjPerKg_per_Kpa; // dHdP_V\r\n      outputProperties[94] = inputProperties[94] * KJPerKg_per_MPa_To_KjPerKg_per_Kpa; // dHdP_U\r\n      outputProperties[95] = inputProperties[95] * KJPerKg_per_MPa_To_KjPerKg_per_Kpa; // dHdP_S\r\n      outputProperties[112] = inputProperties[112] * KjPerKgK_per_Mpa_To_KjPerKgC_per_KPa; // dSdP_T\r\n      outputProperties[113] = inputProperties[113] * KjPerKgK_per_Mpa_To_KjPerKgC_per_KPa; // dSdP_V\r\n      outputProperties[114] = inputProperties[114] * KjPerKgK_per_Mpa_To_KjPerKgC_per_KPa; // dSdP_U\r\n      outputProperties[115] = inputProperties[115] * KjPerKgK_per_Mpa_To_KjPerKgC_per_KPa; // dSdP_H\r\n      break;\r\n    default:\r\n      throw Errors.ErrorUnitsNotInRange;\r\n  }\r\n  return outputProperties;\r\n}\r\n\r\nexport function PressureConversion(pressure, units) {\r\n  switch (units) {\r\n    case Units.SI:\r\n      return pressure;\r\n    case Units.USCustomary:\r\n      return MpaToPsi(pressure);\r\n    case Units.MetricBarA:\r\n      return MpaToBar(pressure);\r\n    case Units.MetricKpa:\r\n      return MpaToKpa(pressure);\r\n    default:\r\n      throw Errors.ErrorUnitsNotInRange;\r\n  }\r\n}\r\n\r\nexport function TemperatureConversion(temperature, units) {\r\n  switch (units) {\r\n    case Units.SI:\r\n      return temperature;\r\n    case Units.USCustomary:\r\n      return KtoF(temperature);\r\n    case Units.MetricBarA:\r\n      return KtoC(temperature);\r\n    case Units.MetricKpa:\r\n      return KtoC(temperature);\r\n    default:\r\n      throw Errors.ErrorUnitsNotInRange;\r\n  }\r\n}\r\n\r\nexport function EnthalpyConversion(enthalpy, units) {\r\n  switch (units) {\r\n    case Units.SI:\r\n      return enthalpy;\r\n    case Units.USCustomary:\r\n      return BtuPerLbmToKjPerKg(enthalpy);\r\n    case Units.MetricBarA:\r\n      return enthalpy;\r\n    case Units.MetricKpa:\r\n      return enthalpy;\r\n    default:\r\n      throw Errors.ErrorUnitsNotInRange;\r\n  }\r\n}\r\n\r\nexport function EntropyConversion(entropy, units) {\r\n  switch (units) {\r\n    case Units.SI:\r\n      return entropy;\r\n    case Units.USCustomary:\r\n      return BtuPerLbmFtoKjPerKgK(entropy);\r\n    case Units.MetricBarA:\r\n      return entropy;\r\n    case Units.MetricKpa:\r\n      return entropy;\r\n    default:\r\n      throw Errors.ErrorUnitsNotInRange;\r\n  }\r\n}\r\n\r\nexport function SurfaceTensionConversion(surfaceTension, units) {\r\n  // Input is in milli-N/m\r\n  switch (units) {\r\n    case Units.SI:\r\n      return surfaceTension;\r\n    case Units.USCustomary:\r\n      return mNperMeterToLbfPerFt(surfaceTension);\r\n    case Units.MetricBarA:\r\n      return surfaceTension;\r\n    case Units.MetricKpa:\r\n      return surfaceTension;\r\n    default:\r\n      throw Errors.ErrorUnitsNotInRange;\r\n  }\r\n}\r\n\r\n// Temperature Conversions\r\nconst C0 = -273.15;\r\nconst F0 = 32.0;\r\n\r\nexport function KtoC(k) {\r\n  return k + C0;\r\n}\r\n\r\nexport function CtoF(c) {\r\n  return c * (9.0 / 5.0) + 32.0;\r\n}\r\n\r\nexport function KtoF(k) {\r\n  return CtoF(KtoC(k));\r\n}\r\n\r\nexport function CtoK(c) {\r\n  return c - C0;\r\n}\r\n\r\nexport function FtoC(Tf) {\r\n  return (Tf - F0) * (5.0 / 9.0);\r\n}\r\n\r\nexport function FtoK(f) {\r\n  return CtoK(FtoC(f));\r\n}\r\n\r\n// Pressure Conversions.  All pressures in absolute values (no gauge pressures)\r\nexport function MpaToKpa(mpa) {\r\n  return mpa * 1000.0;\r\n}\r\n\r\nexport function MpaToBar(mpa) {\r\n  return mpa * 10.0;\r\n}\r\n\r\nexport function BarToMpa(bar) {\r\n  return bar / 10.0;\r\n}\r\n\r\nexport function MpaToPsi(mpa) {\r\n  return KpaToPsi(MpaToKpa(mpa));\r\n}\r\n\r\nexport function KpaToMpa(kpa) {\r\n  return kpa / 1000.0;\r\n}\r\n\r\nexport function KpaToBar(kpa) {\r\n  return kpa / 100.0;\r\n}\r\n\r\nexport function KpaToPsi(kpa) {\r\n  return kpa / KpaPerPsi;\r\n}\r\n\r\nexport function PsiToKpa(psi) {\r\n  return psi * KpaPerPsi;\r\n}\r\n\r\nexport function PsiToMpa(psi) {\r\n  return KpaToMpa(PsiToKpa(psi));\r\n}\r\n\r\nexport function PsiToBar(psi) {\r\n  return KpaToBar(PsiToKpa(psi));\r\n}\r\n\r\n// Mass Conversions\r\nconst LbmPerKg = 2.2046226218;\r\nexport function KgToLbm(kg) {\r\n  return kg * LbmPerKg;\r\n}\r\n\r\nexport function LbmToKg(lbm) {\r\n  return lbm / LbmPerKg;\r\n}\r\n\r\n// Energy conversions  one calorie (IT) is defined to be exactly 4.1868J\r\nexport function KjToBtu(kJ) {\r\n  return Constants.BtuPerKj * kJ;\r\n}\r\n\r\nexport function BtuToKj(btu) {\r\n  return btu / Constants.BtuPerKj;\r\n}\r\n\r\n// Distance conversions\r\nconst FeetPerMeter = 1000.0 / (25.4 * 12.0); // (feet/meter) exact conversion\r\nexport function MeterToFt(m) {\r\n  // returns ft given a meter input\r\n  return m * FeetPerMeter;\r\n}\r\n\r\n// Volume conversions\r\nconst CubicFeetPerCubicMeter = Math.pow(MeterToFt(1), 3); // Number of cubic feet in one cubic meter\r\nexport function CubicMetersToCubicFeet(metersCubed) {\r\n  // returns cubic ft given a cubic meter input\r\n  return metersCubed * CubicFeetPerCubicMeter;\r\n}\r\n\r\n// Specific Volume conversions\r\nconst Ft3perLbm_per_M3PerKg = 1.601846e1; // ASME Steam Tables Book : Table 2-4\r\n\r\nexport function CubicMetersPerKgToCubicFeetPerLbm(cubicMetersPerKg) {\r\n  // returns ft^3/lbm given a m^3/kg input\r\n  return (cubicMetersPerKg * CubicFeetPerCubicMeter) / LbmPerKg;\r\n}\r\n\r\nexport function CubicFeetPerLbmToCubicMetersPerKg(cubicFtLbm) {\r\n  // returns ft^3/lbm given a m^3/kg input\r\n  return (cubicFtLbm / CubicFeetPerCubicMeter) * LbmPerKg;\r\n}\r\n\r\n// Enthalpy & Internal Energy conversions\r\nconst BtuPerLbm_Per_KjPerKg = 1 / 2.326; // ASME Steam Tables Book - Table 2-5\r\n\r\nexport function KjPerKgToBtuPerLbm(kjPerKg) {\r\n  return (kjPerKg * Constants.BtuPerKj) / LbmPerKg;\r\n}\r\n\r\nexport function BtuPerLbmToKjPerKg(BtuPerLbm) {\r\n  return (BtuPerLbm * LbmPerKg) / Constants.BtuPerKj;\r\n}\r\n\r\n// Entropy, Isobaric & Isochoric Heat Capacity conversions\r\nconst BtuPerLbmR_Per_KjPerKgK = 1.0 / 4.1868; // ASME steam tables book: Table 2.6\r\nexport function KjPerKgKtoBtuPerLbmF(kJPerKgK) {\r\n  return (kJPerKgK * Constants.BtuPerKj) / (LbmPerKg * (5 / 9)); // (5/9) is number of Kelvins per F.\r\n}\r\n\r\nexport function BtuPerLbmFtoKjPerKgK(btuPerLbmF) {\r\n  return (btuPerLbmF * (LbmPerKg * (5 / 9))) / Constants.BtuPerKj; // (5/9) is number of Kelvins per F.\r\n}\r\n\r\n// Speed conversions\r\nexport function MetersPerSecondToFeetPerSecond(metersPerSecond) {\r\n  return metersPerSecond * FeetPerMeter;\r\n}\r\n\r\n// Viscosity conversions\r\nconst LbfSecondPerFt2_Per_PascalSecond = 1 / 47.88025898034; //  (lbf-second/ft2) per Pascal Seconds\r\nexport function PascalSecond_To_LbfSecondPerFt2(PascalSecond) {\r\n  return LbfSecondPerFt2_Per_PascalSecond * PascalSecond;\r\n}\r\n\r\nconst CentiPoise_Per_PascalSecond = 1000; // 1000 Pascal*seconds per centiPoise\r\nexport function PascalSecond_To_Centipoise(PascalSecond) {\r\n  return CentiPoise_Per_PascalSecond * PascalSecond;\r\n}\r\n\r\n// Thermal Conductivity conversions\r\nconst BtuPerHrFtF_Per_mWattPerMeterK = 578.176; // ASME Steam Tables Book - Table 2-9\r\nexport function mWattPerMeterK_To_BtuPerHrFtF(mWattPerMeterK) {\r\n  return mWattPerMeterK * BtuPerHrFtF_Per_mWattPerMeterK;\r\n}\r\n\r\n// Surface Tension conversions\r\nconst LbfPerNewton = 1 / 4.4482216152605; // 1 lbf = 4.448 221 615 2605 N\r\nexport function mNperMeterToLbfPerFt(mNperMeter) {\r\n  // Converts mN/m to lbf/ft.  The first m is milli, 1/1000\r\n  return (1e-3 * mNperMeter * LbfPerNewton) / FeetPerMeter; // Multiply by 1E-3 to eliminate the milli (mN/m)\r\n}\r\n\r\n// Partial Derivative conversions.  The _per_ separates the partial derivative's numerator and denominator\r\nconst MPa_per_K_To_psia_per_R = 80.5765209611111; // multiply by this to convert (MPa/K) to (psia/R)\r\nconst MPa_per_K_To_bara_per_C = 10; // multiply by this to convert (MPa/K) to (bara/C)\r\nconst MPa_per_K_To_kPa_per_C = 1000; // multiply by this to convert (MPa/K) to (kPa/C)\r\n\r\nconst MPa_per_M3PerKg_To_psia_per_Ft3PerLbm = 9.0544120801874; // multiply by this to convert (MPa/(m3/kg)) to (psia/(ft3/lbm))\r\nconst MPa_per_M3PerKg_To_bara_per_M3PerKg = 10; // multiply by this to convert (MPa/(m3/kg)) to (bara/(m3/kg))\r\nconst MPa_per_M3PerKg_To_kPa_per_M3PerKg = 1000; // multiply by this to convert (MPa/(m3/kg)) to (kPa/(m3/kg))\r\n\r\nconst MPa_per_KjPerKg_To_psia_per_BtuPerLbm = 337.35777795998; // multiply by this to convert (MPa/(kJ/kg)) to (psia/(BTU/lbm))\r\nconst MPa_per_KjPerKg_To_bara_per_KjPerKg = 10; // multiply by this to convert (MPa/(kJ/kg)) to (bara/(kJ/kg))\r\nconst MPa_per_KjPerKg_To_kPa_per_KjPerKg = 1000; // multiply by this to convert (MPa/(kJ/kg)) to (kPa/(kJ/kg))\r\n\r\nconst MPa_per_KjPerKg_K_To_psia_per_BtuPerLbm_R = 607.244000327964; // multiply by this to convert (MPa/(kJ/kg*K)) to (psia/(BTU/lbm*R))\r\nconst MPa_per_KjPerKg_K_To_bara_per_KjPerKg_C = 10; // multiply by this to convert (MPa/(kJ/kg*K)) to (bara/(kJ/kg*C))\r\nconst MPa_per_KjPerKg_K_To_kPa_per_KjPerKg_C = 1000; // multiply by this to convert (MPa/(kJ/kg*K)) to (kPa/(kJ/kg*C))\r\n\r\nconst K_per_MPa_To_R_per_Psia = 0.012410563127721; // multiply by this to convert (K/MPa) to (R/psia)\r\nconst K_per_MPa_To_C_per_Bara = 0.1; // multiply by this to convert (K/MPa) to (C/bara)\r\nconst K_per_MPa_To_C_per_Kpa = 0.001; // multiply by this to convert (K/MPa) to (C/kPa)\r\n\r\nconst K_per_M3perKg_To_R_per_Ft3PerLbm = 0.112370352705566; // multiply by this to convert (K/(m3/kg)) to (R/(ft3/lbm))\r\nconst K_per_M3perKg_To_C_per_M3PerKg = 1; // multiply by this to convert (K/(m3/kg)) to (C/(m3/kg))\r\n\r\nconst K_per_KjPerKg_To_R_per_BtuPerLbm = 4.1868; // multiply by this to convert (K/(kJ/kg)) to (R/(BTU/lbm))\r\nconst K_per_KjPerKg_To_C_per_KjPerKg = 1; // multiply by this to convert (K/(kJ/kg)) to (C/(kJ/kg))\r\n\r\nconst K_per_KjPerKg_K_To_R_per_BtuPerLbm_R = 7.53624; // multiply by this to convert (K/(kJ/kg*K)) to (R/(BTU/lbm*R))\r\nconst K_per_KjPerKg_K_To_C_per_KjPerKg_C = 1; // multiply by this to convert (K/(kJ/kg*K)) to (C/(kJ/kg*C))\r\n\r\nconst M3PerKg_per_MPa_To_Ft3PerLbm_per_Psia = 0.110443393910485; // multiply by this to convert ((m3/kg)/MPa) to ((ft3/lbm)/psia)\r\nconst M3PerKg_per_MPa_To_M3PerKg_per_Bara = 0.1; // multiply by this to convert ((m3/kg)/MPa) to ((m3/kg)/bara)\r\nconst M3PerKg_per_MPa_To_M3PerKg_per_KPa = 0.001; // multiply by this to convert ((m3/kg)/MPa) to ((m3/kg)/kPa)\r\n\r\nconst M3PerKg_per_K_To_Ft3PerLbm_per_R = 8.89914444444445; // multiply by this to convert ((m3/kg)/K) to ((ft3/lbm)/R)\r\nconst M3PerKg_per_K_To_M3PerKg_per_C = 1; // multiply by this to convert ((m3/kg)/K) to ((m3/kg)/C)\r\n\r\nconst M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm = 37.25893796; // multiply by this to convert ((m3/kg)/(kJ/kg)) to ((ft3/lbm)/(BTU/lbm))\r\n\r\nconst M3PerKg_per_KjPerKg_K_To_Ft3perLbm_per_BtuPerLbmR = 67.066088328; // multiply by this to convert ((m3/kg)/(kJ/kg*K)) to ((ft3/lbm)/(BTU/lbm*R))\r\nconst M3PerKg_per_KjPerKg_K_To_M3PerKg_per_KjPerKgC = 1; // multiply by this to convert ((m3/kg)/(kJ/kg*K)) to ((m3/kg)/(kJ/kg*C))\r\n\r\nconst KjPerKg_per_MPa_To_BtuPerLbm_per_Psia = 0.0029642120779; // multiply by this to convert ((kJ/kg)/MPa) to ((BTU/lbm)/psia)\r\nconst KjPerKg_per_MPa_To_KjPerKg_per_Bara = 0.1; // multiply by this to convert ((kJ/kg)/MPa) to ((kJ/kg)/bara)\r\nconst KJPerKg_per_MPa_To_KjPerKg_per_Kpa = 0.001; // multiply by this to convert ((kJ/kg)/MPa) to ((kJ/kg)/kPa)\r\n\r\nconst KjPerKg_per_K_To_BtuPerLbm_per_R = 0.2388458966; // multiply by this to convert ((kJ/kg)/K) to ((BTU/lbm)/R)\r\nconst KjPerKg_per_K_To_KjPerKg_per_C = 1; // multiply by this to convert ((kJ/kg)/K) to ((kJ/kg)/C)\r\n\r\nconst KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm = 0.0268391976; // multiply by this to convert ((kJ/kg)/(m3/kg)) to ((BTU/lbm)/(ft3/lbm))\r\n\r\nconst KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR = 9.7384968; // multiply by this to convert ((kJ/kg)/(kJ/kg*K)) to ((BTU/lbm)/(BTU/lbm*R))\r\nconst KjPerKg_per_KjPerKgK_To_KjPerKg_per_KjPerKg_C = 1; // multiply by this to convert ((kJ/kg)/(kJ/kg*K)) to ((kJ/kg)/(kJ/kg*C))\r\n\r\nconst KjPerKgK_per_Mpa_To_BtuPerLbmR_per_Psia = 0.001646784488; // multiply by this to convert ((kJ/kg*K)/MPa) to ((BTU/lbm*R)/psia)\r\nconst KjPerKgK_per_Mpa_To_KjPerKgC_per_Bara = 0.1; // multiply by this to convert ((kJ/kg*K)/MPa) to ((kJ/kg*C)/bara)\r\nconst KjPerKgK_per_Mpa_To_KjPerKgC_per_KPa = 0.001; // multiply by this to convert (((kJ/kg*K)/MPa) to ((kJ/kg*C)/kPa)\r\n\r\nconst KjPerKgK_per_K_To_BtuPerLbmR_per_R = 0.132692165; // multiply by this to convert ((kJ/kg*K)/K) to ((BTU/lbm*R)/R)\r\nconst KjPerKgK_per_K_To_KjPerKgC_per_C = 1; // multiply by this to convert ((kJ/kg*K)/K) to ((kJ/kg*C)/C)\r\n\r\nconst KjPerKgK_per_M3PerKg_To_BtuPerLbmR_per_Ft3PerLbm = 1.491066536e-2; // multiply by this to convert ((kJ/kg*K)/(m3/kg)) to ((BTU/lbm*R)/(ft3/lbm))\r\nconst KjPerKgK_per_M3PerKg_To_KjPerKgC_per_M3PerKg = 1; // multiply by this to convert ((kJ/kg*K)/(m3/kg)) to ((kJ/kg*C)/(m3/kg))\r\n\r\nconst KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm = 0.102685252; // multiply by this to convert ((kJ/kg*K)/(kJ/kg)) to ((BTU/lbm*R)/(BTU/lbm))\r\nconst KjPerKgK_per_KjPerKg_To_KjPerKgC_per_KjPerKg = 1; // multiply by this to convert ((kJ/kg*K)/(kJ/kg)) to ((kJ/kg*C)/(kJ/kg))\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\n\r\n// This is SatPressure in Region 4. I put in a separate file, because Region1 was including Region 4, which\r\n// included region 1, making a circular reference...\r\n\r\n// calculate the saturation pressure: R7 Eq. 30\r\nexport function SatPressure(temperature) {\r\n  // if (Temperature >= 273.15 && Temperature <= 647.096)\r\n  if (temperature >= Constants.Tmin && temperature <= Constants.Tc_H2O) {\r\n    const theta = temperature + Constants.reg4_sat_eq_n[8] / (temperature - Constants.reg4_sat_eq_n[9]);\r\n    const A = Math.pow(theta, 2) + Constants.reg4_sat_eq_n[0] * theta + Constants.reg4_sat_eq_n[1];\r\n    const B =\r\n      Constants.reg4_sat_eq_n[2] * Math.pow(theta, 2) + Constants.reg4_sat_eq_n[3] * theta + Constants.reg4_sat_eq_n[4];\r\n    const C =\r\n      Constants.reg4_sat_eq_n[5] * Math.pow(theta, 2) + Constants.reg4_sat_eq_n[6] * theta + Constants.reg4_sat_eq_n[7];\r\n    const satPressure = Math.pow((2 * C) / (-B + Math.sqrt(Math.pow(B, 2) - 4 * A * C)), 4);\r\n    return satPressure;\r\n  } else throw Errors.TemperatureNotWithinValidRange;\r\n}\r\n\r\nconst T3q3r3u3xPoint = 643.15; // point where subregions 3q, 3r, 3u and 3x meet\r\nexport const reg4SatPressureT3q3r3u3xPoint = SatPressure(T3q3r3u3xPoint);\r\nexport const satPressureT13Boundary = SatPressure(Constants.T13_boundary); // Saturation pressure at the Regions 1-3 boundary temperature of 623.15 K,  equals 16.5292 MPa\r\nexport const satPressureTcH2O = SatPressure(Constants.Tc_H2O); // Saturation pressure at the critical point\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as Region4SatPressure from \"./Region4SatPressure.js\";\r\n\r\nconst R = Constants.R_H2O * 1000; // convert the kJ to Joules\r\n\r\nexport function Properties_fPT(pressure, temperature) {\r\n  try {\r\n    if (\r\n      temperature >= Constants.Tmin &&\r\n      temperature <= Constants.T13_boundary &&\r\n      pressure <= Constants.pmax &&\r\n      pressure >= Region4SatPressure.SatPressure(temperature) - 1e11\r\n    ) {\r\n      var p_Reducing = 16.53; // MPa.  R7-97 constants listed below eq 7\r\n      var T_reducing = 1386; // K. R7-97 constants listed below eq 7\r\n      var p = pressure * 1e6; // convert MPa to pascals\r\n\r\n      var gamma = 0; // Gibbs free energy\r\n      var gamma_pi = 0;\r\n      var gamma_tau = 0;\r\n      var gamma_pi_pi = 0;\r\n      var gamma_tau_tau = 0;\r\n      var gamma_pi_tau = 0;\r\n\r\n      var pi = pressure / p_Reducing; // Reduced Pressure\r\n      var tau = T_reducing / temperature; // Reduced Temperature\r\n\r\n      for (let i = 0; i < Constants.reg1_Gibb_I.length; i++) {\r\n        gamma +=\r\n          Constants.reg1_Gibb_n[i] *\r\n          Math.pow(7.1 - pi, Constants.reg1_Gibb_I[i]) *\r\n          Math.pow(tau - 1.222, Constants.reg1_Gibb_J[i]);\r\n        gamma_pi +=\r\n          -Constants.reg1_Gibb_n[i] *\r\n          Constants.reg1_Gibb_I[i] *\r\n          Math.pow(7.1 - pi, Constants.reg1_Gibb_I[i] - 1) *\r\n          Math.pow(tau - 1.222, Constants.reg1_Gibb_J[i]);\r\n        gamma_tau +=\r\n          Constants.reg1_Gibb_n[i] *\r\n          Math.pow(7.1 - pi, Constants.reg1_Gibb_I[i]) *\r\n          Constants.reg1_Gibb_J[i] *\r\n          Math.pow(tau - 1.222, Constants.reg1_Gibb_J[i] - 1);\r\n        gamma_pi_pi +=\r\n          Constants.reg1_Gibb_n[i] *\r\n          Constants.reg1_Gibb_I[i] *\r\n          (Constants.reg1_Gibb_I[i] - 1) *\r\n          Math.pow(7.1 - pi, Constants.reg1_Gibb_I[i] - 2) *\r\n          Math.pow(tau - 1.222, Constants.reg1_Gibb_J[i]);\r\n        gamma_tau_tau +=\r\n          Constants.reg1_Gibb_n[i] *\r\n          Math.pow(7.1 - pi, Constants.reg1_Gibb_I[i]) *\r\n          Constants.reg1_Gibb_J[i] *\r\n          (Constants.reg1_Gibb_J[i] - 1) *\r\n          Math.pow(tau - 1.222, Constants.reg1_Gibb_J[i] - 2);\r\n        gamma_pi_tau +=\r\n          -Constants.reg1_Gibb_n[i] *\r\n          Constants.reg1_Gibb_I[i] *\r\n          Math.pow(7.1 - pi, Constants.reg1_Gibb_I[i] - 1) *\r\n          Constants.reg1_Gibb_J[i] *\r\n          Math.pow(tau - 1.222, Constants.reg1_Gibb_J[i] - 1);\r\n      }\r\n\r\n      var Volume = (R * temperature * pi * gamma_pi) / p;\r\n      var InternalEnergy = Constants.R_H2O * temperature * (tau * gamma_tau - pi * gamma_pi);\r\n      var Entropy = Constants.R_H2O * (tau * gamma_tau - gamma);\r\n      var Enthalpy = Constants.R_H2O * temperature * tau * gamma_tau;\r\n      var IsobaricHeat = -Constants.R_H2O * Math.pow(tau, 2) * gamma_tau_tau;\r\n      var IsochoricHeat =\r\n        Constants.R_H2O *\r\n        (-Math.pow(tau, 2) * gamma_tau_tau + Math.pow(gamma_pi - tau * gamma_pi_tau, 2) / gamma_pi_pi);\r\n      var SpeedOfSound = Math.sqrt(\r\n        (R * temperature * Math.pow(gamma_pi, 2)) /\r\n          (Math.pow(gamma_pi - tau * gamma_pi_tau, 2) / (Math.pow(tau, 2) * gamma_tau_tau) - gamma_pi_pi)\r\n      );\r\n\r\n      // Equations below calculate the various properties partial derivatives.  The derivate functions below the first group use IAPWS AN3-07 (2018) Equation 1\r\n      var alpha_v = (1 / temperature) * (1 - (tau * gamma_pi_tau) / gamma_pi); // IAPWS AN3-07 (2018) Eq 6\r\n      var kappa_T = -(1 / pressure) * ((pi * gamma_pi_pi) / gamma_pi); // IAPWS AN3-07 (2018) Eq 6\r\n      var dPdT_P = 0; //  IAPWS AN3-07 (2018) Table 2\r\n      var dTdT_P = 1; // IAPWS AN3-07 (2018) Table 2\r\n      var dVdT_P = Volume * alpha_v; // Array Index 56: IAPWS AN3-07 (2018) Table 2\r\n      var dUdT_P = IsobaricHeat - pressure * 1000 * Volume * alpha_v; // Array Index 76: IAPWS AN3-07 (2018) Table 2\r\n      var dHdT_P = IsobaricHeat; // Array Index 96: IAPWS AN3-07 (2018) Table 2\r\n      var dSdT_P = IsobaricHeat / temperature; // Array Index 116: IAPWS AN3-07 (2018) Table 2\r\n      var dPdP_T = 1; // IAPWS AN3-07 (2018) Table 2\r\n      var dTdP_T = 0; // IAPWS AN3-07 (2018) Table 2\r\n      var dVdP_T = -Volume * kappa_T; // Array Index 52: IAPWS AN3-07 (2018) Table 2\r\n      var dUdP_T = 1000 * Volume * (pressure * kappa_T - temperature * alpha_v); // Array Index 72: IAPWS AN3-07 (2018) Table 2\r\n      var dHdP_T = 1000 * Volume * (1 - temperature * alpha_v); // Array Index 92: IAPWS AN3-07 (2018) Table 2\r\n      var dSdP_T = 1000 * (-Volume * alpha_v); // Array Index 112: IAPWS AN3-07 (2018) Table 2\r\n\r\n      // The following five groups provide the partial derivatives of pressure.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n      var dPdT_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 12\r\n      var dPdT_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 13\r\n      var dPdT_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 14\r\n      var dPdT_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 15\r\n\r\n      var dPdV_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 16\r\n      var dPdV_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 17\r\n      var dPdV_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 18\r\n      var dPdV_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 19\r\n\r\n      var dPdU_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 20\r\n      var dPdU_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 21\r\n      var dPdU_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 22\r\n      var dPdU_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 23\r\n\r\n      var dPdH_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 24\r\n      var dPdH_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 25\r\n      var dPdH_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 26\r\n      var dPdH_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 27\r\n\r\n      var dPdS_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 28\r\n      var dPdS_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 29\r\n      var dPdS_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 30\r\n      var dPdS_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 31\r\n\r\n      // The following five groups provide the partial derivatives of temperature.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n      var dTdP_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 32\r\n      var dTdP_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 33\r\n      var dTdP_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 34\r\n      var dTdP_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 35\r\n\r\n      var dTdV_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 36\r\n      var dTdV_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 37\r\n      var dTdV_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 38\r\n      var dTdV_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 39\r\n\r\n      var dTdU_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 40\r\n      var dTdU_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 41\r\n      var dTdU_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 42\r\n      var dTdU_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 43\r\n\r\n      var dTdH_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 44\r\n      var dTdH_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 45\r\n      var dTdH_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 46\r\n      var dTdH_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 47\r\n\r\n      var dTdS_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 48\r\n      var dTdS_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 49\r\n      var dTdS_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 50\r\n      var dTdS_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 51\r\n\r\n      // The following five groups provide the partial derivatives of volume.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n      var dVdP_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 53\r\n      var dVdP_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 54\r\n      var dVdP_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 55\r\n\r\n      var dVdT_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 57\r\n      var dVdT_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 58\r\n      var dVdT_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 59\r\n\r\n      var dVdU_P = (dVdP_T * dPdT_P - dVdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 60\r\n      var dVdU_T = (dVdP_T * dTdT_P - dVdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 61\r\n      var dVdU_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 62\r\n      var dVdU_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 63\r\n\r\n      var dVdH_P = (dVdP_T * dPdT_P - dVdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 64\r\n      var dVdH_T = (dVdP_T * dTdT_P - dVdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 65\r\n      var dVdH_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 66\r\n      var dVdH_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 67\r\n\r\n      var dVdS_P = (dVdP_T * dPdT_P - dVdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 68\r\n      var dVdS_T = (dVdP_T * dTdT_P - dVdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 69\r\n      var dVdS_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 70\r\n      var dVdS_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 71\r\n\r\n      // The following five groups provide the partial derivatives of internal energy.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n      var dUdP_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 73\r\n      var dUdP_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 74\r\n      var dUdP_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 75\r\n\r\n      var dUdT_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 77\r\n      var dUdT_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 78\r\n      var dUdT_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 79\r\n\r\n      var dUdV_P = (dUdP_T * dPdT_P - dUdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 80\r\n      var dUdV_T = (dUdP_T * dTdT_P - dUdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 81\r\n      var dUdV_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 82\r\n      var dUdV_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 83\r\n\r\n      var dUdH_P = (dUdP_T * dPdT_P - dUdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 84\r\n      var dUdH_T = (dUdP_T * dTdT_P - dUdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 85\r\n      var dUdH_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 86\r\n      var dUdH_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 87\r\n\r\n      var dUdS_P = (dUdP_T * dPdT_P - dUdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 88\r\n      var dUdS_T = (dUdP_T * dTdT_P - dUdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 89\r\n      var dUdS_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 90\r\n      var dUdS_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 91\r\n\r\n      // The following five groups provide the partial derivatives of enthalpy.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n      var dHdP_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 93\r\n      var dHdP_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 94\r\n      var dHdP_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 95\r\n\r\n      var dHdT_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 97\r\n      var dHdT_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 98\r\n      var dHdT_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 99\r\n\r\n      var dHdV_P = (dHdP_T * dPdT_P - dHdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 100\r\n      var dHdV_T = (dHdP_T * dTdT_P - dHdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 101\r\n      var dHdV_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 102\r\n      var dHdV_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 103\r\n\r\n      var dHdU_P = (dHdP_T * dPdT_P - dHdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 104\r\n      var dHdU_T = (dHdP_T * dTdT_P - dHdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 105\r\n      var dHdU_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 106\r\n      var dHdU_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 107\r\n\r\n      var dHdS_P = (dHdP_T * dPdT_P - dHdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 108\r\n      var dHdS_T = (dHdP_T * dTdT_P - dHdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 109\r\n      var dHdS_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 110\r\n      var dHdS_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 111\r\n\r\n      // The following five groups provide the partial derivatives of entropy.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n      var dSdP_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 113\r\n      var dSdP_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 114\r\n      var dSdP_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 115\r\n\r\n      var dSdT_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 117\r\n      var dSdT_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 118\r\n      var dSdT_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 119\r\n\r\n      var dSdV_P = (dSdP_T * dPdT_P - dSdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 120\r\n      var dSdV_T = (dSdP_T * dTdT_P - dSdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 121\r\n      var dSdV_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 122\r\n      var dSdV_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 123\r\n\r\n      var dSdU_P = (dSdP_T * dPdT_P - dSdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 124\r\n      var dSdU_T = (dSdP_T * dTdT_P - dSdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 125\r\n      var dSdU_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 126\r\n      var dSdU_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 127\r\n\r\n      var dSdH_P = (dSdP_T * dPdT_P - dSdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 128\r\n      var dSdH_T = (dSdP_T * dTdT_P - dSdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 129\r\n      var dSdH_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 130\r\n      var dSdH_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 131\r\n\r\n      // Array indices for the first 10 steam properties values\r\n      // [(0) Pressure, (1) Temperature, (2) Quality, (3) Enthalpy, (4) Entropy, (5) InternalEnergy, (6) Volume\r\n      //  (7) IsobaricHeat, (8) IsochoricHeat, (9) SpeedOfSound\r\n\r\n      return [\r\n        pressure, // 0\r\n        temperature, // 1\r\n        0.0, // 2\r\n        Enthalpy, // 3\r\n        Entropy, // 4\r\n        InternalEnergy, // 5\r\n        Volume, // 6\r\n        IsobaricHeat, // 7\r\n        IsochoricHeat, // 8\r\n        SpeedOfSound, // 9\r\n        0, // 10\r\n        0, // 11\r\n        dPdT_V, // 12\r\n        dPdT_U, // 13\r\n        dPdT_H, // 14\r\n        dPdT_S, // 15\r\n        dPdV_T, // 16\r\n        dPdV_U, // 17\r\n        dPdV_H, // 18\r\n        dPdV_S, // 19\r\n        dPdU_T, // 20\r\n        dPdU_V, // 21\r\n        dPdU_H, // 22\r\n        dPdU_S, // 23\r\n        dPdH_T, // 24\r\n        dPdH_V, // 25\r\n        dPdH_U, // 26\r\n        dPdH_S, // 27\r\n        dPdS_T, // 28\r\n        dPdS_V, // 29\r\n        dPdS_U, // 30\r\n        dPdS_H, // 31\r\n        dTdP_V, // 32\r\n        dTdP_U, // 33\r\n        dTdP_H, // 34\r\n        dTdP_S, // 35\r\n        dTdV_P, // 36\r\n        dTdV_U, // 37\r\n        dTdV_H, // 38\r\n        dTdV_S, // 39\r\n        dTdU_P, // 40\r\n        dTdU_V, // 41\r\n        dTdU_H, // 42\r\n        dTdU_S, // 43\r\n        dTdH_P, // 44\r\n        dTdH_V, // 45\r\n        dTdH_U, // 46\r\n        dTdH_S, // 47\r\n        dTdS_P, // 48\r\n        dTdS_V, // 49\r\n        dTdS_U, // 50\r\n        dTdS_H, // 51\r\n        dVdP_T, // 52\r\n        dVdP_U, // 53\r\n        dVdP_H, // 54\r\n        dVdP_S, // 55\r\n        dVdT_P, // 56\r\n        dVdT_U, // 57\r\n        dVdT_H, // 58\r\n        dVdT_S, // 59\r\n        dVdU_P, // 60\r\n        dVdU_T, // 61\r\n        dVdU_H, // 62\r\n        dVdU_S, // 63\r\n        dVdH_P, // 64\r\n        dVdH_T, // 65\r\n        dVdH_U, // 66\r\n        dVdH_S, // 67\r\n        dVdS_P, // 68\r\n        dVdS_T, // 69\r\n        dVdS_U, // 70\r\n        dVdS_H, // 71\r\n        dUdP_T, // 72\r\n        dUdP_V, // 73\r\n        dUdP_H, // 71\r\n        dUdP_S, // 72\r\n        dUdT_P, // 73\r\n        dUdT_V, // 74\r\n        dUdT_H, // 75\r\n        dUdT_S, // 76\r\n        dUdV_P, // 77\r\n        dUdV_T, // 78\r\n        dUdV_H, // 79\r\n        dUdV_S, // 80\r\n        dUdH_P, // 81\r\n        dUdH_T, // 82\r\n        dUdH_V, // 83\r\n        dUdH_S, // 84\r\n        dUdS_P, // 85\r\n        dUdS_T, // 86\r\n        dUdS_V, // 87\r\n        dUdS_H, // 88\r\n        dHdP_T, // 89\r\n        dHdP_V, // 90\r\n        dHdP_U, // 91\r\n        dHdP_S, // 92\r\n        dHdT_P, // 93\r\n        dHdT_V, // 94\r\n        dHdT_U, // 95\r\n        dHdT_S, // 96\r\n        dHdV_P, // 97\r\n        dHdV_T, // 98\r\n        dHdV_U, // 99\r\n        dHdV_S, // 100\r\n        dHdU_P, // 101\r\n        dHdU_T, // 102\r\n        dHdU_V, // 103\r\n        dHdU_S, // 104\r\n        dHdS_P, // 105\r\n        dHdS_T, // 106\r\n        dHdS_V, // 107\r\n        dHdS_U, // 108\r\n        dSdP_T, // 109\r\n        dSdP_V, // 110\r\n        dSdP_U, // 111\r\n        dSdP_H, // 112\r\n        dSdT_P, // 113\r\n        dSdT_V, // 114\r\n        dSdT_U, // 115\r\n        dSdT_H, // 116\r\n        dSdV_P, // 117\r\n        dSdV_T, // 118\r\n        dSdV_U, // 119\r\n        dSdV_H, // 120\r\n        dSdU_P, // 121\r\n        dSdU_T, // 122\r\n        dSdU_V, // 123\r\n        dSdU_H, // 124\r\n        dSdH_P, // 125\r\n        dSdH_T, // 126\r\n        dSdH_V, // 127\r\n        dSdH_U, // 128\r\n      ];\r\n    }\r\n    throw Errors.TemperatureOrPressureNotInRegion1;\r\n  } catch (err) {\r\n    throw Errors.TemperatureOrPressureNotInRegion1;\r\n  }\r\n}\r\n\r\nexport function T_fPH(pressure, enthalpy) {\r\n  var h_Reducing = 2500; // kJ/kg\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg1_Tph_I.length; i++) {\r\n    theta +=\r\n      Constants.reg1_Tph_n[i] *\r\n      Math.pow(pressure, Constants.reg1_Tph_I[i]) *\r\n      Math.pow(1 + enthalpy / h_Reducing, Constants.reg1_Tph_J[i]);\r\n  }\r\n  if (theta > 623.15 && theta < 623.175) {\r\n    theta = 623.15;\r\n  }\r\n  return theta;\r\n}\r\n\r\nexport function T_fPS(pressure, entropy) {\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg1_Tps_I.length; i++) {\r\n    theta +=\r\n      Constants.reg1_Tps_n[i] *\r\n      Math.pow(pressure, Constants.reg1_Tps_I[i]) *\r\n      Math.pow(entropy + 2, Constants.reg1_Tps_J[i]);\r\n  }\r\n\r\n  if (theta > 623.15 && theta < 623.175) {\r\n    theta = 623.15;\r\n  }\r\n\r\n  return theta;\r\n}\r\n\r\n// IAPWS SR2 Equation 1\r\nexport function P_fHS(enthalpy, entropy) {\r\n  var p_Reducing = 100; // MPa\r\n  var h_Reducing = 3400; // kJ/kg\r\n  var s_Reducing = 7.6; // kJ/kg-K\r\n\r\n  var eta = enthalpy / h_Reducing;\r\n  var sigma = entropy / s_Reducing;\r\n\r\n  var pi = 0;\r\n  for (let i = 0; i < Constants.reg1_pHS_I.length; i++) {\r\n    pi +=\r\n      Constants.reg1_pHS_n[i] *\r\n      Math.pow(eta + 0.05, Constants.reg1_pHS_I[i]) *\r\n      Math.pow(sigma + 0.05, Constants.reg1_pHS_J[i]);\r\n  }\r\n  return pi * p_Reducing;\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\n\r\n/// <summary>\r\n/// calculate the region 2-3 boundary pressure as a function of temperature; p f(T) R7 eq 5\r\n/// </summary>\r\n/// <param name=\"temperature\"></param>\r\n/// <returns>\"region 2-3 boundary pressure p(T)\"</returns>\r\nexport function reg23BoundaryPfT(temperature) {\r\n  // if (Temperature>= 623.15 && Temperature<= 863.15 )\r\n  var pi =\r\n    Constants.reg2_3Boundary[0] +\r\n    Constants.reg2_3Boundary[1] * temperature +\r\n    Constants.reg2_3Boundary[2] * Math.pow(temperature, 2);\r\n  return pi;\r\n}\r\n\r\n/// <summary>\r\n/// calculate the region 2-3 boundary pressure as function of temperature; p f(T): R7 eq 6\r\n/// </summary>\r\n/// <param name=\"pressure\"></param>\r\n/// <returns>\"region 2-3 boundary temperature T(p)\"</returns>\r\nexport function reg23BoundaryTfP(pressure) {\r\n  // if (Pressure>= 16.5292 && Pressure <= 100)\r\n  //var temp = pressure - Constants.reg2_3Boundary[4];\r\n  //var temp1 = temp * 1;\r\n  var theta =\r\n    Constants.reg2_3Boundary[3] + Math.sqrt((pressure - Constants.reg2_3Boundary[4]) / Constants.reg2_3Boundary[2]);\r\n  return theta;\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as Region4Calculations from \"./Region4Calculations.js\";\r\nimport * as Region4SatPressure from \"./Region4SatPressure.js\";\r\nimport * as Boundary2_3 from \"./Boundary2_3Calculations.js\";\r\n\r\nexport const p3cd = 1.900881189173929e1; // MPa  SR5 note at bottom of Table 2.\r\nconst R = Constants.R_H2O * 1000; // convert the kJ in R to Joules\r\nconst Pcritical = 22.064; // Critical Pressure\r\n\r\n//  This class is used to merge different data types into a new type.\r\n//  This is used to build an array of elements of the new type that hold\r\n//  all the constants required for the 26 subregions for the Region 3 calculations.\r\nclass Reg3SubregionParameters {\r\n  constructor(\r\n    reducingVolume,\r\n    reducingPressure,\r\n    reducingTemperature,\r\n    aParam,\r\n    bParam,\r\n    cParam,\r\n    dParam,\r\n    eParam,\r\n    iParam,\r\n    jParam,\r\n    nParam\r\n  ) {\r\n    this.ReducingVolume = reducingVolume;\r\n    this.ReducingPressure = reducingPressure;\r\n    this.ReducingTemperature = reducingTemperature;\r\n    this.aParameter = aParam;\r\n    this.bParameter = bParam;\r\n    this.cParameter = cParam;\r\n    this.dParameter = dParam;\r\n    this.eParameter = eParam;\r\n    this.I = iParam;\r\n    this.J = jParam;\r\n    this.n = nParam;\r\n  }\r\n}\r\n\r\nexport const reg3Constants = [\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3a_v,\r\n    Constants.reg3a_p,\r\n    Constants.reg3a_T,\r\n    Constants.reg3a_a,\r\n    Constants.reg3a_b,\r\n    Constants.reg3a_c,\r\n    Constants.reg3a_d,\r\n    Constants.reg3a_e,\r\n    Constants.reg3a_I,\r\n    Constants.reg3a_J,\r\n    Constants.reg3a_n\r\n  ), //[0]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3b_v,\r\n    Constants.reg3b_p,\r\n    Constants.reg3b_T,\r\n    Constants.reg3b_a,\r\n    Constants.reg3b_b,\r\n    Constants.reg3b_c,\r\n    Constants.reg3b_d,\r\n    Constants.reg3b_e,\r\n    Constants.reg3b_I,\r\n    Constants.reg3b_J,\r\n    Constants.reg3b_n\r\n  ), //[1]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3c_v,\r\n    Constants.reg3c_p,\r\n    Constants.reg3c_T,\r\n    Constants.reg3c_a,\r\n    Constants.reg3c_b,\r\n    Constants.reg3c_c,\r\n    Constants.reg3c_d,\r\n    Constants.reg3c_e,\r\n    Constants.reg3c_I,\r\n    Constants.reg3c_J,\r\n    Constants.reg3c_n\r\n  ), //[2]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3d_v,\r\n    Constants.reg3d_p,\r\n    Constants.reg3d_T,\r\n    Constants.reg3d_a,\r\n    Constants.reg3d_b,\r\n    Constants.reg3d_c,\r\n    Constants.reg3d_d,\r\n    Constants.reg3d_e,\r\n    Constants.reg3d_I,\r\n    Constants.reg3d_J,\r\n    Constants.reg3d_n\r\n  ), //[3]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3e_v,\r\n    Constants.reg3e_p,\r\n    Constants.reg3e_T,\r\n    Constants.reg3e_a,\r\n    Constants.reg3e_b,\r\n    Constants.reg3e_c,\r\n    Constants.reg3e_d,\r\n    Constants.reg3e_e,\r\n    Constants.reg3e_I,\r\n    Constants.reg3e_J,\r\n    Constants.reg3e_n\r\n  ), //[4]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3f_v,\r\n    Constants.reg3f_p,\r\n    Constants.reg3f_T,\r\n    Constants.reg3f_a,\r\n    Constants.reg3f_b,\r\n    Constants.reg3f_c,\r\n    Constants.reg3f_d,\r\n    Constants.reg3f_e,\r\n    Constants.reg3f_I,\r\n    Constants.reg3f_J,\r\n    Constants.reg3f_n\r\n  ), //[5]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3g_v,\r\n    Constants.reg3g_p,\r\n    Constants.reg3g_T,\r\n    Constants.reg3g_a,\r\n    Constants.reg3g_b,\r\n    Constants.reg3g_c,\r\n    Constants.reg3g_d,\r\n    Constants.reg3g_e,\r\n    Constants.reg3g_I,\r\n    Constants.reg3g_J,\r\n    Constants.reg3g_n\r\n  ), //[6]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3h_v,\r\n    Constants.reg3h_p,\r\n    Constants.reg3h_T,\r\n    Constants.reg3h_a,\r\n    Constants.reg3h_b,\r\n    Constants.reg3h_c,\r\n    Constants.reg3h_d,\r\n    Constants.reg3h_e,\r\n    Constants.reg3h_I,\r\n    Constants.reg3h_J,\r\n    Constants.reg3h_n\r\n  ), //[7]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3i_v,\r\n    Constants.reg3i_p,\r\n    Constants.reg3i_T,\r\n    Constants.reg3i_a,\r\n    Constants.reg3i_b,\r\n    Constants.reg3i_c,\r\n    Constants.reg3i_d,\r\n    Constants.reg3i_e,\r\n    Constants.reg3i_I,\r\n    Constants.reg3i_J,\r\n    Constants.reg3i_n\r\n  ), //[8]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3j_v,\r\n    Constants.reg3j_p,\r\n    Constants.reg3j_T,\r\n    Constants.reg3j_a,\r\n    Constants.reg3j_b,\r\n    Constants.reg3j_c,\r\n    Constants.reg3j_d,\r\n    Constants.reg3j_e,\r\n    Constants.reg3j_I,\r\n    Constants.reg3j_J,\r\n    Constants.reg3j_n\r\n  ), //[9]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3k_v,\r\n    Constants.reg3k_p,\r\n    Constants.reg3k_T,\r\n    Constants.reg3k_a,\r\n    Constants.reg3k_b,\r\n    Constants.reg3k_c,\r\n    Constants.reg3k_d,\r\n    Constants.reg3k_e,\r\n    Constants.reg3k_I,\r\n    Constants.reg3k_J,\r\n    Constants.reg3k_n\r\n  ), //[10]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3l_v,\r\n    Constants.reg3l_p,\r\n    Constants.reg3l_T,\r\n    Constants.reg3l_a,\r\n    Constants.reg3l_b,\r\n    Constants.reg3l_c,\r\n    Constants.reg3l_d,\r\n    Constants.reg3l_e,\r\n    Constants.reg3l_I,\r\n    Constants.reg3l_J,\r\n    Constants.reg3l_n\r\n  ), //[11]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3m_v,\r\n    Constants.reg3m_p,\r\n    Constants.reg3m_T,\r\n    Constants.reg3m_a,\r\n    Constants.reg3m_b,\r\n    Constants.reg3m_c,\r\n    Constants.reg3m_d,\r\n    Constants.reg3m_e,\r\n    Constants.reg3m_I,\r\n    Constants.reg3m_J,\r\n    Constants.reg3m_n\r\n  ), //[12]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3n_v,\r\n    Constants.reg3n_p,\r\n    Constants.reg3n_T,\r\n    Constants.reg3n_a,\r\n    Constants.reg3n_b,\r\n    1.0,\r\n    1.0,\r\n    1.0,\r\n    Constants.reg3n_I,\r\n    Constants.reg3n_J,\r\n    Constants.reg3n_n\r\n  ), //[13]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3o_v,\r\n    Constants.reg3o_p,\r\n    Constants.reg3o_T,\r\n    Constants.reg3o_a,\r\n    Constants.reg3o_b,\r\n    Constants.reg3o_c,\r\n    Constants.reg3o_d,\r\n    Constants.reg3o_e,\r\n    Constants.reg3o_I,\r\n    Constants.reg3o_J,\r\n    Constants.reg3o_n\r\n  ), //[14]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3p_v,\r\n    Constants.reg3p_p,\r\n    Constants.reg3p_T,\r\n    Constants.reg3p_a,\r\n    Constants.reg3p_b,\r\n    Constants.reg3p_c,\r\n    Constants.reg3p_d,\r\n    Constants.reg3p_e,\r\n    Constants.reg3p_I,\r\n    Constants.reg3p_J,\r\n    Constants.reg3p_n\r\n  ), //[15]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3q_v,\r\n    Constants.reg3q_p,\r\n    Constants.reg3q_T,\r\n    Constants.reg3q_a,\r\n    Constants.reg3q_b,\r\n    Constants.reg3q_c,\r\n    Constants.reg3q_d,\r\n    Constants.reg3q_e,\r\n    Constants.reg3q_I,\r\n    Constants.reg3q_J,\r\n    Constants.reg3q_n\r\n  ), //[16]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3r_v,\r\n    Constants.reg3r_p,\r\n    Constants.reg3r_T,\r\n    Constants.reg3r_a,\r\n    Constants.reg3r_b,\r\n    Constants.reg3r_c,\r\n    Constants.reg3r_d,\r\n    Constants.reg3r_e,\r\n    Constants.reg3r_I,\r\n    Constants.reg3r_J,\r\n    Constants.reg3r_n\r\n  ), //[17]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3s_v,\r\n    Constants.reg3s_p,\r\n    Constants.reg3s_T,\r\n    Constants.reg3s_a,\r\n    Constants.reg3s_b,\r\n    Constants.reg3s_c,\r\n    Constants.reg3s_d,\r\n    Constants.reg3s_e,\r\n    Constants.reg3s_I,\r\n    Constants.reg3s_J,\r\n    Constants.reg3s_n\r\n  ), //[18]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3t_v,\r\n    Constants.reg3t_p,\r\n    Constants.reg3t_T,\r\n    Constants.reg3t_a,\r\n    Constants.reg3t_b,\r\n    Constants.reg3t_c,\r\n    Constants.reg3t_d,\r\n    Constants.reg3t_e,\r\n    Constants.reg3t_I,\r\n    Constants.reg3t_J,\r\n    Constants.reg3t_n\r\n  ), //[19]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3u_v,\r\n    Constants.reg3u_p,\r\n    Constants.reg3u_T,\r\n    Constants.reg3u_a,\r\n    Constants.reg3u_b,\r\n    Constants.reg3u_c,\r\n    Constants.reg3u_d,\r\n    Constants.reg3u_e,\r\n    Constants.reg3u_I,\r\n    Constants.reg3u_J,\r\n    Constants.reg3u_n\r\n  ), //[20]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3v_v,\r\n    Constants.reg3v_p,\r\n    Constants.reg3v_T,\r\n    Constants.reg3v_a,\r\n    Constants.reg3v_b,\r\n    Constants.reg3v_c,\r\n    Constants.reg3v_d,\r\n    Constants.reg3v_e,\r\n    Constants.reg3v_I,\r\n    Constants.reg3v_J,\r\n    Constants.reg3v_n\r\n  ), //[21]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3w_v,\r\n    Constants.reg3w_p,\r\n    Constants.reg3w_T,\r\n    Constants.reg3w_a,\r\n    Constants.reg3w_b,\r\n    Constants.reg3w_c,\r\n    Constants.reg3w_d,\r\n    Constants.reg3w_e,\r\n    Constants.reg3w_I,\r\n    Constants.reg3w_J,\r\n    Constants.reg3w_n\r\n  ), //[22]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3x_v,\r\n    Constants.reg3x_p,\r\n    Constants.reg3x_T,\r\n    Constants.reg3x_a,\r\n    Constants.reg3x_b,\r\n    Constants.reg3x_c,\r\n    Constants.reg3x_d,\r\n    Constants.reg3x_e,\r\n    Constants.reg3x_I,\r\n    Constants.reg3x_J,\r\n    Constants.reg3x_n\r\n  ), //[23]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3y_v,\r\n    Constants.reg3y_p,\r\n    Constants.reg3y_T,\r\n    Constants.reg3y_a,\r\n    Constants.reg3y_b,\r\n    Constants.reg3y_c,\r\n    Constants.reg3y_d,\r\n    Constants.reg3y_e,\r\n    Constants.reg3y_I,\r\n    Constants.reg3y_J,\r\n    Constants.reg3y_n\r\n  ), //[24]\r\n  new Reg3SubregionParameters(\r\n    Constants.reg3z_v,\r\n    Constants.reg3z_p,\r\n    Constants.reg3z_T,\r\n    Constants.reg3z_a,\r\n    Constants.reg3z_b,\r\n    Constants.reg3z_c,\r\n    Constants.reg3z_d,\r\n    Constants.reg3z_e,\r\n    Constants.reg3z_I,\r\n    Constants.reg3z_J,\r\n    Constants.reg3z_n\r\n  ), //[25]\r\n];\r\n\r\n// method for calculating the region 3 subregion boundaries\r\n// SR5-05: Eq. 1\r\nexport function Reg3SubregBoundaryMost(p, I, n) {\r\n  // Subregion boundaries; except for T3ab, T3ef, T3op\r\n  var T3Boundary = 0;\r\n  for (let i = 0; i < I.length; i++) {\r\n    T3Boundary += n[i] * Math.pow(p, I[i]);\r\n  }\r\n  return T3Boundary;\r\n}\r\n\r\n// SR5-05: Eq. 2\r\nexport function Reg3SubregAbOpWxBoundary(p, I, n) {\r\n  // Subregion T3ab, T3op boundaries\r\n  var T3Boundary = 0;\r\n  for (let i = 0; i < I.length; i++) {\r\n    T3Boundary += n[i] * Math.pow(Math.log(p), I[i]);\r\n  }\r\n  return T3Boundary;\r\n}\r\n\r\n// SR5-05: Eq. 3\r\nexport function Reg3SubregEfBoundary(p) {\r\n  // Subregion ef boundary\r\n  var T3Boundary = 3.727888004 * (p - Pcritical) + 647.096;\r\n  return T3Boundary;\r\n}\r\n\r\n// SR5-05 Eq 4\r\n// method to calculate v(p,T) valid for subregion 3a ([0]) through 3t (19]), except 3n: Also applies to subregions 3u to 3z\r\nexport function SubRegion3V(i, pressure, temperature, SR3Parameters) {\r\n  // i is the subregion; 0 is a, 1 is b, etc.\r\n  var wRoot = 0;\r\n  var pi = pressure / SR3Parameters[i].ReducingPressure;\r\n  var theta = temperature / SR3Parameters[i].ReducingTemperature;\r\n  var A = Math.pow(pi - SR3Parameters[i].aParameter, SR3Parameters[i].cParameter);\r\n  var B = Math.pow(theta - SR3Parameters[i].bParameter, SR3Parameters[i].dParameter);\r\n  for (let j = 0; j < SR3Parameters[i].I.length; j++) {\r\n    wRoot += SR3Parameters[i].n[j] * Math.pow(A, SR3Parameters[i].I[j]) * Math.pow(B, SR3Parameters[i].J[j]);\r\n  }\r\n  var w = Math.pow(wRoot, SR3Parameters[i].eParameter);\r\n  return w * SR3Parameters[i].ReducingVolume;\r\n}\r\n\r\n// SR5-05 Eq 5\r\n// method to calculate v(p,T) valid for subregion 3n\r\nexport function SubRegion3V_n(i, pressure, temperature, SR3Parameters) {\r\n  var pi = pressure / SR3Parameters[i].ReducingPressure;\r\n  var theta = temperature / SR3Parameters[i].ReducingTemperature;\r\n  var wRoot = 0;\r\n  for (let j = 0; j < SR3Parameters[i].I.length; j++) {\r\n    wRoot +=\r\n      SR3Parameters[i].n[j] *\r\n      Math.pow(pi - SR3Parameters[i].aParameter, SR3Parameters[i].I[j]) *\r\n      Math.pow(theta - SR3Parameters[i].bParameter, SR3Parameters[i].J[j]);\r\n  }\r\n  return SR3Parameters[i].ReducingVolume * Math.exp(wRoot);\r\n}\r\n\r\n// Function used to find volume f(p,T) because the region 3 return values are all functions of volume\r\nexport function Properties_fPT(pressure, temperature) {\r\n  if (\r\n    temperature >= Constants.T13_boundary &&\r\n    temperature <= Boundary2_3.reg23BoundaryTfP(pressure) &&\r\n    pressure <= Constants.pmax &&\r\n    pressure >= Boundary2_3.reg23BoundaryPfT(temperature)\r\n  ) {\r\n    const volume = Volume_fPT(pressure, temperature);\r\n    var properties = Properties_fVT(volume, temperature);\r\n    properties[0] = pressure;\r\n    properties[1] = temperature;\r\n    return properties;\r\n  }\r\n\r\n  throw Errors.TemperatureOrPressureNotInRegion3;\r\n}\r\n\r\nexport function Properties_fVT(volume, temperature) {\r\n  // Region 3 Steam Properties as a function of specific volume and temperature: SteamProperties = f(V,T)\r\n  // Calcs for the reduced density and reduced temperature\r\n  var Volume = volume;\r\n  var Density = 1 / volume;\r\n  var delta = Density / Constants.RHOc_H2O;\r\n  var tau = Constants.Tc_H2O / temperature;\r\n\r\n  // R7-97: Table 32 - Constant terms not under the summation term\r\n  // Region 3 Hemholtz equation and its derivatives\r\n  var phi = Constants.reg3_HelmH_n[0] * Math.log(delta); // Gibbs free energy\r\n  var phi_delta = Constants.reg3_HelmH_n[0] / delta;\r\n  var phi_tau = 0;\r\n  var phi_delta_delta = -Constants.reg3_HelmH_n[0] / Math.pow(delta, 2);\r\n  var phi_tau_tau = 0;\r\n  var phi_delta_tau = 0;\r\n\r\n  // Equations below calculate the terms shown in table 32\r\n  // of IAPWS R7-97 (2012) (note: [0] terms not used in summation equations below\r\n  for (let i = 1; i < Constants.reg3_HelmH_I.length; i++) {\r\n    phi +=\r\n      Constants.reg3_HelmH_n[i] * Math.pow(delta, Constants.reg3_HelmH_I[i]) * Math.pow(tau, Constants.reg3_HelmH_J[i]);\r\n  }\r\n\r\n  for (let i = 1; i < Constants.reg3_HelmH_I.length; i++) {\r\n    phi_delta +=\r\n      Constants.reg3_HelmH_n[i] *\r\n      Constants.reg3_HelmH_I[i] *\r\n      Math.pow(delta, Constants.reg3_HelmH_I[i] - 1) *\r\n      Math.pow(tau, Constants.reg3_HelmH_J[i]);\r\n  }\r\n\r\n  for (let i = 1; i < Constants.reg3_HelmH_I.length; i++) {\r\n    phi_tau +=\r\n      Constants.reg3_HelmH_n[i] *\r\n      Math.pow(delta, Constants.reg3_HelmH_I[i]) *\r\n      Constants.reg3_HelmH_J[i] *\r\n      Math.pow(tau, Constants.reg3_HelmH_J[i] - 1);\r\n  }\r\n\r\n  for (let i = 1; i < Constants.reg3_HelmH_I.length; i++) {\r\n    phi_delta_delta +=\r\n      Constants.reg3_HelmH_n[i] *\r\n      Constants.reg3_HelmH_I[i] *\r\n      (Constants.reg3_HelmH_I[i] - 1) *\r\n      Math.pow(delta, Constants.reg3_HelmH_I[i] - 2) *\r\n      Math.pow(tau, Constants.reg3_HelmH_J[i]);\r\n  }\r\n\r\n  for (let i = 1; i < Constants.reg3_HelmH_I.length; i++) {\r\n    phi_tau_tau +=\r\n      Constants.reg3_HelmH_n[i] *\r\n      Math.pow(delta, Constants.reg3_HelmH_I[i]) *\r\n      Constants.reg3_HelmH_J[i] *\r\n      (Constants.reg3_HelmH_J[i] - 1) *\r\n      Math.pow(tau, Constants.reg3_HelmH_J[i] - 2);\r\n  }\r\n\r\n  for (let i = 1; i < Constants.reg3_HelmH_I.length; i++) {\r\n    phi_delta_tau +=\r\n      Constants.reg3_HelmH_n[i] *\r\n      Constants.reg3_HelmH_I[i] *\r\n      Math.pow(delta, Constants.reg3_HelmH_I[i] - 1) *\r\n      Constants.reg3_HelmH_J[i] *\r\n      Math.pow(tau, Constants.reg3_HelmH_J[i] - 1);\r\n  }\r\n\r\n  // R7-97: Table 31 - Return thermodynamic properties - Hemholtz free energy\r\n  const Pressure = (R * temperature * delta * phi_delta) / volume / 1e6;\r\n  const InternalEnergy = (R / 1000) * temperature * tau * phi_tau;\r\n  const Entropy = (R / 1000) * (tau * phi_tau - phi);\r\n  const Enthalpy = ((temperature * R) / 1000) * (tau * phi_tau + delta * phi_delta);\r\n  const IsochoricHeat = -(R / 1000) * Math.pow(tau, 2) * phi_tau_tau;\r\n  const IsobaricHeat =\r\n    (R / 1000) *\r\n    (-Math.pow(tau, 2) * phi_tau_tau +\r\n      Math.pow(delta * phi_delta - delta * tau * phi_delta_tau, 2) /\r\n        (2 * delta * phi_delta + Math.pow(delta, 2) * phi_delta_delta));\r\n  const SpeedOfSound = Math.sqrt(\r\n    R *\r\n      temperature *\r\n      (2 * delta * phi_delta +\r\n        Math.pow(delta, 2) * phi_delta_delta -\r\n        Math.pow(delta * phi_delta - delta * tau * phi_delta_tau, 2) / (Math.pow(tau, 2) * phi_tau_tau))\r\n  );\r\n\r\n  //  Equations below calculate the properties partial derivatives.  The derivate functions below the first group use IAPWS AN3-07 (2018) Equation 1\r\n  const alpha_p = (1 / temperature) * (1 - (tau * phi_delta_tau) / phi_delta); // IAPWS AN3-07 (2018) Eq 3\r\n  const Beta_p = (1 / volume) * (2 + (delta * phi_delta_delta) / phi_delta); // IAPWS AN3-07 (2018) Eq 3\r\n  const dPdV_T = -Pressure * Beta_p; // Array Index 16: IAPWS AN3-07 (2018) Table 1\r\n  const dTdV_T = 0; // IAPWS AN3-07 (2018) Table 1\r\n  const dVdV_T = 1; // IAPWS AN3-07 (2018) Table 1\r\n  const dUdV_T = 1000 * (Pressure * (temperature * alpha_p - 1)); // Array Index 81: IAPWS AN3-07 (2018) Table 1.  Not sure why times 1000\r\n  const dHdV_T = 1000 * Pressure * (temperature * alpha_p - volume * Beta_p); // Array Index 101: IAPWS AN3-07 (2018) Table 1.   Not sure why times 1000\r\n  const dSdV_T = 1000 * Pressure * alpha_p; // Array Index 121: IAPWS AN3-07 (2018) Table 1.   Not sure why times 1000\r\n  const dPdT_V = Pressure * alpha_p; // Array Index 12: IAPWS AN3-07 (2018) Table 1\r\n  const dTdT_V = 1; // IAPWS AN3-07 (2018) Table 1\r\n  const dVdT_V = 0; // IAPWS AN3-07 (2018) Table 1\r\n  const dUdT_V = IsochoricHeat; // Array Index 77: IAPWS AN3-07 (2018) Table 1\r\n  const dHdT_V = IsochoricHeat + 1000 * Pressure * volume * alpha_p; // Array Index 97: IAPWS AN3-07 (2018) Table 1.   Not sure why times 1000\r\n  const dSdT_V = IsochoricHeat / temperature; // Array Index 117: IAPWS AN3-07 (2018) Table 1\r\n\r\n  // The following five groups provide the partial derivatives of pressure.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dPdT_U = (dPdV_T * dUdT_V - dPdT_V * dUdV_T) / (dTdV_T * dUdT_V - dTdT_V * dUdV_T); // Array Index 13\r\n  const dPdT_H = (dPdV_T * dHdT_V - dPdT_V * dHdV_T) / (dTdV_T * dHdT_V - dTdT_V * dHdV_T); // Array Index 14\r\n  const dPdT_S = (dPdV_T * dSdT_V - dPdT_V * dSdV_T) / (dTdV_T * dSdT_V - dTdT_V * dSdV_T); // Array Index 15\r\n\r\n  const dPdV_U = (dPdV_T * dUdT_V - dPdT_V * dUdV_T) / (dVdV_T * dUdT_V - dVdT_V * dUdV_T); // Array Index 17\r\n  const dPdV_H = (dPdV_T * dHdT_V - dPdT_V * dHdV_T) / (dVdV_T * dHdT_V - dVdT_V * dHdV_T); // Array Index 18\r\n  const dPdV_S = (dPdV_T * dSdT_V - dPdT_V * dSdV_T) / (dVdV_T * dSdT_V - dVdT_V * dSdV_T); // Array Index 19\r\n\r\n  const dPdU_T = (dPdV_T * dTdT_V - dPdT_V * dTdV_T) / (dUdV_T * dTdT_V - dUdT_V * dTdV_T); // Array Index 20\r\n  const dPdU_V = (dPdV_T * dVdT_V - dPdT_V * dVdV_T) / (dUdV_T * dVdT_V - dUdT_V * dVdV_T); // Array Index 21\r\n  const dPdU_H = (dPdV_T * dHdT_V - dPdT_V * dHdV_T) / (dUdV_T * dHdT_V - dUdT_V * dHdV_T); // Array Index 22\r\n  const dPdU_S = (dPdV_T * dSdT_V - dPdT_V * dSdV_T) / (dUdV_T * dSdT_V - dUdT_V * dSdV_T); // Array Index 23\r\n\r\n  const dPdH_T = (dPdV_T * dTdT_V - dPdT_V * dTdV_T) / (dHdV_T * dTdT_V - dHdT_V * dTdV_T); // Array Index 24\r\n  const dPdH_V = (dPdV_T * dVdT_V - dPdT_V * dVdV_T) / (dHdV_T * dVdT_V - dHdT_V * dVdV_T); // Array Index 25\r\n  const dPdH_U = (dPdV_T * dUdT_V - dPdT_V * dUdV_T) / (dHdV_T * dUdT_V - dHdT_V * dUdV_T); // Array Index 26\r\n  const dPdH_S = (dPdV_T * dSdT_V - dPdT_V * dSdV_T) / (dHdV_T * dSdT_V - dHdT_V * dSdV_T); // Array Index 27\r\n\r\n  const dPdS_T = (dPdV_T * dTdT_V - dPdT_V * dTdV_T) / (dSdV_T * dTdT_V - dSdT_V * dTdV_T); // Array Index 28\r\n  const dPdS_V = (dPdV_T * dVdT_V - dPdT_V * dVdV_T) / (dSdV_T * dVdT_V - dSdT_V * dVdV_T); // Array Index 29\r\n  const dPdS_U = (dPdV_T * dUdT_V - dPdT_V * dUdV_T) / (dSdV_T * dUdT_V - dSdT_V * dUdV_T); // Array Index 30\r\n  const dPdS_H = (dPdV_T * dHdT_V - dPdT_V * dHdV_T) / (dSdV_T * dHdT_V - dSdT_V * dHdV_T); // Array Index 31\r\n\r\n  // The following five groups provide the partial derivatives of pressure.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dTdP_V = (dTdV_T * dVdT_V - dTdT_V * dVdV_T) / (dPdV_T * dVdT_V - dPdT_V * dVdV_T); // Array Index 32\r\n  const dTdP_U = (dTdV_T * dUdT_V - dTdT_V * dUdV_T) / (dPdV_T * dUdT_V - dPdT_V * dUdV_T); // Array Index 33\r\n  const dTdP_H = (dTdV_T * dHdT_V - dTdT_V * dHdV_T) / (dPdV_T * dHdT_V - dPdT_V * dHdV_T); // Array Index 34\r\n  const dTdP_S = (dTdV_T * dSdT_V - dTdT_V * dSdV_T) / (dPdV_T * dSdT_V - dPdT_V * dSdV_T); // Array Index 35\r\n\r\n  const dTdV_P = (dTdV_T * dPdT_V - dTdT_V * dPdV_T) / (dVdV_T * dPdT_V - dVdT_V * dPdV_T); // Array Index 36\r\n  const dTdV_U = (dTdV_T * dUdT_V - dTdT_V * dUdV_T) / (dVdV_T * dUdT_V - dVdT_V * dUdV_T); // Array Index 37\r\n  const dTdV_H = (dTdV_T * dHdT_V - dTdT_V * dHdV_T) / (dVdV_T * dHdT_V - dVdT_V * dHdV_T); // Array Index 38\r\n  const dTdV_S = (dTdV_T * dSdT_V - dTdT_V * dSdV_T) / (dVdV_T * dSdT_V - dVdT_V * dSdV_T); // Array Index 39\r\n\r\n  const dTdU_P = (dTdV_T * dPdT_V - dTdT_V * dPdV_T) / (dUdV_T * dPdT_V - dUdT_V * dPdV_T); // Array Index 40\r\n  const dTdU_V = (dTdV_T * dVdT_V - dTdT_V * dVdV_T) / (dUdV_T * dVdT_V - dUdT_V * dVdV_T); // Array Index 41\r\n  const dTdU_H = (dTdV_T * dHdT_V - dTdT_V * dHdV_T) / (dUdV_T * dHdT_V - dUdT_V * dHdV_T); // Array Index 42\r\n  const dTdU_S = (dTdV_T * dSdT_V - dTdT_V * dSdV_T) / (dUdV_T * dSdT_V - dUdT_V * dSdV_T); // Array Index 43\r\n\r\n  const dTdH_P = (dTdV_T * dPdT_V - dTdT_V * dPdV_T) / (dHdV_T * dPdT_V - dHdT_V * dPdV_T); // Array Index 44\r\n  const dTdH_V = (dTdV_T * dVdT_V - dTdT_V * dVdV_T) / (dHdV_T * dVdT_V - dHdT_V * dVdV_T); // Array Index 45\r\n  const dTdH_U = (dTdV_T * dUdT_V - dTdT_V * dUdV_T) / (dHdV_T * dUdT_V - dHdT_V * dUdV_T); // Array Index 46\r\n  const dTdH_S = (dTdV_T * dSdT_V - dTdT_V * dSdV_T) / (dHdV_T * dSdT_V - dHdT_V * dSdV_T); // Array Index 47\r\n\r\n  const dTdS_P = (dTdV_T * dPdT_V - dTdT_V * dPdV_T) / (dSdV_T * dPdT_V - dSdT_V * dPdV_T); // Array Index 48\r\n  const dTdS_V = (dTdV_T * dVdT_V - dTdT_V * dVdV_T) / (dSdV_T * dVdT_V - dSdT_V * dVdV_T); // Array Index 49\r\n  const dTdS_U = (dTdV_T * dUdT_V - dTdT_V * dUdV_T) / (dSdV_T * dUdT_V - dSdT_V * dUdV_T); // Array Index 50\r\n  const dTdS_H = (dTdV_T * dHdT_V - dTdT_V * dHdV_T) / (dSdV_T * dHdT_V - dSdT_V * dHdV_T); // Array Index 51\r\n\r\n  // The following five groups provide the partial derivatives of pressure.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dVdP_T = (dVdV_T * dTdT_V - dVdT_V * dTdV_T) / (dPdV_T * dTdT_V - dPdT_V * dTdV_T); // Array Index 52\r\n  const dVdP_U = (dVdV_T * dUdT_V - dVdT_V * dUdV_T) / (dPdV_T * dUdT_V - dPdT_V * dUdV_T); // Array Index 53\r\n  const dVdP_H = (dVdV_T * dHdT_V - dVdT_V * dHdV_T) / (dPdV_T * dHdT_V - dPdT_V * dHdV_T); // Array Index 54\r\n  const dVdP_S = (dVdV_T * dSdT_V - dVdT_V * dSdV_T) / (dPdV_T * dSdT_V - dPdT_V * dSdV_T); // Array Index 55\r\n\r\n  const dVdT_P = (dVdV_T * dPdT_V - dVdT_V * dPdV_T) / (dTdV_T * dPdT_V - dTdT_V * dPdV_T); // Array Index 56\r\n  const dVdT_U = (dVdV_T * dUdT_V - dVdT_V * dUdV_T) / (dTdV_T * dUdT_V - dTdT_V * dUdV_T); // Array Index 57\r\n  const dVdT_H = (dVdV_T * dHdT_V - dVdT_V * dHdV_T) / (dTdV_T * dHdT_V - dTdT_V * dHdV_T); // Array Index 58\r\n  const dVdT_S = (dVdV_T * dSdT_V - dVdT_V * dSdV_T) / (dTdV_T * dSdT_V - dTdT_V * dSdV_T); // Array Index 59\r\n\r\n  const dVdU_P = (dVdV_T * dPdT_V - dVdT_V * dPdV_T) / (dUdV_T * dPdT_V - dUdT_V * dPdV_T); // Array Index 60\r\n  const dVdU_T = (dVdV_T * dTdT_V - dVdT_V * dTdV_T) / (dUdV_T * dTdT_V - dUdT_V * dTdV_T); // Array Index 61\r\n  const dVdU_H = (dVdV_T * dHdT_V - dVdT_V * dHdV_T) / (dUdV_T * dHdT_V - dUdT_V * dHdV_T); // Array Index 62\r\n  const dVdU_S = (dVdV_T * dSdT_V - dVdT_V * dSdV_T) / (dUdV_T * dSdT_V - dUdT_V * dSdV_T); // Array Index 63\r\n\r\n  const dVdH_P = (dVdV_T * dPdT_V - dVdT_V * dPdV_T) / (dHdV_T * dPdT_V - dHdT_V * dPdV_T); // Array Index 64\r\n  const dVdH_T = (dVdV_T * dTdT_V - dVdT_V * dTdV_T) / (dHdV_T * dTdT_V - dHdT_V * dTdV_T); // Array Index 65\r\n  const dVdH_U = (dVdV_T * dUdT_V - dVdT_V * dUdV_T) / (dHdV_T * dUdT_V - dHdT_V * dUdV_T); // Array Index 66\r\n  const dVdH_S = (dVdV_T * dSdT_V - dVdT_V * dSdV_T) / (dHdV_T * dSdT_V - dHdT_V * dSdV_T); // Array Index 67\r\n\r\n  const dVdS_P = (dVdV_T * dPdT_V - dVdT_V * dPdV_T) / (dSdV_T * dPdT_V - dSdT_V * dPdV_T); // Array Index 68\r\n  const dVdS_T = (dVdV_T * dTdT_V - dVdT_V * dTdV_T) / (dSdV_T * dTdT_V - dSdT_V * dTdV_T); // Array Index 69\r\n  const dVdS_U = (dVdV_T * dUdT_V - dVdT_V * dUdV_T) / (dSdV_T * dUdT_V - dSdT_V * dUdV_T); // Array Index 70\r\n  const dVdS_H = (dVdV_T * dHdT_V - dVdT_V * dHdV_T) / (dSdV_T * dHdT_V - dSdT_V * dHdV_T); // Array Index 71\r\n\r\n  // The following five groups provide the partial derivatives of pressure.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dUdP_T = (dUdV_T * dTdT_V - dUdT_V * dTdV_T) / (dPdV_T * dTdT_V - dPdT_V * dTdV_T); // Array Index 72\r\n  const dUdP_V = (dUdV_T * dVdT_V - dUdT_V * dVdV_T) / (dPdV_T * dVdT_V - dPdT_V * dVdV_T); // Array Index 73\r\n  const dUdP_H = (dUdV_T * dHdT_V - dUdT_V * dHdV_T) / (dPdV_T * dHdT_V - dPdT_V * dHdV_T); // Array Index 74\r\n  const dUdP_S = (dUdV_T * dSdT_V - dUdT_V * dSdV_T) / (dPdV_T * dSdT_V - dPdT_V * dSdV_T); // Array Index 75\r\n\r\n  const dUdT_P = (dUdV_T * dPdT_V - dUdT_V * dPdV_T) / (dTdV_T * dPdT_V - dTdT_V * dPdV_T); // Array Index 76\r\n  const dUdT_H = (dUdV_T * dHdT_V - dUdT_V * dHdV_T) / (dTdV_T * dHdT_V - dTdT_V * dHdV_T); // Array Index 78\r\n  const dUdT_S = (dUdV_T * dSdT_V - dUdT_V * dSdV_T) / (dTdV_T * dSdT_V - dTdT_V * dSdV_T); // Array Index 79\r\n\r\n  const dUdV_P = (dUdV_T * dPdT_V - dUdT_V * dPdV_T) / (dVdV_T * dPdT_V - dVdT_V * dPdV_T); // Array Index 80\r\n  const dUdV_H = (dUdV_T * dHdT_V - dUdT_V * dHdV_T) / (dVdV_T * dHdT_V - dVdT_V * dHdV_T); // Array Index 82\r\n  const dUdV_S = (dUdV_T * dSdT_V - dUdT_V * dSdV_T) / (dVdV_T * dSdT_V - dVdT_V * dSdV_T); // Array Index 83\r\n\r\n  const dUdH_P = (dUdV_T * dPdT_V - dUdT_V * dPdV_T) / (dHdV_T * dPdT_V - dHdT_V * dPdV_T); // Array Index 84\r\n  const dUdH_T = (dUdV_T * dTdT_V - dUdT_V * dTdV_T) / (dHdV_T * dTdT_V - dHdT_V * dTdV_T); // Array Index 85\r\n  const dUdH_V = (dUdV_T * dVdT_V - dUdT_V * dVdV_T) / (dHdV_T * dVdT_V - dHdT_V * dVdV_T); // Array Index 86\r\n  const dUdH_S = (dUdV_T * dSdT_V - dUdT_V * dSdV_T) / (dHdV_T * dSdT_V - dHdT_V * dSdV_T); // Array Index 87\r\n\r\n  const dUdS_P = (dUdV_T * dPdT_V - dUdT_V * dPdV_T) / (dSdV_T * dPdT_V - dSdT_V * dPdV_T); // Array Index 88\r\n  const dUdS_T = (dUdV_T * dTdT_V - dUdT_V * dTdV_T) / (dSdV_T * dTdT_V - dSdT_V * dTdV_T); // Array Index 89\r\n  const dUdS_V = (dUdV_T * dVdT_V - dUdT_V * dVdV_T) / (dSdV_T * dVdT_V - dSdT_V * dVdV_T); // Array Index 90\r\n  const dUdS_H = (dUdV_T * dHdT_V - dUdT_V * dHdV_T) / (dSdV_T * dHdT_V - dSdT_V * dHdV_T); // Array Index 91\r\n\r\n  // The following five groups provide the partial derivatives of pressure.  Refer to IAPWS AN3-07 (2018) Equation\r\n  const dHdP_T = (dHdV_T * dTdT_V - dHdT_V * dTdV_T) / (dPdV_T * dTdT_V - dPdT_V * dTdV_T); // Array Index 92\r\n  const dHdP_V = (dHdV_T * dVdT_V - dHdT_V * dVdV_T) / (dPdV_T * dVdT_V - dPdT_V * dVdV_T); // Array Index 93\r\n  const dHdP_U = (dHdV_T * dUdT_V - dHdT_V * dUdV_T) / (dPdV_T * dUdT_V - dPdT_V * dUdV_T); // Array Index 94\r\n  const dHdP_S = (dHdV_T * dSdT_V - dHdT_V * dSdV_T) / (dPdV_T * dSdT_V - dPdT_V * dSdV_T); // Array Index 95\r\n\r\n  const dHdT_P = (dHdV_T * dPdT_V - dHdT_V * dPdV_T) / (dTdV_T * dPdT_V - dTdT_V * dPdV_T); // Array Index 96\r\n  const dHdT_U = (dHdV_T * dUdT_V - dHdT_V * dUdV_T) / (dTdV_T * dUdT_V - dTdT_V * dUdV_T); // Array Index 98\r\n  const dHdT_S = (dHdV_T * dSdT_V - dHdT_V * dSdV_T) / (dTdV_T * dSdT_V - dTdT_V * dSdV_T); // Array Index 99\r\n\r\n  const dHdV_P = (dHdV_T * dPdT_V - dHdT_V * dPdV_T) / (dVdV_T * dPdT_V - dVdT_V * dPdV_T); // Array Index 100\r\n  const dHdV_U = (dHdV_T * dUdT_V - dHdT_V * dUdV_T) / (dVdV_T * dUdT_V - dVdT_V * dUdV_T); // Array Index 102\r\n  const dHdV_S = (dHdV_T * dSdT_V - dHdT_V * dSdV_T) / (dVdV_T * dSdT_V - dVdT_V * dSdV_T); // Array Index 103\r\n\r\n  const dHdU_P = (dHdV_T * dPdT_V - dHdT_V * dPdV_T) / (dUdV_T * dPdT_V - dUdT_V * dPdV_T); // Array Index 104\r\n  const dHdU_T = (dHdV_T * dTdT_V - dHdT_V * dTdV_T) / (dUdV_T * dTdT_V - dUdT_V * dTdV_T); // Array Index 105\r\n  const dHdU_V = (dHdV_T * dVdT_V - dHdT_V * dVdV_T) / (dUdV_T * dVdT_V - dUdT_V * dVdV_T); // Array Index 106\r\n  const dHdU_S = (dHdV_T * dSdT_V - dHdT_V * dSdV_T) / (dUdV_T * dSdT_V - dUdT_V * dSdV_T); // Array Index 107\r\n\r\n  const dHdS_P = (dHdV_T * dPdT_V - dHdT_V * dPdV_T) / (dSdV_T * dPdT_V - dSdT_V * dPdV_T); // Array Index 108\r\n  const dHdS_T = (dHdV_T * dTdT_V - dHdT_V * dTdV_T) / (dSdV_T * dTdT_V - dSdT_V * dTdV_T); // Array Index 109\r\n  const dHdS_V = (dHdV_T * dVdT_V - dHdT_V * dVdV_T) / (dSdV_T * dVdT_V - dSdT_V * dVdV_T); // Array Index 110\r\n  const dHdS_U = (dHdV_T * dUdT_V - dHdT_V * dUdV_T) / (dSdV_T * dUdT_V - dSdT_V * dUdV_T); // Array Index 111\r\n\r\n  // The following five groups provide the partial derivatives of pressure.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dSdP_T = (dSdV_T * dTdT_V - dSdT_V * dTdV_T) / (dPdV_T * dTdT_V - dPdT_V * dTdV_T); // Array Index 112\r\n  const dSdP_V = (dSdV_T * dVdT_V - dSdT_V * dVdV_T) / (dPdV_T * dVdT_V - dPdT_V * dVdV_T); // Array Index 113\r\n  const dSdP_U = (dSdV_T * dUdT_V - dSdT_V * dUdV_T) / (dPdV_T * dUdT_V - dPdT_V * dUdV_T); // Array Index 114\r\n  const dSdP_H = (dSdV_T * dHdT_V - dSdT_V * dHdV_T) / (dPdV_T * dHdT_V - dPdT_V * dHdV_T); // Array Index 115\r\n\r\n  const dSdT_P = (dSdV_T * dPdT_V - dSdT_V * dPdV_T) / (dTdV_T * dPdT_V - dTdT_V * dPdV_T); // Array Index 116\r\n  const dSdT_U = (dSdV_T * dUdT_V - dSdT_V * dUdV_T) / (dTdV_T * dUdT_V - dTdT_V * dUdV_T); // Array Index 118\r\n  const dSdT_H = (dSdV_T * dHdT_V - dSdT_V * dHdV_T) / (dTdV_T * dHdT_V - dTdT_V * dHdV_T); // Array Index 119\r\n\r\n  const dSdV_P = (dSdV_T * dPdT_V - dSdT_V * dPdV_T) / (dVdV_T * dPdT_V - dVdT_V * dPdV_T); // Array Index 120\r\n  const dSdV_U = (dSdV_T * dUdT_V - dSdT_V * dUdV_T) / (dVdV_T * dUdT_V - dVdT_V * dUdV_T); // Array Index 122\r\n  const dSdV_H = (dSdV_T * dHdT_V - dSdT_V * dHdV_T) / (dVdV_T * dHdT_V - dVdT_V * dHdV_T); // Array Index 123\r\n\r\n  const dSdU_P = (dSdV_T * dPdT_V - dSdT_V * dPdV_T) / (dUdV_T * dPdT_V - dUdT_V * dPdV_T); // Array Index 124\r\n  const dSdU_T = (dSdV_T * dTdT_V - dSdT_V * dTdV_T) / (dUdV_T * dTdT_V - dUdT_V * dTdV_T); // Array Index 125\r\n  const dSdU_V = (dSdV_T * dVdT_V - dSdT_V * dVdV_T) / (dUdV_T * dVdT_V - dUdT_V * dVdV_T); // Array Index 126\r\n  const dSdU_H = (dSdV_T * dHdT_V - dSdT_V * dHdV_T) / (dUdV_T * dHdT_V - dUdT_V * dHdV_T); // Array Index 127\r\n\r\n  const dSdH_P = (dSdV_T * dPdT_V - dSdT_V * dPdV_T) / (dHdV_T * dPdT_V - dHdT_V * dPdV_T); // Array Index 128\r\n  const dSdH_T = (dSdV_T * dTdT_V - dSdT_V * dTdV_T) / (dHdV_T * dTdT_V - dHdT_V * dTdV_T); // Array Index 129\r\n  const dSdH_V = (dSdV_T * dVdT_V - dSdT_V * dVdV_T) / (dHdV_T * dVdT_V - dHdT_V * dVdV_T); // Array Index 130\r\n  const dSdH_U = (dSdV_T * dUdT_V - dSdT_V * dUdV_T) / (dHdV_T * dUdT_V - dHdT_V * dUdV_T); // Array Index 131\r\n\r\n  // SteamPropertiesArray = [(0) Pressure, (1) Temperature, (2) Quality, (3) Enthalpy, (4) Entropy,\r\n  //  (5) InternalEnergy, (6) Volume, (7) IsobaricHeat, (8) IsochoricHeat, (9) SpeedOfSound]\r\n  return [\r\n    Pressure, // 0\r\n    temperature, // 1\r\n    0.0, // 2\r\n    Enthalpy, // 3\r\n    Entropy, // 4\r\n    InternalEnergy, // 5\r\n    Volume, // 6\r\n    IsobaricHeat, // 7\r\n    IsochoricHeat, // 8\r\n    SpeedOfSound, // 9\r\n    0, // 10\r\n    0, // 11\r\n    dPdT_V, // 12\r\n    dPdT_U, // 13\r\n    dPdT_H, // 14\r\n    dPdT_S, // 15\r\n    dPdV_T, // 16\r\n    dPdV_U, // 17\r\n    dPdV_H, // 18\r\n    dPdV_S, // 19\r\n    dPdU_T, // 20\r\n    dPdU_V, // 21\r\n    dPdU_H, // 22\r\n    dPdU_S, // 23\r\n    dPdH_T, // 24\r\n    dPdH_V, // 25\r\n    dPdH_U, // 26\r\n    dPdH_S, // 27\r\n    dPdS_T, // 28\r\n    dPdS_V, // 29\r\n    dPdS_U, // 30\r\n    dPdS_H, // 31\r\n    dTdP_V, // 32\r\n    dTdP_U, // 33\r\n    dTdP_H, // 34\r\n    dTdP_S, // 35\r\n    dTdV_P, // 36\r\n    dTdV_U, // 37\r\n    dTdV_H, // 38\r\n    dTdV_S, // 39\r\n    dTdU_P, // 40\r\n    dTdU_V, // 41\r\n    dTdU_H, // 42\r\n    dTdU_S, // 43\r\n    dTdH_P, // 44\r\n    dTdH_V, // 45\r\n    dTdH_U, // 46\r\n    dTdH_S, // 47\r\n    dTdS_P, // 48\r\n    dTdS_V, // 49\r\n    dTdS_U, // 50\r\n    dTdS_H, // 51\r\n    dVdP_T, // 52\r\n    dVdP_U, // 53\r\n    dVdP_H, // 54\r\n    dVdP_S, // 55\r\n    dVdT_P, // 56\r\n    dVdT_U, // 57\r\n    dVdT_H, // 58\r\n    dVdT_S, // 59\r\n    dVdU_P, // 60\r\n    dVdU_T, // 61\r\n    dVdU_H, // 62\r\n    dVdU_S, // 63\r\n    dVdH_P, // 64\r\n    dVdH_T, // 65\r\n    dVdH_U, // 66\r\n    dVdH_S, // 67\r\n    dVdS_P, // 68\r\n    dVdS_T, // 69\r\n    dVdS_U, // 70\r\n    dVdS_H, // 71\r\n    dUdP_T, // 72\r\n    dUdP_V, // 73\r\n    dUdP_H, // 74\r\n    dUdP_S, // 75\r\n    dUdT_P, // 76\r\n    dUdT_V, // 77\r\n    dUdT_H, // 78\r\n    dUdT_S, // 79\r\n    dUdV_P, // 80\r\n    dUdV_T, // 81\r\n    dUdV_H, // 82\r\n    dUdV_S, // 83\r\n    dUdH_P, // 84\r\n    dUdH_T, // 85\r\n    dUdH_V, // 86\r\n    dUdH_S, // 87\r\n    dUdS_P, // 88\r\n    dUdS_T, // 89\r\n    dUdS_V, // 90\r\n    dUdS_H, // 91\r\n    dHdP_T, // 92\r\n    dHdP_V, // 93\r\n    dHdP_U, // 94\r\n    dHdP_S, // 95\r\n    dHdT_P, // 96\r\n    dHdT_V, // 97\r\n    dHdT_U, // 98\r\n    dHdT_S, // 99\r\n    dHdV_P, // 100\r\n    dHdV_T, // 101\r\n    dHdV_U, // 102\r\n    dHdV_S, // 103\r\n    dHdU_P, // 104\r\n    dHdU_T, // 105\r\n    dHdU_V, // 106\r\n    dHdU_S, // 107\r\n    dHdS_P, // 108\r\n    dHdS_T, // 109\r\n    dHdS_V, // 110\r\n    dHdS_U, // 111\r\n    dSdP_T, // 112\r\n    dSdP_V, // 113\r\n    dSdP_U, // 114\r\n    dSdP_H, // 115\r\n    dSdT_P, // 116\r\n    dSdT_V, // 117\r\n    dSdT_U, // 118\r\n    dSdT_H, // 119\r\n    dSdV_P, // 120\r\n    dSdV_T, // 121\r\n    dSdV_U, // 122\r\n    dSdV_H, // 123\r\n    dSdU_P, // 124\r\n    dSdU_T, // 125\r\n    dSdU_V, // 126\r\n    dSdU_H, // 127\r\n    dSdH_P, // 128\r\n    dSdH_T, // 129\r\n    dSdH_V, // 130\r\n    dSdH_U, // 131\r\n  ];\r\n}\r\n\r\n// The following equations are used for testing.\r\nexport function Volume_fPT(pressure, temperature) {\r\n  var SpecificVolume = 0; // initate the Specific Volume for the backward calculation v(p,T)\r\n\r\n  if (pressure > 40 && pressure <= Constants.pmax) {\r\n    // subregion 3a or 3b\r\n    let T3ab = Reg3SubregAbOpWxBoundary(pressure, Constants.reg3_T3ab_I, Constants.reg3_T3ab_n);\r\n    if (temperature <= T3ab) {\r\n      // Subregion 3a  Constants contained in a custom type in element 0 of array reg3C\r\n      SpecificVolume = SubRegion3V(0, pressure, temperature, reg3Constants); // reg3Constants[0] => Subregion 3a\r\n    } else if (temperature > T3ab) {\r\n      // Subregion 3b\r\n      SpecificVolume = SubRegion3V(1, pressure, temperature, reg3Constants); // reg3Constants[1] => Subregion 3b\r\n    } else {\r\n      throw Errors.TemperatureNotInRegion3a3b;\r\n    }\r\n  } else if (pressure > 25 && pressure <= 40) {\r\n    // subregion 3c, 3d, 3e, or 3f\r\n    let T3ab = Reg3SubregAbOpWxBoundary(pressure, Constants.reg3_T3ab_I, Constants.reg3_T3ab_n);\r\n    let T3cd = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3cd_I, Constants.reg3_T3cd_n);\r\n    let T3ef = Reg3SubregEfBoundary(pressure);\r\n    if (temperature <= T3cd) {\r\n      // Subregion 3c\r\n      SpecificVolume = SubRegion3V(2, pressure, temperature, reg3Constants); // reg3Constants[2] => Subregion 3c\r\n    } else if (temperature > T3cd && temperature <= T3ab) {\r\n      // Subregion 3d\r\n      SpecificVolume = SubRegion3V(3, pressure, temperature, reg3Constants); // reg3Constants[3] => Subregion 3d\r\n    } else if (temperature > T3ab && temperature <= T3ef) {\r\n      // Subregion 3e\r\n      SpecificVolume = SubRegion3V(4, pressure, temperature, reg3Constants); // reg3Constants[4] => Subregion 3e\r\n    } else if (temperature > T3ef) {\r\n      // Subregion 3f\r\n      SpecificVolume = SubRegion3V(5, pressure, temperature, reg3Constants); // reg3Constants[4] => Subregion 3f\r\n    } else {\r\n      throw Errors.TemperatureNotInRegion3c3d3e3f;\r\n    }\r\n  } else if (pressure > 23.5 && pressure <= 25) {\r\n    // subregion 3c, 3g, 3h, 3i, 3j or 3k\r\n    let T3cd = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3cd_I, Constants.reg3_T3cd_n);\r\n    let T3ef = Reg3SubregEfBoundary(pressure);\r\n    let T3gh = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3gh_I, Constants.reg3_T3gh_n);\r\n    let T3ij = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3ij_I, Constants.reg3_T3ij_n);\r\n    let T3jk = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3jk_I, Constants.reg3_T3jk_n);\r\n\r\n    if (temperature <= T3cd) {\r\n      // Subregion 3c\r\n      SpecificVolume = SubRegion3V(2, pressure, temperature, reg3Constants); // reg3Constants[2] => Subregion 3c;\r\n    } else if (temperature > T3cd && temperature <= T3gh) {\r\n      // Subregion 3g\r\n      SpecificVolume = SubRegion3V(6, pressure, temperature, reg3Constants); // reg3Constants[6] => Subregion 3g\r\n    } else if (temperature > T3gh && temperature <= T3ef) {\r\n      // Subregion 3h\r\n      SpecificVolume = SubRegion3V(7, pressure, temperature, reg3Constants); // reg3Constants[7] => Subregion 3h\r\n    } else if (temperature > T3ef && temperature <= T3ij) {\r\n      // Subregion 3i\r\n      SpecificVolume = SubRegion3V(8, pressure, temperature, reg3Constants); // reg3Constants[8] => Subregion 3i\r\n    } else if (temperature > T3ij && temperature <= T3jk) {\r\n      // Subregion 3j\r\n      SpecificVolume = SubRegion3V(9, pressure, temperature, reg3Constants); // reg3Constants[9] => Subregion 3j\r\n    } else if (temperature > T3jk) {\r\n      // Subregion 3k\r\n      SpecificVolume = SubRegion3V(10, pressure, temperature, reg3Constants); // reg3Constants[10] => Subregion 3k\r\n    } else throw Errors.TemperatureNotInRegion3c3g3h3i3j3k;\r\n  } else if (pressure > 23 && pressure <= 23.5) {\r\n    // subregion 3c, 3l, 3h, 3i, 3j or 3k\r\n    let T3cd = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3cd_I, Constants.reg3_T3cd_n);\r\n    let T3ef = Reg3SubregEfBoundary(pressure);\r\n    let T3gh = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3gh_I, Constants.reg3_T3gh_n);\r\n    let T3ij = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3ij_I, Constants.reg3_T3ij_n);\r\n    let T3jk = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3jk_I, Constants.reg3_T3jk_n);\r\n\r\n    if (temperature <= T3cd) {\r\n      // Subregion 3c\r\n      SpecificVolume = SubRegion3V(2, pressure, temperature, reg3Constants); // reg3Constants[2] => Subregion 3c\r\n    } else if (temperature > T3cd && temperature <= T3gh) {\r\n      // Subregion 3l\r\n      SpecificVolume = SubRegion3V(11, pressure, temperature, reg3Constants); // reg3Constants[11] => Subregion 3l\r\n    } else if (temperature > T3gh && temperature <= T3ef) {\r\n      // Subregion 3h\r\n      SpecificVolume = SubRegion3V(7, pressure, temperature, reg3Constants); // reg3Constants[7] => Subregion 3h\r\n    } else if (temperature > T3ef && temperature <= T3ij) {\r\n      // Subregion 3i\r\n      SpecificVolume = SubRegion3V(8, pressure, temperature, reg3Constants); // reg3Constants[8] => Subregion 3i\r\n    } else if (temperature > T3ij && temperature <= T3jk) {\r\n      // Subregion 3j\r\n      SpecificVolume = SubRegion3V(9, pressure, temperature, reg3Constants); // reg3Constants[9] => Subregion 3j\r\n    } else if (temperature > T3jk) {\r\n      // Subregion 3k\r\n      SpecificVolume = SubRegion3V(10, pressure, temperature, reg3Constants); // reg3Constants[10] => Subregion 3k\r\n    } else throw Errors.TemperatureNotInRegion3c3l3h3i3j3k;\r\n  } else if (pressure > 22.5 && pressure <= 23) {\r\n    // subregion 3c, 3l, 3m, 3n, 3o, 3p, 3j, or 3k\r\n    let T3cd = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3cd_I, Constants.reg3_T3cd_n);\r\n    let T3ef = Reg3SubregEfBoundary(pressure);\r\n    let T3gh = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3gh_I, Constants.reg3_T3gh_n);\r\n    let T3ij = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3ij_I, Constants.reg3_T3ij_n);\r\n    let T3jk = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3jk_I, Constants.reg3_T3jk_n);\r\n    let T3mn = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3mn_I, Constants.reg3_T3mn_n);\r\n    let T3op = Reg3SubregAbOpWxBoundary(pressure, Constants.reg3_T3op_I, Constants.reg3_T3op_n);\r\n\r\n    if (temperature <= T3cd) {\r\n      // Subregion 3c\r\n      SpecificVolume = SubRegion3V(2, pressure, temperature, reg3Constants); // reg3Constants[2] => Subregion 3c\r\n    } else if (temperature > T3cd && temperature <= T3gh) {\r\n      // Subregion 3l\r\n      SpecificVolume = SubRegion3V(11, pressure, temperature, reg3Constants); // reg3Constants[11] => Subregion 3l\r\n    } else if (temperature > T3gh && temperature <= T3mn) {\r\n      // Subregion 3m\r\n      SpecificVolume = SubRegion3V(12, pressure, temperature, reg3Constants); // reg3Constants[12] => Subregion 3m\r\n    } else if (temperature > T3mn && temperature <= T3ef) {\r\n      // Subregion 3n\r\n      SpecificVolume = SubRegion3V_n(13, pressure, temperature, reg3Constants); // reg3Constants[13] => Subregion 3n\r\n    } else if (temperature > T3ef && temperature <= T3op) {\r\n      // Subregion 3o\r\n      SpecificVolume = SubRegion3V(14, pressure, temperature, reg3Constants); // reg3Constants[14] => Subregion 3o\r\n    } else if (temperature > T3op && temperature <= T3ij) {\r\n      // Subregion 3p\r\n      SpecificVolume = SubRegion3V(15, pressure, temperature, reg3Constants); // reg3Constants[15] => Subregion 3p\r\n    } else if (temperature > T3ij && temperature <= T3jk) {\r\n      // Subregion 3j\r\n      SpecificVolume = SubRegion3V(9, pressure, temperature, reg3Constants); // reg3Constants[9] => Subregion 3j\r\n    } else if (temperature > T3jk) {\r\n      // Subregion 3k\r\n      SpecificVolume = SubRegion3V(10, pressure, temperature, reg3Constants); // reg3Constants[10] => Subregion 3k\r\n    } else throw Errors.TemperatureNotInRegion3c3l3m3n3o3p3j3k;\r\n  } else if (pressure > Region4SatPressure.reg4SatPressureT3q3r3u3xPoint && pressure <= 22.5) {\r\n    // subregion 3c, 3q, 3r, 3k or aux equations 3u, 3v, 3w, 3x, 3y or 3z\r\n    let T3cd = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3cd_I, Constants.reg3_T3cd_n);\r\n    let T3ef = Reg3SubregEfBoundary(pressure);\r\n    let T3qu = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3qu_I, Constants.reg3_T3qu_n);\r\n    //let T3ij = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3ij_I, Constants.reg3_T3ij_n);\r\n    let T3jk = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3jk_I, Constants.reg3_T3jk_n);\r\n    let T3rx = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3rx_I, Constants.reg3_T3rx_n);\r\n    let T3uv = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3uv_I, Constants.reg3_T3uv_n);\r\n    let T3wx = Reg3SubregAbOpWxBoundary(pressure, Constants.reg3_T3wx_I, Constants.reg3_T3wx_n);\r\n\r\n    if (temperature <= T3cd) {\r\n      // Subregion 3c\r\n      SpecificVolume = SubRegion3V(2, pressure, temperature, reg3Constants); // reg3Constants[2] => Subregion 3c\r\n    } else if (temperature > T3cd && temperature <= T3qu) {\r\n      // Subregion 3q\r\n      SpecificVolume = SubRegion3V(16, pressure, temperature, reg3Constants); // reg3Constants[16] => Subregion 3q\r\n    } else if (temperature > T3rx && temperature <= T3jk) {\r\n      // Subregion 3r\r\n      SpecificVolume = SubRegion3V(17, pressure, temperature, reg3Constants); // reg3Constants[17] => Subregion 3r\r\n    } else if (temperature > T3jk) {\r\n      // Subregion 3k\r\n      SpecificVolume = SubRegion3V(10, pressure, temperature, reg3Constants); // reg3Constants[10] => Subregion 3k\r\n    } else if (pressure > 22.11) {\r\n      // Subregions 3u, 3v, 3w, and 3x : Supercritical Aux Equations near Critical Point\r\n      if (temperature > T3qu && temperature <= T3uv) {\r\n        // Subregion 3u\r\n        SpecificVolume = SubRegion3V(20, pressure, temperature, reg3Constants); // reg3Constants[20] => Subregion 3u\r\n      } else if (temperature > T3uv && temperature <= T3ef) {\r\n        // Subregion 3v\r\n        SpecificVolume = SubRegion3V(21, pressure, temperature, reg3Constants); // reg3Constants[21] => Subregion 3v\r\n      } else if (temperature > T3ef && temperature <= T3wx) {\r\n        // Subregion 3w\r\n        SpecificVolume = SubRegion3V(22, pressure, temperature, reg3Constants); // reg3Constants[22] => Subregion 3w\r\n      } else if (temperature > T3wx && temperature <= T3rx) {\r\n        // Subregion 3x\r\n        SpecificVolume = SubRegion3V(23, pressure, temperature, reg3Constants); // reg3Constants[23] => Subregion 3x\r\n      } else throw Errors.TemperatureNotInRegion3u3v3w3x;\r\n    } else if (pressure >= Pcritical && pressure <= 22.11) {\r\n      // Subregions 3u, 3x, 3y, and 3z : Supercritical Aux Equations near Critical Point\r\n      if (temperature > T3qu && temperature <= T3uv) {\r\n        // Subregion 3u\r\n        SpecificVolume = SubRegion3V(20, pressure, temperature, reg3Constants); // reg3Constants[20] => Subregion 3u\r\n      } else if (temperature > T3uv && temperature <= T3ef) {\r\n        // Subregion 3y\r\n        SpecificVolume = SubRegion3V(24, pressure, temperature, reg3Constants); // reg3Constants[24] => Subregion 3y\r\n      } else if (temperature > T3ef && temperature <= T3wx) {\r\n        // Subregion 3z\r\n        SpecificVolume = SubRegion3V(25, pressure, temperature, reg3Constants); // reg3Constants[25] => Subregion 3z\r\n      } else if (temperature > T3wx && temperature <= T3rx) {\r\n        // Subregion 3x\r\n        SpecificVolume = SubRegion3V(23, pressure, temperature, reg3Constants); // reg3Constants[23] => Subregion 3x\r\n      } else throw Errors.TemperatureNotInRegion3u3x3y3z;\r\n    } else if (temperature <= Region4Calculations.SatTemperature(pressure)) {\r\n      if (pressure > 21.93161551 && pressure <= Pcritical) {\r\n        if (temperature > T3qu && temperature <= T3uv) {\r\n          // Subregion 3u\r\n          SpecificVolume = SubRegion3V(20, pressure, temperature, reg3Constants); // reg3Constants[20] => Subregion 3u\r\n        } else if (temperature > T3uv) {\r\n          // Subregion 3y\r\n          SpecificVolume = SubRegion3V(24, pressure, temperature, reg3Constants); // reg3Constants[24] => Subregion 3y\r\n        } else Errors.TemperatureNotInRegion3u3y;\r\n      } else if (pressure > Region4SatPressure.reg4SatPressureT3q3r3u3xPoint && pressure <= 21.93161551) {\r\n        if (temperature > T3qu) {\r\n          // Subregion 3u\r\n          SpecificVolume = SubRegion3V(20, pressure, temperature, reg3Constants); // reg3Constants[20] => Subregion 3u\r\n        }\r\n      } else throw Errors.TemperatureNotInRegion3u3y;\r\n    } else if (temperature >= Region4Calculations.SatTemperature(pressure)) {\r\n      if (pressure > 21.90096265 && pressure <= Pcritical) {\r\n        if (temperature <= T3wx) {\r\n          // Subregion 3z\r\n          SpecificVolume = SubRegion3V(25, pressure, temperature, reg3Constants); // reg3Constants[25] => Subregion 3z\r\n        } else if (temperature > T3wx && temperature <= T3rx) {\r\n          // Subregion 3x\r\n          SpecificVolume = SubRegion3V(23, pressure, temperature, reg3Constants); // reg3Constants[23] => Subregion 3x\r\n        } else throw Errors.TemperatureNotInRegion3x3z;\r\n      } else if (pressure > Region4SatPressure.reg4SatPressureT3q3r3u3xPoint && pressure <= 21.90096265) {\r\n        if (temperature <= T3rx) {\r\n          // Subregion 3x\r\n          SpecificVolume = SubRegion3V(23, pressure, temperature, reg3Constants); // reg3Constants[23] => Subregion 3x\r\n        } else throw Errors.TemperatureNotInRegion3x3z;\r\n      }\r\n    } else throw Errors.TemperatureNotInRegion3x3z;\r\n  } else if (pressure > 20.5 && pressure <= Region4SatPressure.reg4SatPressureT3q3r3u3xPoint) {\r\n    // subregion 3c, 3s, 3r, or 3k\r\n    let T3cd = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3cd_I, Constants.reg3_T3cd_n);\r\n    let T3jk = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3jk_I, Constants.reg3_T3jk_n);\r\n\r\n    if (temperature <= T3cd) {\r\n      // Subregion 3c\r\n      SpecificVolume = SubRegion3V(2, pressure, temperature, reg3Constants); // reg3Constants[2] => Subregion 3c\r\n    } else if (temperature > T3cd && temperature <= Region4Calculations.SatTemperature(pressure)) {\r\n      // Subregion 3s\r\n      SpecificVolume = SubRegion3V(18, pressure, temperature, reg3Constants); // reg3Constants[18] => Subregion 3s\r\n    } else if (temperature >= Region4Calculations.SatTemperature(pressure) && temperature <= T3jk) {\r\n      // Subregion 3r\r\n      SpecificVolume = SubRegion3V(17, pressure, temperature, reg3Constants); // reg3Constants[17] => Subregion 3r\r\n    } else if (temperature > T3jk) {\r\n      // Subregion 3k\r\n      SpecificVolume = SubRegion3V(10, pressure, temperature, reg3Constants); // reg3Constants[10] => Subregion 3k\r\n    } else throw Errors.TemperatureNotInRegion3c3s3r3k;\r\n  } else if (pressure > p3cd && pressure <= 20.5) {\r\n    // subregion 3c, 3s or 3t\r\n    let T3cd = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3cd_I, Constants.reg3_T3cd_n);\r\n\r\n    if (temperature <= T3cd) {\r\n      // Subregion 3c\r\n      SpecificVolume = SubRegion3V(2, pressure, temperature, reg3Constants); // reg3Constants[2] => Subregion 3c\r\n    } else if (temperature > T3cd && temperature <= Region4Calculations.SatTemperature(pressure)) {\r\n      // Subregion 3s\r\n      SpecificVolume = SubRegion3V(18, pressure, temperature, reg3Constants); // reg3Constants[18] => Subregion 3s\r\n    } else if (temperature >= Region4Calculations.SatTemperature(pressure)) {\r\n      // Subregion 3t\r\n      SpecificVolume = SubRegion3V(19, pressure, temperature, reg3Constants); // reg3Constants[19] => Subregion 3t\r\n    } else throw Errors.TemperatureNotInRegion3c3s3t;\r\n  }\r\n\r\n  if (pressure > Region4SatPressure.satPressureT13Boundary && pressure <= p3cd) {\r\n    // subregion 3c or 3t\r\n    if (temperature <= Region4Calculations.SatTemperature(pressure)) {\r\n      // Subregion 3c\r\n      SpecificVolume = SubRegion3V(2, pressure, temperature, reg3Constants); // reg3Constants[2] => Subregion 3c;\r\n    } else if (temperature >= Region4Calculations.SatTemperature(pressure)) {\r\n      // Subregion 3t\r\n      SpecificVolume = SubRegion3V(19, pressure, temperature, reg3Constants); // reg3Constants[19] => Subregion 3t\r\n    } else throw Errors.TemperatureNotInRegion3c3t;\r\n  }\r\n\r\n  return SpecificVolume;\r\n}\r\n\r\n// Region 3 backward equations IAPWS SR3-03 (2014)\r\n// T(p,h), v(p,h), T(p,s), v(p,s)\r\n\r\n// Backward equation 1: Boundary between subregion 3a and 3b, h(p)\r\nexport function H3ab(pressure) {\r\n  return (\r\n    Constants.reg3_h3ab_fP[0] +\r\n    Constants.reg3_h3ab_fP[1] * pressure +\r\n    Constants.reg3_h3ab_fP[2] * Math.pow(pressure, 2) +\r\n    Constants.reg3_h3ab_fP[3] * Math.pow(pressure, 3)\r\n  );\r\n}\r\n\r\n// Backward equation 2: Subregion 3a, T(p,h)\r\nexport function Reg3a_Tph(pressure, enthalpy) {\r\n  var T_Reducing = 760; // K\r\n  var p_Reducing = Constants.pmax; // MPa\r\n  var h_Reducing = 2300; // kJ/kg\r\n\r\n  var pi = pressure / p_Reducing;\r\n  var eta = enthalpy / h_Reducing;\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg3a_Tph_I.length; i++) {\r\n    theta +=\r\n      Constants.reg3a_Tph_n[i] *\r\n      Math.pow(pi + 0.24, Constants.reg3a_Tph_I[i]) *\r\n      Math.pow(eta - 0.615, Constants.reg3a_Tph_J[i]);\r\n  }\r\n  return theta * T_Reducing;\r\n}\r\n\r\n// Backward equation 3: Subregion 3b, T(p,h)\r\nexport function Reg3b_Tph(pressure, enthalpy) {\r\n  const T_Reducing = 860; // K\r\n  const p_Reducing = Constants.pmax; // MPa\r\n  const h_Reducing = 2800; // kJ/kg\r\n  const pi = pressure / p_Reducing;\r\n  const eta = enthalpy / h_Reducing;\r\n  var theta = 0;\r\n\r\n  for (let i = 0; i < Constants.reg3b_Tph_I.length; i++) {\r\n    theta +=\r\n      Constants.reg3b_Tph_n[i] *\r\n      Math.pow(pi + 0.298, Constants.reg3b_Tph_I[i]) *\r\n      Math.pow(eta - 0.72, Constants.reg3b_Tph_J[i]);\r\n  }\r\n  return theta * T_Reducing;\r\n}\r\n\r\n// Backward equation 4: Subregion 3a, V(p,h)\r\nexport function Reg3a_Vph(pressure, enthalpy) {\r\n  var v_Reducing = 0.0028; // m3/kg\r\n  var p_Reducing = Constants.pmax; // MPa\r\n  var h_Reducing = 2100; // kJ/kg\r\n\r\n  var pi = pressure / p_Reducing;\r\n  var eta = enthalpy / h_Reducing;\r\n\r\n  var omega = 0;\r\n  for (let i = 0; i < Constants.reg3a_Vph_I.length; i++) {\r\n    omega +=\r\n      Constants.reg3a_Vph_n[i] *\r\n      Math.pow(pi + 0.128, Constants.reg3a_Vph_I[i]) *\r\n      Math.pow(eta - 0.727, Constants.reg3a_Vph_J[i]);\r\n  }\r\n  return omega * v_Reducing;\r\n}\r\n\r\n// Backward equation 5: Subregion 3b, V(p,h)\r\nexport function Reg3b_Vph(pressure, enthalpy) {\r\n  var v_Reducing = 0.0088; // m3/kg\r\n  var p_Reducing = Constants.pmax; // MPa\r\n  var h_Reducing = 2800; // kJ/kg\r\n\r\n  var pi = pressure / p_Reducing;\r\n  var eta = enthalpy / h_Reducing;\r\n\r\n  var omega = 0;\r\n  for (let i = 0; i < Constants.reg3b_Vph_I.length; i++) {\r\n    omega +=\r\n      Constants.reg3b_Vph_n[i] *\r\n      Math.pow(pi + 0.0661, Constants.reg3b_Vph_I[i]) *\r\n      Math.pow(eta - 0.72, Constants.reg3b_Vph_J[i]);\r\n  }\r\n  return omega * v_Reducing;\r\n}\r\n\r\n// Backward equation 6: Subregion 3a, T(p,s)\r\nexport function Reg3a_Tps(pressure, entropy) {\r\n  var T_Reducing = 760; // K\r\n  var p_Reducing = Constants.pmax; // MPa\r\n  var s_Reducing = 4.4; // kJ/kg/K\r\n\r\n  var pi = pressure / p_Reducing;\r\n  var sigma = entropy / s_Reducing;\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg3a_Tps_I.length; i++) {\r\n    theta +=\r\n      Constants.reg3a_Tps_n[i] *\r\n      Math.pow(pi + 0.24, Constants.reg3a_Tps_I[i]) *\r\n      Math.pow(sigma - 0.703, Constants.reg3a_Tps_J[i]);\r\n  }\r\n  return theta * T_Reducing;\r\n}\r\n\r\n// Backward equation 7: Subregion 3b, T(p,s)\r\nexport function Reg3b_Tps(pressure, entropy) {\r\n  var T_Reducing = 860; // K\r\n  var p_Reducing = Constants.pmax; // MPa\r\n  var s_Reducing = 5.3; // kJ/kg/K\r\n\r\n  var pi = pressure / p_Reducing;\r\n  var sigma = entropy / s_Reducing;\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg3b_Tps_I.length; i++) {\r\n    theta +=\r\n      Constants.reg3b_Tps_n[i] *\r\n      Math.pow(pi + 0.76, Constants.reg3b_Tps_I[i]) *\r\n      Math.pow(sigma - 0.818, Constants.reg3b_Tps_J[i]);\r\n  }\r\n  return theta * T_Reducing;\r\n}\r\n\r\n// Backward equation 8: Subregion 3a, V(p,s)\r\nexport function Reg3a_Vps(pressure, entropy) {\r\n  let v_Reducing = 0.0028; // m3/kg\r\n  let p_Reducing = Constants.pmax; // MPa\r\n  let s_Reducing = 4.4; // kJ/kg/K\r\n\r\n  let pi = pressure / p_Reducing;\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var omega = 0;\r\n  for (let i = 0; i < Constants.reg3a_Vps_I.length; i++) {\r\n    omega +=\r\n      Constants.reg3a_Vps_n[i] *\r\n      Math.pow(pi + 0.187, Constants.reg3a_Vps_I[i]) *\r\n      Math.pow(sigma - 0.755, Constants.reg3a_Vps_J[i]);\r\n  }\r\n  return omega * v_Reducing;\r\n}\r\n\r\n// Backward equation 9: Subregion 3b, V(p,s)\r\nexport function Reg3b_Vps(pressure, entropy) {\r\n  let v_Reducing = 0.0088; // m3/kg\r\n  let p_Reducing = Constants.pmax; // MPa\r\n  let s_Reducing = 5.3; // kJ/kg/K\r\n\r\n  let pi = pressure / p_Reducing;\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var omega = 0;\r\n  for (let i = 0; i < Constants.reg3b_Vps_I.length; i++) {\r\n    omega +=\r\n      Constants.reg3b_Vps_n[i] *\r\n      Math.pow(pi + 0.298, Constants.reg3b_Vps_I[i]) *\r\n      Math.pow(sigma - 0.816, Constants.reg3b_Vps_J[i]);\r\n  }\r\n  return omega * v_Reducing;\r\n}\r\n\r\n// Backward equation 10:  Psat(h)\r\nexport function Reg3_PSATh(enthalpy) {\r\n  let p_Reducing = 22; // MPa\r\n  let h_Reducing = 2600; // kJ/kg\r\n\r\n  let eta = enthalpy / h_Reducing;\r\n\r\n  var pi = 0;\r\n  for (let i = 0; i < Constants.reg3_PSATh_I.length; i++) {\r\n    pi +=\r\n      Constants.reg3_PSATh_n[i] *\r\n      Math.pow(eta - 1.02, Constants.reg3_PSATh_I[i]) *\r\n      Math.pow(eta - 0.608, Constants.reg3_PSATh_J[i]);\r\n  }\r\n  return pi * p_Reducing;\r\n}\r\n\r\n// Backward equation 11:  Psat(s)\r\nexport function Reg3_PSATs(entropy) {\r\n  let p_Reducing = 22; // MPa\r\n  let s_Reducing = 5.2; // kJ/kg/K\r\n\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var pi = 0;\r\n  for (let i = 0; i < Constants.reg3_PSATs_I.length; i++) {\r\n    pi +=\r\n      Constants.reg3_PSATs_n[i] *\r\n      Math.pow(sigma - 1.03, Constants.reg3_PSATs_I[i]) *\r\n      Math.pow(sigma - 0.699, Constants.reg3_PSATs_J[i]);\r\n  }\r\n  return pi * p_Reducing;\r\n}\r\n\r\n//  SR4-04 Equ 1: p3aHS gives properties for region 3a\r\nexport function P3aHS(enthalpy, entropy) {\r\n  let p_Reducing = 99; // MPa\r\n  let h_Reducing = 2300; // kJ/kg\r\n  let s_Reducing = 4.4; // kJ/kg/K\r\n\r\n  let eta = enthalpy / h_Reducing;\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var pi = 0;\r\n  for (let i = 0; i < Constants.reg3a_pHS_I.length; i++) {\r\n    pi +=\r\n      Constants.reg3a_pHS_n[i] *\r\n      Math.pow(eta - 1.01, Constants.reg3a_pHS_I[i]) *\r\n      Math.pow(sigma - 0.75, Constants.reg3a_pHS_J[i]);\r\n  }\r\n  return pi * p_Reducing;\r\n}\r\n\r\n//  SR4-04 Equ 2: p3bHS gives properties for region 3b\r\nexport function P3bHS(enthalpy, entropy) {\r\n  let p_Reducing = 16.6; // MPa\r\n  let h_Reducing = 2800; // kJ/kg\r\n  let s_Reducing = 5.3; // kJ/kg/K\r\n\r\n  let eta = enthalpy / h_Reducing;\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var pi = 0;\r\n  for (let i = 0; i < Constants.reg3b_pHS_I.length; i++) {\r\n    pi +=\r\n      Constants.reg3b_pHS_n[i] *\r\n      Math.pow(eta - 0.681, Constants.reg3b_pHS_I[i]) *\r\n      Math.pow(sigma - 0.792, Constants.reg3b_pHS_J[i]);\r\n  }\r\n  return p_Reducing / pi;\r\n}\r\n\r\n//  SR4-04 Equ 3: saturated liquid line, h1'(s)\r\nexport function H1_sat_liqS(entropy) {\r\n  let h_Reducing = 1700; // kJ/kg\r\n  let s_Reducing = 3.8; // kJ/kg/K\r\n\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var eta = 0;\r\n  for (let i = 0; i < Constants.reg3_h1_satLiqS_I.length; i++) {\r\n    eta +=\r\n      Constants.reg3_h1_satLiqS_n[i] *\r\n      Math.pow(sigma - 1.09, Constants.reg3_h1_satLiqS_I[i]) *\r\n      Math.pow(sigma + 0.366e-4, Constants.reg3_h1_satLiqS_J[i]);\r\n  }\r\n  return eta * h_Reducing;\r\n}\r\n\r\n//  SR4-04 Equ 4: saturated liquid line, h3a'(s)\r\nexport function H3a_sat_liqS(entropy) {\r\n  let h_Reducing = 1700; // kJ/kg\r\n  let s_Reducing = 3.8; // kJ/kg/K\r\n\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var eta = 0;\r\n  for (let i = 0; i < Constants.reg3_h3a_satLiqS_I.length; i++) {\r\n    eta +=\r\n      Constants.reg3_h3a_satLiqS_n[i] *\r\n      Math.pow(sigma - 1.09, Constants.reg3_h3a_satLiqS_I[i]) *\r\n      Math.pow(sigma + 0.366e-4, Constants.reg3_h3a_satLiqS_J[i]);\r\n  }\r\n  return eta * h_Reducing;\r\n}\r\n\r\n//  SR4-04 Equ 5: saturated vapor line, h2ab\"(s)\r\nexport function H2ab_sat_VapS(entropy) {\r\n  let h_Reducing = 2800; // kJ/kg\r\n  let s1_Reducing = 5.21; // kJ/kg/K\r\n  let s2_Reducing = 9.2; // kJ/kg/K\r\n\r\n  let sigma1 = entropy / s1_Reducing;\r\n  let sigma2 = entropy / s2_Reducing;\r\n\r\n  var eta = 0;\r\n  for (let i = 0; i < Constants.reg3_h2ab_satVapS_I.length; i++) {\r\n    eta +=\r\n      Constants.reg3_h2ab_satVapS_n[i] *\r\n      Math.pow(1 / sigma1 - 0.513, Constants.reg3_h2ab_satVapS_I[i]) *\r\n      Math.pow(sigma2 - 0.524, Constants.reg3_h2ab_satVapS_J[i]);\r\n  }\r\n  return Math.exp(eta) * h_Reducing;\r\n}\r\n\r\n//  SR4-04 Equ 6: saturated vapor line, h2c3b\"(s)\r\nexport function H2c3b_sat_VapS(entropy) {\r\n  let h_Reducing = 2800; // kJ/kg\r\n  let s_Reducing = 5.9; // kJ/kg/K\r\n\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var eta = 0;\r\n  for (let i = 0; i < Constants.reg3_h2c3b_satVapS_I.length; i++) {\r\n    eta +=\r\n      Constants.reg3_h2c3b_satVapS_n[i] *\r\n      Math.pow(sigma - 1.02, Constants.reg3_h2c3b_satVapS_I[i]) *\r\n      Math.pow(sigma - 0.726, Constants.reg3_h2c3b_satVapS_J[i]);\r\n  }\r\n  return Math.pow(eta, 4) * h_Reducing;\r\n}\r\n\r\n//  SR4-04 Equ 7: hb13(s) boundary between Regions 1 and 3\r\nexport function Hb13S(entropy) {\r\n  let h_Reducing = 1700; // kJ/kg\r\n  let s_Reducing = 3.8; // kJ/kg/K\r\n\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var eta = 0;\r\n  for (let i = 0; i < Constants.reg3_hB13_I.length; i++) {\r\n    eta +=\r\n      Constants.reg3_hB13_n[i] *\r\n      Math.pow(sigma - 0.884, Constants.reg3_hB13_I[i]) *\r\n      Math.pow(sigma - 0.864, Constants.reg3_hB13_J[i]);\r\n  }\r\n  return eta * h_Reducing;\r\n}\r\n\r\n//  SR4-04 Equ 8: Tb23(h,s) boundary between Regions 2 and 3\r\nexport function Tb23HS(enthalpy, entropy) {\r\n  let T_Reducing = 900; // K\r\n  let h_Reducing = 3000; // kJ/kg\r\n  let s_Reducing = 5.3; // kJ/kg/K\r\n\r\n  let eta = enthalpy / h_Reducing;\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg3_TB23HS_I.length; i++) {\r\n    theta +=\r\n      Constants.reg3_TB23HS_n[i] *\r\n      Math.pow(eta - 0.727, Constants.reg3_TB23HS_I[i]) *\r\n      Math.pow(sigma - 0.864, Constants.reg3_TB23HS_J[i]);\r\n  }\r\n  return theta * T_Reducing;\r\n}\r\n\r\n//  SR4-04 Equ 9: Tsat(h,s) saturation temperature given an enthalpy and entropy\r\nexport function TsatHS(enthalpy, entropy) {\r\n  let T_Reducing = 550; // K\r\n  let h_Reducing = 2800; // kJ/kg\r\n  let s_Reducing = 9.2; // kJ/kg/K\r\n\r\n  let eta = enthalpy / h_Reducing;\r\n  let sigma = entropy / s_Reducing;\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg3_TsatHS_I.length; i++) {\r\n    theta +=\r\n      Constants.reg3_TsatHS_n[i] *\r\n      Math.pow(eta - 0.119, Constants.reg3_TsatHS_I[i]) *\r\n      Math.pow(sigma - 1.07, Constants.reg3_TsatHS_J[i]);\r\n  }\r\n  return theta * T_Reducing;\r\n}\r\n\r\n// Test functions\r\nexport function T3ab(pressure) {\r\n  var T3ab = Reg3SubregAbOpWxBoundary(pressure, Constants.reg3_T3ab_I, Constants.reg3_T3ab_n);\r\n  return T3ab;\r\n}\r\n\r\nexport function T3op(pressure) {\r\n  var T3op = Reg3SubregAbOpWxBoundary(pressure, Constants.reg3_T3op_I, Constants.reg3_T3op_n);\r\n  return T3op;\r\n}\r\n\r\nexport function T3ef(pressure) {\r\n  var T3ef = Reg3SubregEfBoundary(pressure);\r\n  return T3ef;\r\n}\r\n\r\nexport function T3cd(pressure) {\r\n  var T3cd = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3cd_I, Constants.reg3_T3cd_n);\r\n  return T3cd;\r\n}\r\n\r\nexport function T3gh(pressure) {\r\n  var T3gh = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3gh_I, Constants.reg3_T3gh_n);\r\n  return T3gh;\r\n}\r\n\r\nexport function T3ij(pressure) {\r\n  var T3ij = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3ij_I, Constants.reg3_T3ij_n);\r\n  return T3ij;\r\n}\r\n\r\nexport function T3jk(pressure) {\r\n  var T3jk = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3jk_I, Constants.reg3_T3jk_n);\r\n  return T3jk;\r\n}\r\n\r\nexport function T3mn(pressure) {\r\n  var T3mn = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3mn_I, Constants.reg3_T3mn_n);\r\n  return T3mn;\r\n}\r\n\r\nexport function T3qu(pressure) {\r\n  var T3qu = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3qu_I, Constants.reg3_T3qu_n);\r\n  return T3qu;\r\n}\r\n\r\nexport function T3rx(pressure) {\r\n  var T3rx = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3rx_I, Constants.reg3_T3rx_n);\r\n  return T3rx;\r\n}\r\n\r\nexport function T3uv(pressure) {\r\n  var T3uv = Reg3SubregBoundaryMost(pressure, Constants.reg3_T3uv_I, Constants.reg3_T3uv_n);\r\n  return T3uv;\r\n}\r\n\r\nexport function T3wx(pressure) {\r\n  var T3wx = Reg3SubregAbOpWxBoundary(pressure, Constants.reg3_T3wx_I, Constants.reg3_T3wx_n);\r\n  return T3wx;\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Units from \"./Units.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as Region1Calculations from \"./Region1Calculations.js\";\r\nimport * as Region2Calculations from \"./Region2Calculations.js\";\r\nimport * as Region3Calculations from \"./Region3Calculations.js\";\r\nimport * as Region4SatPressure from \"./Region4SatPressure.js\";\r\n\r\nconst T3uv_SatPress = 21.93161551; // MPa : This is the point on the saturation line where regions 3u & 3y, and 3x & 3z meet\r\nconst T3wx_SatPress = 21.90096265; // MPa : This is the point to the right of the saturation line at the 3x & 3z boundary\r\n\r\n// calculate the saturation properties at zero quality f(p)\r\nexport function SatPropertiesQ0_fP(pressure) {\r\n  const satTemp = SatTemperature(pressure);\r\n\r\n  if (pressure >= Constants.pTriple && pressure <= Region4SatPressure.satPressureT13Boundary) {\r\n    // Region 1\r\n    return Region1Calculations.Properties_fPT(pressure, satTemp);\r\n  } else if (pressure > Region4SatPressure.satPressureT13Boundary && pressure <= Region4SatPressure.satPressureTcH2O) {\r\n    // Region 3 saturation region\r\n    var SpecificVolume = 0;\r\n    if (pressure > Region4SatPressure.satPressureT13Boundary && pressure <= Region3Calculations.p3cd) {\r\n      SpecificVolume = Region3Calculations.SubRegion3V(2, pressure, satTemp, Region3Calculations.reg3Constants); // reg3Constants[2] => Subregion 3c;\r\n    } else if (pressure > Region3Calculations.p3cd && pressure <= Region4SatPressure.reg4SatPressureT3q3r3u3xPoint) {\r\n      // Subregion 3s\r\n      SpecificVolume = Region3Calculations.SubRegion3V(18, pressure, satTemp, Region3Calculations.reg3Constants); // reg3Constants[18] => Subregion 3s\r\n    } else if (pressure > Region4SatPressure.reg4SatPressureT3q3r3u3xPoint && pressure <= T3uv_SatPress) {\r\n      //Subregion 3u\r\n      SpecificVolume = Region3Calculations.SubRegion3V(20, pressure, satTemp, Region3Calculations.reg3Constants); // reg3Constants[20] => Subregion 3u\r\n    } else if (pressure > T3uv_SatPress && pressure <= Region4SatPressure.satPressureTcH2O) {\r\n      //Subregion 3y\r\n      SpecificVolume = Region3Calculations.SubRegion3V(24, pressure, satTemp, Region3Calculations.reg3Constants); // reg3Constants[24] => Subregion 3y\r\n    } else throw Errors.TemperatureNotInRegion3c3s3u3y;\r\n\r\n    var StmPropArray_Q0 = Region3Calculations.Properties_fVT(SpecificVolume, satTemp);\r\n    StmPropArray_Q0[0] = pressure;\r\n    return StmPropArray_Q0;\r\n  } else throw Errors.PressureNotWithinValidSaturatedSteamRegion;\r\n}\r\n\r\n// calculate the saturation properties at zero quality f(T)\r\nexport function SatPropertiesQ0_fT(temperature) {\r\n  var SpecificVolume = 0;\r\n  const pressure = Region4SatPressure.SatPressure(temperature);\r\n\r\n  if (pressure >= Constants.pTriple && pressure <= Region4SatPressure.satPressureT13Boundary) {\r\n    // Region 1\r\n    return Region1Calculations.Properties_fPT(pressure, temperature);\r\n  } else if (pressure > Region4SatPressure.satPressureT13Boundary && pressure <= Region4SatPressure.satPressureTcH2O) {\r\n    // Region 3\r\n    if (pressure > Region4SatPressure.satPressureT13Boundary && pressure <= Region3Calculations.p3cd) {\r\n      SpecificVolume = Region3Calculations.SubRegion3V(2, pressure, temperature, Region3Calculations.reg3Constants); // reg3Constants[2] => Subregion 3c;\r\n    } else if (pressure > Region3Calculations.p3cd && pressure <= Region4SatPressure.reg4SatPressureT3q3r3u3xPoint) {\r\n      // Subregion 3s\r\n      SpecificVolume = Region3Calculations.SubRegion3V(18, pressure, temperature, Region3Calculations.reg3Constants); // reg3Constants[18] => Subregion 3s\r\n    } else if (pressure > Region4SatPressure.reg4SatPressureT3q3r3u3xPoint && pressure <= T3uv_SatPress) {\r\n      //Subregion 3u\r\n      SpecificVolume = Region3Calculations.SubRegion3V(20, pressure, temperature, Region3Calculations.reg3Constants); // reg3Constants[20] => Subregion 3u\r\n    } else if (pressure > T3uv_SatPress && pressure <= Region4SatPressure.satPressureTcH2O) {\r\n      //Subregion 3y\r\n      SpecificVolume = Region3Calculations.SubRegion3V(24, pressure, temperature, Region3Calculations.reg3Constants); // reg3Constants[24] => Subregion 3y\r\n    } else throw Errors.TemperatureNotInRegion3c3s3u3y;\r\n\r\n    return Region3Calculations.Properties_fVT(SpecificVolume, temperature);\r\n  } else throw Errors.PressureNotWithinValidSaturatedSteamRegion;\r\n}\r\n\r\n// calculate the saturation properties at 100% quality f(p)\r\nexport function SatPropertiesQ1_fP(pressure) {\r\n  const satTemp = SatTemperature(pressure);\r\n  var SpecificVolume = 0;\r\n\r\n  if (pressure >= 0 && pressure <= Region4SatPressure.satPressureT13Boundary) {\r\n    // Region 2\r\n    var StmPropArray_Q1 = Region2Calculations.Properties_fPT(pressure, satTemp);\r\n    StmPropArray_Q1[0] = pressure;\r\n    return StmPropArray_Q1;\r\n  } else if (pressure > Region4SatPressure.satPressureT13Boundary && pressure <= Region4SatPressure.satPressureTcH2O) {\r\n    // Region 3 subcritical saturation region\r\n    if (pressure > Region4SatPressure.satPressureT13Boundary && pressure <= 20.5) {\r\n      // Subregion 3t\r\n      SpecificVolume = Region3Calculations.SubRegion3V(19, pressure, satTemp, Region3Calculations.reg3Constants); // reg3Constants[19] => Subregion 3t\r\n    } else if (pressure > 20.5 && pressure <= Region4SatPressure.reg4SatPressureT3q3r3u3xPoint) {\r\n      // Subregion 3r\r\n      SpecificVolume = Region3Calculations.SubRegion3V(17, pressure, satTemp, Region3Calculations.reg3Constants); // reg3Constants[17] => Subregion 3r\r\n    } else if (pressure > Region4SatPressure.reg4SatPressureT3q3r3u3xPoint && pressure <= T3wx_SatPress) {\r\n      //Subregion 3x\r\n      SpecificVolume = Region3Calculations.SubRegion3V(23, pressure, satTemp, Region3Calculations.reg3Constants); // reg3Constants[23] => Subregion 3x\r\n    } else if (pressure > T3wx_SatPress && pressure <= Region4SatPressure.satPressureTcH2O) {\r\n      //Subregion 3z\r\n      SpecificVolume = Region3Calculations.SubRegion3V(25, pressure, satTemp, Region3Calculations.reg3Constants); // reg3Constants[25] => Subregion 3z\r\n    } else throw Errors.PressureNotWithinValidSaturatedSteamRegion;\r\n\r\n    var ret = Region3Calculations.Properties_fVT(SpecificVolume, satTemp);\r\n    ret[0] = pressure;\r\n    return ret;\r\n    // [(0) Pressure, (1) Temperature, (3) Enthalpy, (4) Entropy,\r\n    //  (5) InternalEnergy, (6) Volume, (7) IsobaricHeat, (8) IsochoricHeat, (9) SpeedOfSound]\r\n  } else throw Errors.PressureNotWithinValidSaturatedSteamRegion;\r\n}\r\n\r\n// calculate the saturation properties at 100% quality f(T)\r\nexport function SatPropertiesQ1_fT(temperature) {\r\n  const pressure = Region4SatPressure.SatPressure(temperature);\r\n  var SpecificVolume = 0;\r\n\r\n  if (pressure >= 0 && pressure <= Region4SatPressure.satPressureT13Boundary) {\r\n    // Region 2\r\n    var reg2 = Region2Calculations.Properties_fPT(pressure, temperature);\r\n    reg2[1] = temperature;\r\n    return reg2;\r\n  } else if (pressure > Region4SatPressure.satPressureT13Boundary && pressure <= Region4SatPressure.satPressureTcH2O) {\r\n    // Region 3 subcritical saturation region\r\n    if (pressure > Region4SatPressure.satPressureT13Boundary && pressure <= 20.5) {\r\n      // Subregion 3t\r\n      SpecificVolume = Region3Calculations.SubRegion3V(19, pressure, temperature, Region3Calculations.reg3Constants); // reg3Constants[19] => Subregion 3t\r\n    } else if (pressure > 20.5 && pressure <= Region4SatPressure.reg4SatPressureT3q3r3u3xPoint) {\r\n      // Subregion 3r\r\n      SpecificVolume = Region3Calculations.SubRegion3V(17, pressure, temperature, Region3Calculations.reg3Constants); // reg3Constants[17] => Subregion 3r\r\n    } else if (pressure > Region4SatPressure.reg4SatPressureT3q3r3u3xPoint && pressure <= T3wx_SatPress) {\r\n      //Subregion 3x\r\n      SpecificVolume = Region3Calculations.SubRegion3V(23, pressure, temperature, Region3Calculations.reg3Constants); // reg3Constants[23] => Subregion 3x\r\n    } else if (pressure > T3wx_SatPress && pressure <= Region4SatPressure.satPressureTcH2O) {\r\n      //Subregion 3z\r\n      SpecificVolume = Region3Calculations.SubRegion3V(25, pressure, temperature, Region3Calculations.reg3Constants); // reg3Constants[25] => Subregion 3z\r\n    } else throw Errors.PressureNotWithinValidSaturatedSteamRegion;\r\n\r\n    var StmPropArray_Q1 = Region3Calculations.Properties_fVT(SpecificVolume, temperature);\r\n    StmPropArray_Q1[1] = temperature;\r\n    return StmPropArray_Q1;\r\n    // [(0) Pressure, (1) Temperature, (3) Enthalpy, (4) Entropy,\r\n    //  (5) InternalEnergy, (6) Volume, (7) IsobaricHeat, (8) IsochoricHeat, (9) SpeedOfSound]\r\n  } else throw Errors.PressureNotWithinValidSaturatedSteamRegion;\r\n}\r\n\r\nexport function satProperties(pressure, parameterValue, parameterIndex) {\r\n  if (pressure > 0 && pressure <= Constants.pc_H2O && parameterIndex >= 3 && parameterIndex <= 9) {\r\n    var properties = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    const propertiesQ0 = SatPropertiesQ0_fP(pressure);\r\n    const propertiesQ1 = SatPropertiesQ1_fP(pressure);\r\n    //const parameterQ0 = propertiesQ0[parameterIndex];\r\n    //const parameterQ1 = propertiesQ1[parameterIndex];\r\n    const quality =\r\n      (parameterValue - propertiesQ0[parameterIndex]) / (propertiesQ1[parameterIndex] - propertiesQ0[parameterIndex]);\r\n    if (quality >= 0 && quality <= 1) {\r\n      for (\r\n        var i = 3;\r\n        i < 9;\r\n        i++ // Only applies to properties[3] to [9], parameters that are a function of the mass (something/kg).  Quality is (kg steam)/(kg steam + kg liquid water).  This is an extensive (how much of the stuff there is) vs and intensive (like pressure or temperature) property.\r\n      ) {\r\n        if (i == parameterIndex) {\r\n          continue;\r\n        } // skip over the input parameter so it doesn't change\r\n        properties[i] = propertiesQ0[i] + quality * (propertiesQ1[i] - propertiesQ0[i]);\r\n      }\r\n      properties[0] = pressure;\r\n      return properties;\r\n    } else throw Errors.QualityNotWithinValidRange;\r\n  } else throw Errors.PressureOrIndexNotValid;\r\n}\r\n\r\nexport function satProperties_fPQ(pressure, quality) {\r\n  if (pressure > 0 && pressure <= Region4SatPressure.satPressureTcH2O && quality >= 0 && quality <= 1) {\r\n    var properties = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    const propertiesQ0 = SatPropertiesQ0_fP(pressure);\r\n    const propertiesQ1 = SatPropertiesQ1_fP(pressure);\r\n    properties[10] = 0;\r\n    properties[11] = 0;\r\n    /*for (let i = 3; i < 9; i++) // Only applies to properties[3] to [9], parameters that are a function of the mass (something/kg).  Quality is (kg steam)/(kg steam + kg liquid water)\r\n        {\r\n            properties[i] = propertiesQ0[i] + quality * (propertiesQ1[i] - propertiesQ0[i]);\r\n        }*/\r\n    properties[0] = pressure;\r\n    properties[1] = propertiesQ0[1];\r\n    properties[2] = quality;\r\n    properties[3] = propertiesQ0[3] + quality * (propertiesQ1[3] - propertiesQ0[3]);\r\n    properties[4] = propertiesQ0[4] + quality * (propertiesQ1[4] - propertiesQ0[4]);\r\n    properties[5] = propertiesQ0[5] + quality * (propertiesQ1[5] - propertiesQ0[5]);\r\n    properties[6] = propertiesQ0[6] + quality * (propertiesQ1[6] - propertiesQ0[6]);\r\n    properties[7] = propertiesQ0[7] + quality * (propertiesQ1[7] - propertiesQ0[7]);\r\n    properties[8] = propertiesQ0[8] + quality * (propertiesQ1[8] - propertiesQ0[8]);\r\n    return properties;\r\n  } else throw Errors.PressureOrQualityNotValid;\r\n}\r\n\r\nexport function satProperties_fTQ(temperature, quality) {\r\n  if (temperature >= Constants.Tmin && temperature <= Constants.Tc_H2O && quality >= 0 && quality <= 1) {\r\n    var properties = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    const propertiesQ0 = SatPropertiesQ0_fT(temperature);\r\n    const propertiesQ1 = SatPropertiesQ1_fT(temperature);\r\n    properties[10] = 0;\r\n    properties[11] = 0;\r\n    for (\r\n      var i = 3;\r\n      i < 9;\r\n      i++ // Only applies to properties[3] to [9], parameters that are a function of the mass (something/kg).  Quality is (kg steam)/(kg steam + kg liquid water)\r\n    ) {\r\n      properties[i] = propertiesQ0[i] + quality * (propertiesQ1[i] - propertiesQ0[i]);\r\n    }\r\n    properties[1] = temperature;\r\n    properties[2] = quality;\r\n    return properties;\r\n  } else throw Errors.PressureOrQualityNotValid;\r\n}\r\n\r\n// calculate the steam properties given a pressure and an enthalpy\r\nexport function Properties_fPH(pressure, enthalpy) {\r\n  if (pressure > 0 && pressure <= Constants.pc_H2O) {\r\n    return satProperties(pressure, enthalpy, Units.VectorParameters.Enthalpy);\r\n  } else throw Errors.PressureNotValid;\r\n}\r\n\r\n// calculate the steam properties given a pressure and an entropy\r\nexport function Properties_fPS(pressure, entropy) {\r\n  if (pressure > 0 && pressure <= Constants.pc_H2O) {\r\n    return satProperties(pressure, entropy, Units.VectorParameters.Entropy);\r\n  } else throw Errors.PressureNotValid;\r\n}\r\n\r\n// calculate the steam properties given a pressure and a quality\r\nexport function Properties_fPQ(pressure, quality) {\r\n  if (pressure > 0 && (pressure <= Constants.pc_H2O) & (quality >= 0) && quality <= 1) {\r\n    return satProperties_fPQ(pressure, quality);\r\n  } else Errors.PressureOrQualityNotValid;\r\n}\r\n\r\n// calculate the steam properties given a temperature and a quality\r\nexport function Properties_fTQ(temperature, quality) {\r\n  if (temperature >= Constants.Tmin && temperature <= Constants.Tc_H2O && quality >= 0 && quality <= 1) {\r\n    return satProperties_fTQ(temperature, quality);\r\n  } else Errors.PressureOrQualityNotValid;\r\n}\r\n\r\n// calculate the saturation temperature: R7 Eq. 31\r\nexport function SatTemperature(pressure) {\r\n  // if (Pressure >= 0.611213 && Pressure <= 22.064)\r\n  if (pressure > 0 && pressure <= Constants.pc_H2O) {\r\n    const beta = Math.pow(pressure, 0.25);\r\n    const E = Math.pow(beta, 2) + Constants.reg4_sat_eq_n[2] * beta + Constants.reg4_sat_eq_n[5];\r\n    const F =\r\n      Constants.reg4_sat_eq_n[0] * Math.pow(beta, 2) + Constants.reg4_sat_eq_n[3] * beta + Constants.reg4_sat_eq_n[6];\r\n    const G =\r\n      Constants.reg4_sat_eq_n[1] * Math.pow(beta, 2) + Constants.reg4_sat_eq_n[4] * beta + Constants.reg4_sat_eq_n[7];\r\n    const D = (2 * G) / (-F - Math.sqrt(Math.pow(F, 2) - 4 * E * G));\r\n    const satTemperature =\r\n      (Constants.reg4_sat_eq_n[9] +\r\n        D -\r\n        Math.sqrt(\r\n          Math.pow(Constants.reg4_sat_eq_n[9] + D, 2) -\r\n            4 * (Constants.reg4_sat_eq_n[8] + Constants.reg4_sat_eq_n[9] * D)\r\n        )) /\r\n      2;\r\n    return satTemperature;\r\n  } else throw Errors.PressureNotValid;\r\n}\r\n\r\n// Surface Tension IAPWS R1-76(2014)\r\nexport function SurfaceTension(temperature) {\r\n  const B = 235.8; // mN/m\r\n  const b = -0.625;\r\n  const mu = 1.256;\r\n  const tau = 1 - temperature / Constants.Tc_H2O;\r\n  const sigma = B * Math.pow(tau, mu) * (1 + b * tau);\r\n  return sigma;\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as Region4Calculations from \"./Region4Calculations.js\";\r\nimport * as Region4SatPressure from \"./Region4SatPressure.js\";\r\nimport * as Boundary2_3 from \"./Boundary2_3Calculations.js\";\r\n\r\nconst R = Constants.R_H2O * 1000; // convert kJ to Joules\r\n\r\nconst p_Reducing = 1; // MPa\r\nconst T_reducing = 540; // K\r\n\r\nexport function Properties_fPT(pressure, temperature, metastable = false) {\r\n  var tWilson = Constants.Tc_H2O; // metastable 5% equilibrium moisture temperature versus pressure.  I initate it to a high value so the metastable \"if\" logic test won't kick in unless TWilson has been calculated in the acceptable range\r\n  if (\r\n    metastable &&\r\n    pressure >= Constants.pTriple &&\r\n    pressure <= 10 &&\r\n    temperature <= Region4Calculations.SatTemperature(pressure)\r\n  ) {\r\n    tWilson =\r\n      209.07214 -\r\n      126.05204 * pressure +\r\n      42.768349 * Math.pow(pressure, 1.5) -\r\n      5.2499952 * Math.pow(pressure, 2) +\r\n      235.98605 * Math.sqrt(pressure);\r\n  }\r\n\r\n  if (\r\n    (temperature >= Constants.Tmin &&\r\n      temperature < Constants.Ttriple &&\r\n      pressure > 0 &&\r\n      pressure <= ((temperature - Constants.Tmin) / 0.1) * (Constants.pTriple - Constants.pT0) + Constants.pT0) || // Low temperatures between 273.15 and 273.16 K\r\n    (temperature >= Constants.Ttriple &&\r\n      temperature <= Constants.T13_boundary &&\r\n      pressure > 0 &&\r\n      pressure <= Region4SatPressure.SatPressure(temperature) + 1e-11) ||\r\n    (temperature > Constants.T13_boundary &&\r\n      temperature <= Constants.T23_100MPa &&\r\n      pressure > 0 &&\r\n      pressure <= Boundary2_3.reg23BoundaryPfT(temperature)) ||\r\n    (temperature > Constants.T23_100MPa &&\r\n      temperature <= Constants.T25_boundary &&\r\n      pressure > 0 &&\r\n      pressure <= Constants.pmax) ||\r\n    (metastable &&\r\n      pressure >= Constants.pTriple &&\r\n      pressure <= 10 &&\r\n      temperature <= Region4Calculations.SatTemperature(pressure) &&\r\n      temperature >= tWilson)\r\n  ) {\r\n    // The following line is the 5% quality temperature, below the saturation line, based upon the 5% moisture enthalpy h(p)\r\n    var p = pressure * 1e6; // convert MPa to pascalsT\r\n\r\n    var pi = pressure / p_Reducing; // Reduced Pressure\r\n    var tau = T_reducing / temperature; // Reduced Temperature\r\n\r\n    var gamma_0 = Math.log(pi); // Gibbs free energy\r\n    var gamma_0_pi = 1 / pi;\r\n    var gamma_0_tau = 0;\r\n    //var gamma_0_pi_pi = -1 / Math.pow(pi, 2);\r\n    var gamma_0_tau_tau = 0;\r\n    //var gamma_0_pi_tau = 0;\r\n\r\n    var gamma_r = 0; // Gibbs free energy\r\n    var gamma_r_pi = 0;\r\n    var gamma_r_tau = 0;\r\n    var gamma_r_pi_pi = 0;\r\n    var gamma_r_tau_tau = 0;\r\n    var gamma_r_pi_tau = 0;\r\n\r\n    var gibbIdeal_n = [];\r\n    var gibbRes_I = [];\r\n    var gibbRes_J = [];\r\n    var gibbRes_n = [];\r\n\r\n    // if metastable function conditions met\r\n    if (\r\n      metastable &&\r\n      pressure >= Constants.pTriple &&\r\n      pressure <= 10 &&\r\n      temperature <= Region4Calculations.SatTemperature(pressure)\r\n    ) {\r\n      gibbIdeal_n = Constants.reg2_Gibb_Ideal_na;\r\n      gibbRes_I = Constants.reg2_MSV_Gibb_Res_I;\r\n      gibbRes_J = Constants.reg2_MSV_Gibb_Res_J;\r\n      gibbRes_n = Constants.reg2_MSV_Gibb_Res_n;\r\n    } else {\r\n      gibbIdeal_n = Constants.reg2_Gibb_Ideal_n;\r\n      gibbRes_I = Constants.reg2_Gibb_Res_I;\r\n      gibbRes_J = Constants.reg2_Gibb_Res_J;\r\n      gibbRes_n = Constants.reg2_Gibb_Res_n;\r\n    }\r\n\r\n    var i = 0;\r\n    for (\r\n      i = 0;\r\n      i < gibbIdeal_n.length;\r\n      i++ //R7-97 Table 13\r\n    ) {\r\n      gamma_0 += gibbIdeal_n[i] * Math.pow(tau, Constants.reg2_Gibb_Ideal_J[i]);\r\n      gamma_0_tau +=\r\n        gibbIdeal_n[i] * Constants.reg2_Gibb_Ideal_J[i] * Math.pow(tau, Constants.reg2_Gibb_Ideal_J[i] - 1);\r\n      gamma_0_tau_tau +=\r\n        gibbIdeal_n[i] *\r\n        Constants.reg2_Gibb_Ideal_J[i] *\r\n        (Constants.reg2_Gibb_Ideal_J[i] - 1) *\r\n        Math.pow(tau, Constants.reg2_Gibb_Ideal_J[i] - 2);\r\n    }\r\n\r\n    for (i = 0; i < gibbRes_n.length; i++) {\r\n      gamma_r += gibbRes_n[i] * Math.pow(pi, gibbRes_I[i]) * Math.pow(tau - 0.5, gibbRes_J[i]);\r\n      gamma_r_pi += gibbRes_n[i] * gibbRes_I[i] * Math.pow(pi, gibbRes_I[i] - 1) * Math.pow(tau - 0.5, gibbRes_J[i]);\r\n      gamma_r_tau += gibbRes_n[i] * Math.pow(pi, gibbRes_I[i]) * gibbRes_J[i] * Math.pow(tau - 0.5, gibbRes_J[i] - 1);\r\n      gamma_r_pi_pi +=\r\n        gibbRes_n[i] *\r\n        gibbRes_I[i] *\r\n        (gibbRes_I[i] - 1) *\r\n        Math.pow(pi, gibbRes_I[i] - 2) *\r\n        Math.pow(tau - 0.5, gibbRes_J[i]);\r\n      gamma_r_tau_tau +=\r\n        gibbRes_n[i] *\r\n        Math.pow(pi, gibbRes_I[i]) *\r\n        gibbRes_J[i] *\r\n        (gibbRes_J[i] - 1) *\r\n        Math.pow(tau - 0.5, gibbRes_J[i] - 2);\r\n      gamma_r_pi_tau +=\r\n        gibbRes_n[i] *\r\n        gibbRes_I[i] *\r\n        Math.pow(pi, gibbRes_I[i] - 1) *\r\n        gibbRes_J[i] *\r\n        Math.pow(tau - 0.5, gibbRes_J[i] - 1);\r\n    }\r\n\r\n    var Volume = (R * temperature * pi * (gamma_0_pi + gamma_r_pi)) / p;\r\n    var InternalEnergy =\r\n      (R / 1000) * temperature * (tau * (gamma_0_tau + gamma_r_tau) - pi * (gamma_0_pi + gamma_r_pi));\r\n    var Entropy = (R / 1000) * (tau * (gamma_0_tau + gamma_r_tau) - (gamma_0 + gamma_r));\r\n    var Enthalpy = (R / 1000) * temperature * tau * (gamma_0_tau + gamma_r_tau);\r\n    var IsobaricHeat = -(R / 1000) * Math.pow(tau, 2) * (gamma_0_tau_tau + gamma_r_tau_tau);\r\n    var IsochoricHeat =\r\n      (R / 1000) *\r\n      (-Math.pow(tau, 2) * (gamma_0_tau_tau + gamma_r_tau_tau) -\r\n        Math.pow(1 + pi * gamma_r_pi - tau * pi * gamma_r_pi_tau, 2) / (1 - Math.pow(pi, 2) * gamma_r_pi_pi));\r\n    var SpeedOfSound = Math.sqrt(\r\n      (R * temperature * (1 + 2 * pi * gamma_r_pi + Math.pow(pi * gamma_r_pi, 2))) /\r\n        (1 -\r\n          Math.pow(pi, 2) * gamma_r_pi_pi +\r\n          Math.pow(1 + pi * gamma_r_pi - tau * pi * gamma_r_pi_tau, 2) /\r\n            (Math.pow(tau, 2) * (gamma_0_tau_tau + gamma_r_tau_tau)))\r\n    );\r\n\r\n    // Equations below calculate the various properties partial derivatives.  The derivate functions below the first group use IAPWS AN3-07 (2018) Equation 5\r\n    var alpha_v = (1 / temperature) * ((1 + pi * gamma_r_pi - tau * pi * gamma_r_pi_tau) / (1 + pi * gamma_r_pi)); // IAPWS AN3-07 (2018) Eq 7\r\n    var kappa_T = ((1 / pressure) * (1 - Math.pow(pi, 2) * gamma_r_pi_pi)) / (1 + pi * gamma_r_pi); // IAPWS AN3-07 (2018) Eq 7\r\n    var dPdT_P = 0; // IAPWS AN3-07 (2018) Table 2\r\n    var dTdT_P = 1; // IAPWS AN3-07 (2018) Table 2\r\n    var dVdT_P = Volume * alpha_v; // Array Index 56: IAPWS AN3-07 (2018) Table 2\r\n    var dUdT_P = IsobaricHeat - pressure * 1000 * Volume * alpha_v; // Array Index 76: IAPWS AN3-07 (2018) Table 2\r\n    var dHdT_P = IsobaricHeat; // Array Index 96: IAPWS AN3-07 (2018) Table 2\r\n    var dSdT_P = IsobaricHeat / temperature; // Array Index 116: IAPWS AN3-07 (2018) Table 2\r\n    var dPdP_T = 1; // IAPWS AN3-07 (2018) Table 2\r\n    var dTdP_T = 0; // IAPWS AN3-07 (2018) Table 2\r\n    var dVdP_T = -Volume * kappa_T; // Array Index 52: IAPWS AN3-07 (2018) Table 2\r\n    var dUdP_T = 1000 * Volume * (pressure * kappa_T - temperature * alpha_v); // Array Index 72: IAPWS AN3-07 (2018) Table 2\r\n    var dHdP_T = 1000 * Volume * (1 - temperature * alpha_v); // Array Index 92: IAPWS AN3-07 (2018) Table 2\r\n    var dSdP_T = -1000 * Volume * alpha_v; // Array Index 112: IAPWS AN3-07 (2018) Table 2\r\n\r\n    // The following five groups provide the partial derivatives of pressure.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n    var dPdT_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 12\r\n    var dPdT_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 13\r\n    var dPdT_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 14\r\n    var dPdT_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 15\r\n\r\n    var dPdV_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 16\r\n    var dPdV_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 17\r\n    var dPdV_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 18\r\n    var dPdV_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 19\r\n\r\n    var dPdU_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 20\r\n    var dPdU_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 21\r\n    var dPdU_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 22\r\n    var dPdU_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 23\r\n\r\n    var dPdH_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 24\r\n    var dPdH_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 25\r\n    var dPdH_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 26\r\n    var dPdH_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 27\r\n\r\n    var dPdS_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 28\r\n    var dPdS_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 29\r\n    var dPdS_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 30\r\n    var dPdS_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 31\r\n\r\n    // The following five groups provide the partial derivatives of temperature.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n    var dTdP_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 32\r\n    var dTdP_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 33\r\n    var dTdP_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 34\r\n    var dTdP_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 35\r\n\r\n    var dTdV_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 36\r\n    var dTdV_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 37\r\n    var dTdV_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 38\r\n    var dTdV_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 39\r\n\r\n    var dTdU_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 40\r\n    var dTdU_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 41\r\n    var dTdU_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 42\r\n    var dTdU_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 43\r\n\r\n    var dTdH_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 44\r\n    var dTdH_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 45\r\n    var dTdH_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 46\r\n    var dTdH_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 47\r\n\r\n    var dTdS_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 48\r\n    var dTdS_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 49\r\n    var dTdS_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 50\r\n    var dTdS_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 51\r\n\r\n    // The following five groups provide the partial derivatives of volume.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n    var dVdP_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 53\r\n    var dVdP_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 54\r\n    var dVdP_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 55\r\n\r\n    var dVdT_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 57\r\n    var dVdT_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 58\r\n    var dVdT_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 59\r\n\r\n    var dVdU_P = (dVdP_T * dPdT_P - dVdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 60\r\n    var dVdU_T = (dVdP_T * dTdT_P - dVdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 61\r\n    var dVdU_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 62\r\n    var dVdU_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 63\r\n\r\n    var dVdH_P = (dVdP_T * dPdT_P - dVdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 64\r\n    var dVdH_T = (dVdP_T * dTdT_P - dVdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 65\r\n    var dVdH_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 66\r\n    var dVdH_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 67\r\n\r\n    var dVdS_P = (dVdP_T * dPdT_P - dVdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 68\r\n    var dVdS_T = (dVdP_T * dTdT_P - dVdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 69\r\n    var dVdS_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 70\r\n    var dVdS_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 71\r\n\r\n    // The following five groups provide the partial derivatives of internal energy.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n    var dUdP_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 73\r\n    var dUdP_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 74\r\n    var dUdP_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 75\r\n\r\n    var dUdT_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 77\r\n    var dUdT_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 78\r\n    var dUdT_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 79\r\n\r\n    var dUdV_P = (dUdP_T * dPdT_P - dUdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 80\r\n    var dUdV_T = (dUdP_T * dTdT_P - dUdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 81\r\n    var dUdV_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 82\r\n    var dUdV_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 83\r\n\r\n    var dUdH_P = (dUdP_T * dPdT_P - dUdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 84\r\n    var dUdH_T = (dUdP_T * dTdT_P - dUdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 85\r\n    var dUdH_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 86\r\n    var dUdH_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 87\r\n\r\n    var dUdS_P = (dUdP_T * dPdT_P - dUdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 88\r\n    var dUdS_T = (dUdP_T * dTdT_P - dUdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 89\r\n    var dUdS_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 90\r\n    var dUdS_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 91\r\n\r\n    // The following five groups provide the partial derivatives of enthalpy.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n    var dHdP_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 93\r\n    var dHdP_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 94\r\n    var dHdP_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 95\r\n\r\n    var dHdT_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 97\r\n    var dHdT_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 98\r\n    var dHdT_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 99\r\n\r\n    var dHdV_P = (dHdP_T * dPdT_P - dHdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 100\r\n    var dHdV_T = (dHdP_T * dTdT_P - dHdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 101\r\n    var dHdV_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 102\r\n    var dHdV_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 103\r\n\r\n    var dHdU_P = (dHdP_T * dPdT_P - dHdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 104\r\n    var dHdU_T = (dHdP_T * dTdT_P - dHdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 105\r\n    var dHdU_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 106\r\n    var dHdU_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 107\r\n\r\n    var dHdS_P = (dHdP_T * dPdT_P - dHdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 108\r\n    var dHdS_T = (dHdP_T * dTdT_P - dHdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 109\r\n    var dHdS_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 110\r\n    var dHdS_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 111\r\n\r\n    // The following five groups provide the partial derivatives of entropy.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n    var dSdP_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 113\r\n    var dSdP_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 114\r\n    var dSdP_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 115\r\n\r\n    var dSdT_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 117\r\n    var dSdT_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 118\r\n    var dSdT_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 119\r\n\r\n    var dSdV_P = (dSdP_T * dPdT_P - dSdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 120\r\n    var dSdV_T = (dSdP_T * dTdT_P - dSdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 121\r\n    var dSdV_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 122\r\n    var dSdV_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 123\r\n\r\n    var dSdU_P = (dSdP_T * dPdT_P - dSdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 124\r\n    var dSdU_T = (dSdP_T * dTdT_P - dSdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 125\r\n    var dSdU_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 126\r\n    var dSdU_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 127\r\n\r\n    var dSdH_P = (dSdP_T * dPdT_P - dSdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 128\r\n    var dSdH_T = (dSdP_T * dTdT_P - dSdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 129\r\n    var dSdH_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 130\r\n    var dSdH_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 131\r\n\r\n    // [(0) Pressure, (1) Temperature, (2) Quality, (3) Enthalpy, (4) Entropy,\r\n    //  (5) InternalEnergy, (6) Volume, (7) IsobaricHeat, (8) IsochoricHeat, (9) SpeedOfSound]\r\n    return [\r\n      pressure, // 0\r\n      temperature, // 1\r\n      0.0, // 2\r\n      Enthalpy, // 3\r\n      Entropy, // 4\r\n      InternalEnergy, // 5\r\n      Volume, // 6\r\n      IsobaricHeat, // 7\r\n      IsochoricHeat, // 8\r\n      SpeedOfSound, // 9\r\n      0, // 10\r\n      0, // 11\r\n      dPdT_V, // 12\r\n      dPdT_U, // 13\r\n      dPdT_H, // 14\r\n      dPdT_S, // 15\r\n      dPdV_T, // 16\r\n      dPdV_U, // 17\r\n      dPdV_H, // 18\r\n      dPdV_S, // 19\r\n      dPdU_T, // 20\r\n      dPdU_V, // 21\r\n      dPdU_H, // 22\r\n      dPdU_S, // 23\r\n      dPdH_T, // 24\r\n      dPdH_V, // 25\r\n      dPdH_U, // 26\r\n      dPdH_S, // 27\r\n      dPdS_T, // 28\r\n      dPdS_V, // 29\r\n      dPdS_U, // 30\r\n      dPdS_H, // 31\r\n      dTdP_V, // 32\r\n      dTdP_U, // 33\r\n      dTdP_H, // 34\r\n      dTdP_S, // 35\r\n      dTdV_P, // 36\r\n      dTdV_U, // 37\r\n      dTdV_H, // 38\r\n      dTdV_S, // 39\r\n      dTdU_P, // 40\r\n      dTdU_V, // 41\r\n      dTdU_H, // 42\r\n      dTdU_S, // 43\r\n      dTdH_P, // 44\r\n      dTdH_V, // 45\r\n      dTdH_U, // 46\r\n      dTdH_S, // 47\r\n      dTdS_P, // 48\r\n      dTdS_V, // 49\r\n      dTdS_U, // 50\r\n      dTdS_H, // 51\r\n      dVdP_T, // 52\r\n      dVdP_U, // 53\r\n      dVdP_H, // 54\r\n      dVdP_S, // 55\r\n      dVdT_P, // 56\r\n      dVdT_U, // 57\r\n      dVdT_H, // 58\r\n      dVdT_S, // 59\r\n      dVdU_P, // 60\r\n      dVdU_T, // 61\r\n      dVdU_H, // 62\r\n      dVdU_S, // 63\r\n      dVdH_P, // 64\r\n      dVdH_T, // 65\r\n      dVdH_U, // 66\r\n      dVdH_S, // 67\r\n      dVdS_P, // 68\r\n      dVdS_T, // 69\r\n      dVdS_U, // 70\r\n      dVdS_H, // 71\r\n      dUdP_T, // 72\r\n      dUdP_V, // 73\r\n      dUdP_H, // 74\r\n      dUdP_S, // 75\r\n      dUdT_P, // 76\r\n      dUdT_V, // 77\r\n      dUdT_H, // 78\r\n      dUdT_S, // 79\r\n      dUdV_P, // 80\r\n      dUdV_T, // 81\r\n      dUdV_H, // 82\r\n      dUdV_S, // 83\r\n      dUdH_P, // 84\r\n      dUdH_T, // 85\r\n      dUdH_V, // 86\r\n      dUdH_S, // 87\r\n      dUdS_P, // 88\r\n      dUdS_T, // 89\r\n      dUdS_V, // 90\r\n      dUdS_H, // 91\r\n      dHdP_T, // 92\r\n      dHdP_V, // 93\r\n      dHdP_U, // 94\r\n      dHdP_S, // 95\r\n      dHdT_P, // 96\r\n      dHdT_V, // 97\r\n      dHdT_U, // 98\r\n      dHdT_S, // 99\r\n      dHdV_P, // 100\r\n      dHdV_T, // 101\r\n      dHdV_U, // 102\r\n      dHdV_S, // 103\r\n      dHdU_P, // 104\r\n      dHdU_T, // 105\r\n      dHdU_V, // 106\r\n      dHdU_S, // 107\r\n      dHdS_P, // 108\r\n      dHdS_T, // 109\r\n      dHdS_V, // 110\r\n      dHdS_U, // 111\r\n      dSdP_T, // 112\r\n      dSdP_V, // 113\r\n      dSdP_U, // 114\r\n      dSdP_H, // 115\r\n      dSdT_P, // 116\r\n      dSdT_V, // 117\r\n      dSdT_U, // 118\r\n      dSdT_H, // 119\r\n      dSdV_P, // 120\r\n      dSdV_T, // 121\r\n      dSdV_U, // 122\r\n      dSdV_H, // 123\r\n      dSdU_P, // 124\r\n      dSdU_T, // 125\r\n      dSdU_V, // 126\r\n      dSdU_H, // 127\r\n      dSdH_P, // 128\r\n      dSdH_T, // 129\r\n      dSdH_V, // 130\r\n      dSdH_U, // 131\r\n    ];\r\n  }\r\n\r\n  throw Errors.TemperatureOrPressureNotInRegion2;\r\n}\r\n\r\n//\r\n// Backward equations\r\n//\r\n\r\n// Defines the boundary between subregion 2b and 2c for using the backward equations : IF97 Equ 20\r\nexport function B2bc_PfH(enthalpy) {\r\n  // returns a pressure given an enthalpy\r\n  var pressure =\r\n    Constants.reg2_B2bc_n[0] + Constants.reg2_B2bc_n[1] * enthalpy + Constants.reg2_B2bc_n[2] * Math.pow(enthalpy, 2);\r\n  return pressure;\r\n}\r\n\r\nexport function B2bc_HfP(pressure) {\r\n  // returns a enthalpy given an pressure : IF97 Equ 21\r\n  var enthalpy = Constants.reg2_B2bc_n[3] + Math.sqrt((pressure - Constants.reg2_B2bc_n[4]) / Constants.reg2_B2bc_n[2]);\r\n  return enthalpy;\r\n}\r\n\r\n// Backward equation T(p,h) for subregion 2a : IF97 Equ 22\r\nexport function T2a_fPH(pressure, enthalpy) {\r\n  var h_Reducing = 2000; // kJ/kg\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg2a_Tph_I.length; i++) {\r\n    theta +=\r\n      Constants.reg2a_Tph_n[i] *\r\n      Math.pow(pressure, Constants.reg2a_Tph_I[i]) *\r\n      Math.pow(enthalpy / h_Reducing - 2.1, Constants.reg2a_Tph_J[i]);\r\n  }\r\n  return theta;\r\n}\r\n\r\n// Backward equation T(p,h) for subregion 2b : IF97 Equ 23\r\nexport function T2b_fPH(pressure, enthalpy) {\r\n  var h_Reducing = 2000; // kJ/kg\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg2b_Tph_I.length; i++) {\r\n    theta +=\r\n      Constants.reg2b_Tph_n[i] *\r\n      Math.pow(pressure - 2, Constants.reg2b_Tph_I[i]) *\r\n      Math.pow(enthalpy / h_Reducing - 2.6, Constants.reg2b_Tph_J[i]);\r\n  }\r\n  return theta;\r\n}\r\n\r\n// Backward equation T(p,h) for subregion 2c : IF97 Equ 24\r\nexport function T2c_fPH(pressure, enthalpy) {\r\n  var h_Reducing = 2000; // kJ/kg\r\n  var eta = enthalpy / h_Reducing;\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg2c_Tph_I.length; i++) {\r\n    theta +=\r\n      Constants.reg2c_Tph_n[i] *\r\n      Math.pow(pressure + 25, Constants.reg2c_Tph_I[i]) *\r\n      Math.pow(eta - 1.8, Constants.reg2c_Tph_J[i]);\r\n  }\r\n  return theta;\r\n}\r\n\r\n// Backward equation T(p,s) for subregion 2a : IF97 Equ 25\r\nexport function T2a_fPS(pressure, entropy) {\r\n  var s_Reducing = 2; // kJ/kg-K\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg2a_Tps_I.length; i++) {\r\n    theta +=\r\n      Constants.reg2a_Tps_n[i] *\r\n      Math.pow(pressure, Constants.reg2a_Tps_I[i]) *\r\n      Math.pow(entropy / s_Reducing - 2, Constants.reg2a_Tps_J[i]);\r\n  }\r\n  return theta;\r\n}\r\n\r\n// Backward equation T(p,s) for subregion 2b : IF97 Equ 26\r\nexport function T2b_fPS(pressure, entropy) {\r\n  var s_Reducing = 0.7853; // kJ/kg-K\r\n  var sigma = entropy / s_Reducing;\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg2b_Tps_I.length; i++) {\r\n    theta +=\r\n      Constants.reg2b_Tps_n[i] *\r\n      Math.pow(pressure, Constants.reg2b_Tps_I[i]) *\r\n      Math.pow(10 - sigma, Constants.reg2b_Tps_J[i]);\r\n  }\r\n  return theta;\r\n}\r\n\r\n// Backward equation T(p,s) for subregion 2c : IF97 Equ 27\r\nexport function T2c_fPS(pressure, entropy) {\r\n  var s_Reducing = 2.9251; // kJ/kg-K\r\n  var sigma = entropy / s_Reducing;\r\n\r\n  var theta = 0;\r\n  for (let i = 0; i < Constants.reg2c_Tps_I.length; i++) {\r\n    theta +=\r\n      Constants.reg2c_Tps_n[i] *\r\n      Math.pow(pressure, Constants.reg2c_Tps_I[i]) *\r\n      Math.pow(2 - sigma, Constants.reg2c_Tps_J[i]);\r\n  }\r\n  return theta;\r\n}\r\n\r\n// Backward equation P(h,s) for subregion 2a : SR2 Equ 3\r\nexport function P2a_fHS(enthalpy, entropy) {\r\n  var p_Reducing = Constants.p2a2b_boundary; // Mpa\r\n  var h_Reducing = 4200; // kJ/kg\r\n  var s_Reducing = 12; // kJ/kg-K\r\n\r\n  var eta = enthalpy / h_Reducing;\r\n  var sigma = entropy / s_Reducing;\r\n\r\n  var pi = 0;\r\n  for (let i = 0; i < Constants.reg2a_pHS_I.length; i++) {\r\n    pi +=\r\n      Constants.reg2a_pHS_n[i] *\r\n      Math.pow(eta - 0.5, Constants.reg2a_pHS_I[i]) *\r\n      Math.pow(sigma - 1.2, Constants.reg2a_pHS_J[i]);\r\n  }\r\n  return Math.pow(pi, 4) * p_Reducing;\r\n}\r\n\r\n// Backward equation P(h,s) for subregion 2b : SR2 Equ 4\r\nexport function P2b_fHS(enthalpy, entropy) {\r\n  var p_Reducing = Constants.pmax; // Mpa\r\n  var h_Reducing = 4100; // kJ/kg\r\n  var s_Reducing = 7.9; // kJ/kg-K\r\n\r\n  var eta = enthalpy / h_Reducing;\r\n  var sigma = entropy / s_Reducing;\r\n\r\n  var pi = 0;\r\n  for (let i = 0; i < Constants.reg2b_pHS_I.length; i++) {\r\n    pi +=\r\n      Constants.reg2b_pHS_n[i] *\r\n      Math.pow(eta - 0.6, Constants.reg2b_pHS_I[i]) *\r\n      Math.pow(sigma - 1.01, Constants.reg2b_pHS_J[i]);\r\n  }\r\n  return Math.pow(pi, 4) * p_Reducing;\r\n}\r\n\r\n// Backward equation P(h,s) for subregion 2c : SR2 Equ 5\r\nexport function P2c_fHS(enthalpy, entropy) {\r\n  var p_Reducing = 100; // Mpa\r\n  var h_Reducing = 3500; // kJ/kg\r\n  var s_Reducing = 5.9; // kJ/kg-K\r\n\r\n  var eta = enthalpy / h_Reducing;\r\n  var sigma = entropy / s_Reducing;\r\n\r\n  var pi = 0;\r\n  for (let i = 0; i < Constants.reg2c_pHS_I.length; i++) {\r\n    pi +=\r\n      Constants.reg2c_pHS_n[i] *\r\n      Math.pow(eta - 0.7, Constants.reg2c_pHS_I[i]) *\r\n      Math.pow(sigma - 1.1, Constants.reg2c_pHS_J[i]);\r\n  }\r\n  return Math.pow(pi, 4) * p_Reducing;\r\n}\r\n\r\n// SR2 Table 5 Equ 2: Boundary equation for h2ab(s) boundary between subregions 2a and 2b\r\n// Used for back calculations of properties f(h,s)\r\nexport function H2ab(entropy) {\r\n  var eta =\r\n    Constants.h2ab_n[0] +\r\n    Constants.h2ab_n[1] * entropy +\r\n    Constants.h2ab_n[2] * Math.pow(entropy, 2) +\r\n    Constants.h2ab_n[3] * Math.pow(entropy, 3);\r\n  return eta;\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\n\r\nconst R = Constants.R_H2O * 1000; // convert the kJ in R to Joules\r\n\r\nexport function Properties_fPT(pressure, temperature) {\r\n  var p = pressure * 1e6; // convert MPa to pascals\r\n\r\n  var p_Reducing = 1; // MPa\r\n  var T_reducing = 1000; // K\r\n  var pi = pressure / p_Reducing; // Reduced Pressure\r\n  var tau = T_reducing / temperature; // Reduced Temperature\r\n\r\n  var gamma_0 = Math.log(pi); // Gibbs free energy\r\n  var gamma_0_pi = 1 / pi;\r\n  var gamma_0_tau = 0;\r\n  //var gamma_0_pi_pi = -1 / Math.pow(pi, 2);\r\n  var gamma_0_tau_tau = 0;\r\n  //var gamma_0_pi_tau = 0;  // never used\r\n\r\n  var gamma_r = 0; // Gibbs free energy\r\n  var gamma_r_pi = 0;\r\n  var gamma_r_tau = 0;\r\n  var gamma_r_pi_pi = 0;\r\n  var gamma_r_tau_tau = 0;\r\n  var gamma_r_pi_tau = 0;\r\n\r\n  for (let i = 0; i < Constants.reg5_Gibb_Ideal_J.length; i++) {\r\n    gamma_0 += Constants.reg5_Gibb_Ideal_n[i] * Math.pow(tau, Constants.reg5_Gibb_Ideal_J[i]);\r\n    gamma_0_tau +=\r\n      Constants.reg5_Gibb_Ideal_n[i] *\r\n      Constants.reg5_Gibb_Ideal_J[i] *\r\n      Math.pow(tau, Constants.reg5_Gibb_Ideal_J[i] - 1);\r\n    gamma_0_tau_tau +=\r\n      Constants.reg5_Gibb_Ideal_n[i] *\r\n      Constants.reg5_Gibb_Ideal_J[i] *\r\n      (Constants.reg5_Gibb_Ideal_J[i] - 1) *\r\n      Math.pow(tau, Constants.reg5_Gibb_Ideal_J[i] - 2);\r\n  }\r\n\r\n  for (let i = 0; i < Constants.reg5_Gibb_Res_I.length; i++) {\r\n    gamma_r +=\r\n      Constants.reg5_Gibb_Res_n[i] *\r\n      Math.pow(pi, Constants.reg5_Gibb_Res_I[i]) *\r\n      Math.pow(tau, Constants.reg5_Gibb_Res_J[i]);\r\n    gamma_r_pi +=\r\n      Constants.reg5_Gibb_Res_n[i] *\r\n      Constants.reg5_Gibb_Res_I[i] *\r\n      Math.pow(pi, Constants.reg5_Gibb_Res_I[i] - 1) *\r\n      Math.pow(tau, Constants.reg5_Gibb_Res_J[i]);\r\n    gamma_r_tau +=\r\n      Constants.reg5_Gibb_Res_n[i] *\r\n      Math.pow(pi, Constants.reg5_Gibb_Res_I[i]) *\r\n      Constants.reg5_Gibb_Res_J[i] *\r\n      Math.pow(tau, Constants.reg5_Gibb_Res_J[i] - 1);\r\n    gamma_r_pi_pi +=\r\n      Constants.reg5_Gibb_Res_n[i] *\r\n      Constants.reg5_Gibb_Res_I[i] *\r\n      (Constants.reg5_Gibb_Res_I[i] - 1) *\r\n      Math.pow(pi, Constants.reg5_Gibb_Res_I[i] - 2) *\r\n      Math.pow(tau, Constants.reg5_Gibb_Res_J[i]);\r\n    gamma_r_tau_tau +=\r\n      Constants.reg5_Gibb_Res_n[i] *\r\n      Math.pow(pi, Constants.reg5_Gibb_Res_I[i]) *\r\n      Constants.reg5_Gibb_Res_J[i] *\r\n      (Constants.reg5_Gibb_Res_J[i] - 1) *\r\n      Math.pow(tau, Constants.reg5_Gibb_Res_J[i] - 2);\r\n    gamma_r_pi_tau +=\r\n      Constants.reg5_Gibb_Res_n[i] *\r\n      Constants.reg5_Gibb_Res_I[i] *\r\n      Math.pow(pi, Constants.reg5_Gibb_Res_I[i] - 1) *\r\n      Constants.reg5_Gibb_Res_J[i] *\r\n      Math.pow(tau, Constants.reg5_Gibb_Res_J[i] - 1);\r\n  }\r\n\r\n  const Volume = (R * temperature * pi * (gamma_0_pi + gamma_r_pi)) / p;\r\n  const InternalEnergy =\r\n    (R / 1000) * temperature * (tau * (gamma_0_tau + gamma_r_tau) - pi * (gamma_0_pi + gamma_r_pi));\r\n  const Entropy = (R / 1000) * (tau * (gamma_0_tau + gamma_r_tau) - (gamma_0 + gamma_r));\r\n  const Enthalpy = (R / 1000) * temperature * tau * (gamma_0_tau + gamma_r_tau);\r\n  const IsobaricHeat = -(R / 1000) * Math.pow(tau, 2) * (gamma_0_tau_tau + gamma_r_tau_tau);\r\n  const IsochoricHeat =\r\n    (R / 1000) *\r\n    (-Math.pow(tau, 2) * (gamma_0_tau_tau + gamma_r_tau_tau) -\r\n      Math.pow(1 + pi * gamma_r_pi - tau * pi * gamma_r_pi_tau, 2) / (1 - Math.pow(pi, 2) * gamma_r_pi_pi));\r\n  const SpeedOfSound = Math.sqrt(\r\n    (R * temperature * (1 + 2 * pi * gamma_r_pi + Math.pow(pi * gamma_r_pi, 2))) /\r\n      (1 -\r\n        Math.pow(pi, 2) * gamma_r_pi_pi +\r\n        Math.pow(1 + pi * gamma_r_pi - tau * pi * gamma_r_pi_tau, 2) /\r\n          (Math.pow(tau, 2) * (gamma_0_tau_tau + gamma_r_tau_tau)))\r\n  );\r\n\r\n  // Equations below calculate the various properties partial derivatives.  The derivate functions below the first group use IAPWS AN3-07 (2018) Equation 1\r\n  const alpha_v = (1 / temperature) * ((1 + pi * gamma_r_pi - tau * pi * gamma_r_pi_tau) / (1 + pi * gamma_r_pi)); // IAPWS AN3-07 (2018) Eq 7\r\n  const kappa_T = ((1 / pressure) * (1 - Math.pow(pi, 2) * gamma_r_pi_pi)) / (1 + pi * gamma_r_pi); // IAPWS AN3-07 (2018) Eq 7\r\n  const dPdT_P = 0; // IAPWS AN3-07 (2018) Table 2\r\n  const dTdT_P = 1; // IAPWS AN3-07 (2018) Table 2\r\n  const dVdT_P = Volume * alpha_v; // Array Index 56: IAPWS AN3-07 (2018) Table 2\r\n  const dUdT_P = IsobaricHeat - pressure * 1000 * Volume * alpha_v; // Array Index 76: IAPWS AN3-07 (2018) Table 2\r\n  const dHdT_P = IsobaricHeat; // Array Index 96: IAPWS AN3-07 (2018) Table 2\r\n  const dSdT_P = IsobaricHeat / temperature; // Array Index 116: IAPWS AN3-07 (2018) Table 2\r\n  const dPdP_T = 1; // IAPWS AN3-07 (2018) Table 2\r\n  const dTdP_T = 0; // IAPWS AN3-07 (2018) Table 2\r\n  const dVdP_T = -Volume * kappa_T; // Array Index 52: IAPWS AN3-07 (2018) Table 2\r\n  const dUdP_T = 1000 * Volume * (pressure * kappa_T - temperature * alpha_v); // Array Index 72: IAPWS AN3-07 (2018) Table 2\r\n  const dHdP_T = 1000 * Volume * (1 - temperature * alpha_v); // Array Index 92: IAPWS AN3-07 (2018) Table 2\r\n  const dSdP_T = 1000 * (-Volume * alpha_v); // Array Index 112: IAPWS AN3-07 (2018) Table 2\r\n\r\n  // The following five groups provide the partial derivatives of pressure.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dPdT_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 12\r\n  const dPdT_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 13\r\n  const dPdT_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 14\r\n  const dPdT_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 15\r\n\r\n  const dPdV_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 16\r\n  const dPdV_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 17\r\n  const dPdV_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 18\r\n  const dPdV_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 19\r\n\r\n  const dPdU_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 20\r\n  const dPdU_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 21\r\n  const dPdU_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 22\r\n  const dPdU_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 23\r\n\r\n  const dPdH_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 24\r\n  const dPdH_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 25\r\n  const dPdH_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 26\r\n  const dPdH_S = (dPdP_T * dSdT_P - dPdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 27\r\n\r\n  const dPdS_T = (dPdP_T * dTdT_P - dPdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 28\r\n  const dPdS_V = (dPdP_T * dVdT_P - dPdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 29\r\n  const dPdS_U = (dPdP_T * dUdT_P - dPdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 30\r\n  const dPdS_H = (dPdP_T * dHdT_P - dPdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 31\r\n\r\n  // The following five groups provide the partial derivatives of temperature.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dTdP_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 32\r\n  const dTdP_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 33\r\n  const dTdP_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 34\r\n  const dTdP_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 35\r\n\r\n  const dTdV_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 36\r\n  const dTdV_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 37\r\n  const dTdV_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 38\r\n  const dTdV_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 39\r\n\r\n  const dTdU_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 40\r\n  const dTdU_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 41\r\n  const dTdU_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 42\r\n  const dTdU_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 43\r\n\r\n  const dTdH_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 44\r\n  const dTdH_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 45\r\n  const dTdH_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 46\r\n  const dTdH_S = (dTdP_T * dSdT_P - dTdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 47\r\n\r\n  const dTdS_P = (dTdP_T * dPdT_P - dTdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 48\r\n  const dTdS_V = (dTdP_T * dVdT_P - dTdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 49\r\n  const dTdS_U = (dTdP_T * dUdT_P - dTdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 50\r\n  const dTdS_H = (dTdP_T * dHdT_P - dTdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 51\r\n\r\n  // The following five groups provide the partial derivatives of volume.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dVdP_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 53\r\n  const dVdP_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 54\r\n  const dVdP_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 55\r\n\r\n  const dVdT_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 57\r\n  const dVdT_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 58\r\n  const dVdT_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 59\r\n\r\n  const dVdU_P = (dVdP_T * dPdT_P - dVdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 60\r\n  const dVdU_T = (dVdP_T * dTdT_P - dVdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 61\r\n  const dVdU_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 62\r\n  const dVdU_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 63\r\n\r\n  const dVdH_P = (dVdP_T * dPdT_P - dVdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 64\r\n  const dVdH_T = (dVdP_T * dTdT_P - dVdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 65\r\n  const dVdH_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 66\r\n  const dVdH_S = (dVdP_T * dSdT_P - dVdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 67\r\n\r\n  const dVdS_P = (dVdP_T * dPdT_P - dVdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 68\r\n  const dVdS_T = (dVdP_T * dTdT_P - dVdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 69\r\n  const dVdS_U = (dVdP_T * dUdT_P - dVdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 70\r\n  const dVdS_H = (dVdP_T * dHdT_P - dVdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 71\r\n\r\n  // The following five groups provide the partial derivatives of internal energy.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dUdP_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 73\r\n  const dUdP_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 74\r\n  const dUdP_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 75\r\n\r\n  const dUdT_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 77\r\n  const dUdT_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 78\r\n  const dUdT_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 79\r\n\r\n  const dUdV_P = (dUdP_T * dPdT_P - dUdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 80\r\n  const dUdV_T = (dUdP_T * dTdT_P - dUdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 81\r\n  const dUdV_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 82\r\n  const dUdV_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 83\r\n\r\n  const dUdH_P = (dUdP_T * dPdT_P - dUdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 84\r\n  const dUdH_T = (dUdP_T * dTdT_P - dUdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 85\r\n  const dUdH_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 86\r\n  const dUdH_S = (dUdP_T * dSdT_P - dUdT_P * dSdP_T) / (dHdP_T * dSdT_P - dHdT_P * dSdP_T); // Array Index 87\r\n\r\n  const dUdS_P = (dUdP_T * dPdT_P - dUdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 88\r\n  const dUdS_T = (dUdP_T * dTdT_P - dUdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 89\r\n  const dUdS_V = (dUdP_T * dVdT_P - dUdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 90\r\n  const dUdS_H = (dUdP_T * dHdT_P - dUdT_P * dHdP_T) / (dSdP_T * dHdT_P - dSdT_P * dHdP_T); // Array Index 91\r\n\r\n  // The following five groups provide the partial derivatives of enthalpy.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dHdP_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 93\r\n  const dHdP_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 94\r\n  const dHdP_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dPdP_T * dSdT_P - dPdT_P * dSdP_T); // Array Index 95\r\n\r\n  const dHdT_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 97\r\n  const dHdT_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 98\r\n  const dHdT_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dTdP_T * dSdT_P - dTdT_P * dSdP_T); // Array Index 99\r\n\r\n  const dHdV_P = (dHdP_T * dPdT_P - dHdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 100\r\n  const dHdV_T = (dHdP_T * dTdT_P - dHdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 101\r\n  const dHdV_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 102\r\n  const dHdV_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dVdP_T * dSdT_P - dVdT_P * dSdP_T); // Array Index 103\r\n\r\n  const dHdU_P = (dHdP_T * dPdT_P - dHdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 104\r\n  const dHdU_T = (dHdP_T * dTdT_P - dHdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 105\r\n  const dHdU_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 106\r\n  const dHdU_S = (dHdP_T * dSdT_P - dHdT_P * dSdP_T) / (dUdP_T * dSdT_P - dUdT_P * dSdP_T); // Array Index 107\r\n\r\n  const dHdS_P = (dHdP_T * dPdT_P - dHdT_P * dPdP_T) / (dSdP_T * dPdT_P - dSdT_P * dPdP_T); // Array Index 108\r\n  const dHdS_T = (dHdP_T * dTdT_P - dHdT_P * dTdP_T) / (dSdP_T * dTdT_P - dSdT_P * dTdP_T); // Array Index 109\r\n  const dHdS_V = (dHdP_T * dVdT_P - dHdT_P * dVdP_T) / (dSdP_T * dVdT_P - dSdT_P * dVdP_T); // Array Index 110\r\n  const dHdS_U = (dHdP_T * dUdT_P - dHdT_P * dUdP_T) / (dSdP_T * dUdT_P - dSdT_P * dUdP_T); // Array Index 111\r\n\r\n  // The following five groups provide the partial derivatives of entropy.  Refer to IAPWS AN3-07 (2018) Equation 5\r\n  const dSdP_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dPdP_T * dVdT_P - dPdT_P * dVdP_T); // Array Index 113\r\n  const dSdP_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dPdP_T * dUdT_P - dPdT_P * dUdP_T); // Array Index 114\r\n  const dSdP_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dPdP_T * dHdT_P - dPdT_P * dHdP_T); // Array Index 115\r\n\r\n  const dSdT_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dTdP_T * dVdT_P - dTdT_P * dVdP_T); // Array Index 117\r\n  const dSdT_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dTdP_T * dUdT_P - dTdT_P * dUdP_T); // Array Index 118\r\n  const dSdT_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dTdP_T * dHdT_P - dTdT_P * dHdP_T); // Array Index 119\r\n\r\n  const dSdV_P = (dSdP_T * dPdT_P - dSdT_P * dPdP_T) / (dVdP_T * dPdT_P - dVdT_P * dPdP_T); // Array Index 120\r\n  const dSdV_T = (dSdP_T * dTdT_P - dSdT_P * dTdP_T) / (dVdP_T * dTdT_P - dVdT_P * dTdP_T); // Array Index 121\r\n  const dSdV_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dVdP_T * dUdT_P - dVdT_P * dUdP_T); // Array Index 122\r\n  const dSdV_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dVdP_T * dHdT_P - dVdT_P * dHdP_T); // Array Index 123\r\n\r\n  const dSdU_P = (dSdP_T * dPdT_P - dSdT_P * dPdP_T) / (dUdP_T * dPdT_P - dUdT_P * dPdP_T); // Array Index 124\r\n  const dSdU_T = (dSdP_T * dTdT_P - dSdT_P * dTdP_T) / (dUdP_T * dTdT_P - dUdT_P * dTdP_T); // Array Index 125\r\n  const dSdU_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dUdP_T * dVdT_P - dUdT_P * dVdP_T); // Array Index 126\r\n  const dSdU_H = (dSdP_T * dHdT_P - dSdT_P * dHdP_T) / (dUdP_T * dHdT_P - dUdT_P * dHdP_T); // Array Index 127\r\n\r\n  const dSdH_P = (dSdP_T * dPdT_P - dSdT_P * dPdP_T) / (dHdP_T * dPdT_P - dHdT_P * dPdP_T); // Array Index 128\r\n  const dSdH_T = (dSdP_T * dTdT_P - dSdT_P * dTdP_T) / (dHdP_T * dTdT_P - dHdT_P * dTdP_T); // Array Index 129\r\n  const dSdH_V = (dSdP_T * dVdT_P - dSdT_P * dVdP_T) / (dHdP_T * dVdT_P - dHdT_P * dVdP_T); // Array Index 130\r\n  const dSdH_U = (dSdP_T * dUdT_P - dSdT_P * dUdP_T) / (dHdP_T * dUdT_P - dHdT_P * dUdP_T); // Array Index 131\r\n\r\n  return [\r\n    pressure, // 0\r\n    temperature, // 1\r\n    0.0, // 2\r\n    Enthalpy, // 3\r\n    Entropy, // 4\r\n    InternalEnergy, // 5\r\n    Volume, // 6\r\n    IsobaricHeat, // 7\r\n    IsochoricHeat, // 8\r\n    SpeedOfSound, // 9\r\n    0, // 10\r\n    0, // 11\r\n    dPdT_V, // 12\r\n    dPdT_U, // 13\r\n    dPdT_H, // 14\r\n    dPdT_S, // 15\r\n    dPdV_T, // 16\r\n    dPdV_U, // 17\r\n    dPdV_H, // 18\r\n    dPdV_S, // 19\r\n    dPdU_T, // 20\r\n    dPdU_V, // 21\r\n    dPdU_H, // 22\r\n    dPdU_S, // 23\r\n    dPdH_T, // 24\r\n    dPdH_V, // 25\r\n    dPdH_U, // 26\r\n    dPdH_S, // 27\r\n    dPdS_T, // 28\r\n    dPdS_V, // 29\r\n    dPdS_U, // 30\r\n    dPdS_H, // 31\r\n    dTdP_V, // 32\r\n    dTdP_U, // 33\r\n    dTdP_H, // 34\r\n    dTdP_S, // 35\r\n    dTdV_P, // 36\r\n    dTdV_U, // 37\r\n    dTdV_H, // 38\r\n    dTdV_S, // 39\r\n    dTdU_P, // 40\r\n    dTdU_V, // 41\r\n    dTdU_H, // 42\r\n    dTdU_S, // 43\r\n    dTdH_P, // 44\r\n    dTdH_V, // 45\r\n    dTdH_U, // 46\r\n    dTdH_S, // 47\r\n    dTdS_P, // 48\r\n    dTdS_V, // 49\r\n    dTdS_U, // 50\r\n    dTdS_H, // 51\r\n    dVdP_T, // 52\r\n    dVdP_U, // 53\r\n    dVdP_H, // 54\r\n    dVdP_S, // 55\r\n    dVdT_P, // 56\r\n    dVdT_U, // 57\r\n    dVdT_H, // 58\r\n    dVdT_S, // 59\r\n    dVdU_P, // 60\r\n    dVdU_T, // 61\r\n    dVdU_H, // 62\r\n    dVdU_S, // 63\r\n    dVdH_P, // 64\r\n    dVdH_T, // 65\r\n    dVdH_U, // 66\r\n    dVdH_S, // 67\r\n    dVdS_P, // 68\r\n    dVdS_T, // 69\r\n    dVdS_U, // 70\r\n    dVdS_H, // 71\r\n    dUdP_T, // 72\r\n    dUdP_V, // 73\r\n    dUdP_H, // 74\r\n    dUdP_S, // 75\r\n    dUdT_P, // 76\r\n    dUdT_V, // 77\r\n    dUdT_H, // 78\r\n    dUdT_S, // 79\r\n    dUdV_P, // 80\r\n    dUdV_T, // 81\r\n    dUdV_H, // 82\r\n    dUdV_S, // 83\r\n    dUdH_P, // 84\r\n    dUdH_T, // 85\r\n    dUdH_V, // 86\r\n    dUdH_S, // 87\r\n    dUdS_P, // 88\r\n    dUdS_T, // 89\r\n    dUdS_V, // 90\r\n    dUdS_H, // 91\r\n    dHdP_T, // 92\r\n    dHdP_V, // 93\r\n    dHdP_U, // 94\r\n    dHdP_S, // 95\r\n    dHdT_P, // 96\r\n    dHdT_V, // 97\r\n    dHdT_U, // 98\r\n    dHdT_S, // 99\r\n    dHdV_P, // 100\r\n    dHdV_T, // 101\r\n    dHdV_U, // 102\r\n    dHdV_S, // 103\r\n    dHdU_P, // 104\r\n    dHdU_T, // 105\r\n    dHdU_V, // 106\r\n    dHdU_S, // 107\r\n    dHdS_P, // 108\r\n    dHdS_T, // 109\r\n    dHdS_V, // 110\r\n    dHdS_U, // 111\r\n    dSdP_T, // 112\r\n    dSdP_V, // 113\r\n    dSdP_U, // 114\r\n    dSdP_H, // 115\r\n    dSdT_P, // 116\r\n    dSdT_V, // 117\r\n    dSdT_U, // 118\r\n    dSdT_H, // 119\r\n    dSdV_P, // 120\r\n    dSdV_T, // 121\r\n    dSdV_U, // 122\r\n    dSdV_H, // 123\r\n    dSdU_P, // 124\r\n    dSdU_T, // 125\r\n    dSdU_V, // 126\r\n    dSdU_H, // 127\r\n    dSdH_P, // 128\r\n    dSdH_T, // 129\r\n    dSdH_V, // 130\r\n    dSdH_U, // 131\r\n  ];\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as Units from \"./Units.js\";\r\nimport * as Region1Calculations from \"./Region1Calculations.js\";\r\nimport * as Region2Calculations from \"./Region2Calculations.js\";\r\nimport * as Region3Calculations from \"./Region3Calculations.js\";\r\nimport * as Region4Calculations from \"./Region4Calculations.js\";\r\nimport * as Region4SatPressure from \"./Region4SatPressure.js\";\r\nimport * as Region5Calculations from \"./Region5Calculations.js\";\r\nimport * as Boundary2_3Calculations from \"./Boundary2_3Calculations.js\";\r\n\r\n// Steam Properties as a function of Pressure and Temperature\r\n\r\nexport function SteamProperties(pressure, temperature, metastable) {\r\n  // Region 2 Calculations (metastable applicable in region 2 only)\r\n  if (\r\n    (temperature >= Constants.Tmin &&\r\n      temperature < Constants.Ttriple &&\r\n      pressure > 0 &&\r\n      pressure <= ((temperature - Constants.Tmin) / 0.1) * (Constants.pTriple - Constants.pT0) + Constants.pT0) ||\r\n    (temperature >= Constants.Ttriple &&\r\n      temperature <= Constants.T13_boundary &&\r\n      pressure > 0 &&\r\n      pressure <= Region4SatPressure.SatPressure(temperature) + 1e-11) ||\r\n    (temperature > Constants.T13_boundary &&\r\n      temperature <= Constants.T23_100MPa &&\r\n      pressure > 0 &&\r\n      pressure <= Boundary2_3Calculations.reg23BoundaryPfT(temperature)) ||\r\n    (temperature > Constants.T23_100MPa &&\r\n      temperature <= Constants.T25_boundary &&\r\n      pressure > 0 &&\r\n      pressure <= Constants.pmax) ||\r\n    (metastable &&\r\n      pressure >= Constants.pTriple &&\r\n      pressure <= 10 &&\r\n      temperature <= Region4Calculations.SatTemperature(pressure) &&\r\n      temperature >= // This section defines the metastable region f(p) bounding region 2.\r\n        209.07214 -\r\n          126.05204 * pressure +\r\n          42.768346 * Math.pow(pressure, 1.5) -\r\n          5.2499952 * Math.pow(pressure, 2) +\r\n          235.98605 * Math.sqrt(pressure))\r\n  ) {\r\n    // polynomial curvefit of 5% moisture metastable T(p).\r\n    let SteamPropertiesArray = Region2Calculations.Properties_fPT(pressure, temperature, metastable);\r\n    SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n    SteamPropertiesArray[Units.VectorParameters.Temperature] = temperature;\r\n    return SteamPropertiesArray;\r\n  }\r\n\r\n  // Region 1 Calculations\r\n  else if (\r\n    temperature >= Constants.Tmin &&\r\n    temperature <= Constants.T13_boundary &&\r\n    pressure >= Region4SatPressure.SatPressure(temperature) &&\r\n    pressure <= Constants.pmax\r\n  ) {\r\n    let SteamPropertiesArray = Region1Calculations.Properties_fPT(pressure, temperature);\r\n    SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n    SteamPropertiesArray[Units.VectorParameters.Temperature] = temperature;\r\n    return SteamPropertiesArray;\r\n  }\r\n\r\n  // Region 3 Calculations\r\n  else if (\r\n    temperature >= Constants.T13_boundary &&\r\n    temperature <= Constants.T23_100MPa &&\r\n    pressure >= Boundary2_3Calculations.reg23BoundaryPfT(temperature) &&\r\n    pressure <= 100\r\n  ) {\r\n    let SteamPropertiesArray = Region3Calculations.Properties_fPT(pressure, temperature);\r\n    SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n    SteamPropertiesArray[Units.VectorParameters.Temperature] = temperature;\r\n    return SteamPropertiesArray;\r\n  }\r\n\r\n  //Region 5 Calculations\r\n  else if (temperature >= 1073.15 && temperature <= 2273.15 && pressure >= 0 && pressure <= 50) {\r\n    let SteamPropertiesArray = Region5Calculations.Properties_fPT(pressure, temperature);\r\n    SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n    SteamPropertiesArray[Units.VectorParameters.Temperature] = temperature;\r\n    return SteamPropertiesArray;\r\n  } else {\r\n    throw Errors.PressureOrTempNotInRange;\r\n  }\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as Units from \"./Units.js\";\r\nimport * as Region1Calculations from \"./Region1Calculations.js\";\r\nimport * as Region2Calculations from \"./Region2Calculations.js\";\r\nimport * as Region3Calculations from \"./Region3Calculations.js\";\r\nimport * as Region4Calculations from \"./Region4Calculations.js\";\r\nimport * as Region4SatPressure from \"./Region4SatPressure.js\";\r\nimport * as Boundary2_3 from \"./Boundary2_3Calculations.js\";\r\n\r\nexport function SteamProperties(pressure, enthalpy) {\r\n  // SteamPropertiesArray = [(0) Pressure, (1) Temperature, (2) Quality, (3) Enthalpy, (4) Entropy,\r\n  //  (5) InternalEnergy, (6) Volume, (7) IsobaricHeat, (8) IsochoricHeat, (9) SpeedOfSound]\r\n\r\n  const enthalpyMin = Region1Calculations.Properties_fPT(Constants.pTriple, Constants.Ttriple)[\r\n    Units.VectorParameters.Enthalpy\r\n  ];\r\n  const enthalpyMax = Region2Calculations.Properties_fPT(Constants.pT0, Constants.T25_boundary)[\r\n    Units.VectorParameters.Enthalpy\r\n  ];\r\n  // Verify that the pressure/enthalpy is in regions 1, 2, 3, or 4.  Region 5 doesn't have backward equations\r\n  if (\r\n    pressure >= Constants.pTriple &&\r\n    pressure <= Constants.pmax &&\r\n    enthalpy >= enthalpyMin &&\r\n    enthalpy <= enthalpyMax\r\n  ) {\r\n    // If true, we are in the valid range\r\n    if (pressure <= Region4SatPressure.SatPressure(Constants.T13_boundary)) {\r\n      // Region 3 is not included in this group this\r\n      const enthalpyQ0 = Region1Calculations.Properties_fPT(pressure, Region4Calculations.SatTemperature(pressure))[\r\n        Units.VectorParameters.Enthalpy\r\n      ];\r\n      const enthalpyQ1 = Region2Calculations.Properties_fPT(pressure, Region4Calculations.SatTemperature(pressure))[\r\n        Units.VectorParameters.Enthalpy\r\n      ];\r\n\r\n      if (enthalpy <= enthalpyQ0) {\r\n        // Region 1\r\n        let SteamPropertiesArray = Region1Calculations.Properties_fPT(\r\n          pressure,\r\n          Region1Calculations.T_fPH(pressure, enthalpy)\r\n        );\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n        return SteamPropertiesArray;\r\n      } else if (enthalpy >= enthalpyQ1) {\r\n        // Region 2\r\n        if (pressure <= Constants.p2a2b_boundary) {\r\n          // Region 2a\r\n          let SteamPropertiesArray = Region2Calculations.Properties_fPT(\r\n            pressure,\r\n            Region2Calculations.T2a_fPH(pressure, enthalpy)\r\n          );\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n          return SteamPropertiesArray;\r\n        } else if (pressure <= Region2Calculations.B2bc_PfH(enthalpy)) {\r\n          // Region 2b\r\n          let SteamPropertiesArray = Region2Calculations.Properties_fPT(\r\n            pressure,\r\n            Region2Calculations.T2b_fPH(pressure, enthalpy)\r\n          );\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n          return SteamPropertiesArray;\r\n        } // Region 2c\r\n        else {\r\n          let SteamPropertiesArray = Region2Calculations.Properties_fPT(\r\n            pressure,\r\n            Region2Calculations.T2c_fPH(pressure, enthalpy)\r\n          );\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n          return SteamPropertiesArray;\r\n        }\r\n      } // Region 4\r\n      else {\r\n        let SteamPropertiesArray = Region4Calculations.Properties_fPH(pressure, enthalpy);\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n        return SteamPropertiesArray;\r\n      }\r\n    } // if the pressure is above the saturation pressure of 623.15 (which includes region 3)\r\n    else {\r\n      const reg1Enthalpy350C = Region1Calculations.Properties_fPT(pressure, Constants.T13_boundary)[\r\n        Units.VectorParameters.Enthalpy\r\n      ];\r\n      const enthalpyB23 = Region2Calculations.Properties_fPT(pressure, Boundary2_3.reg23BoundaryTfP(pressure))[\r\n        Units.VectorParameters.Enthalpy\r\n      ];\r\n\r\n      if (enthalpy <= reg1Enthalpy350C) {\r\n        // Region 1\r\n        let SteamPropertiesArray = Region1Calculations.Properties_fPT(\r\n          pressure,\r\n          Region1Calculations.T_fPH(pressure, enthalpy)\r\n        );\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n        return SteamPropertiesArray;\r\n      } else if (enthalpy >= enthalpyB23) {\r\n        // Region 2\r\n        if (pressure <= Region2Calculations.B2bc_PfH(enthalpy)) {\r\n          // Region 2b\r\n          let SteamPropertiesArray = Region2Calculations.Properties_fPT(\r\n            pressure,\r\n            Region2Calculations.T2b_fPH(pressure, enthalpy)\r\n          );\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n          return SteamPropertiesArray;\r\n        } // Region 2c\r\n        else {\r\n          let SteamPropertiesArray = Region2Calculations.Properties_fPT(\r\n            pressure,\r\n            Region2Calculations.T2c_fPH(pressure, enthalpy)\r\n          );\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n          return SteamPropertiesArray;\r\n        }\r\n      } else if (pressure >= Region3Calculations.Reg3_PSATh(enthalpy)) {\r\n        // Region 3\r\n        if (enthalpy <= Region3Calculations.H3ab(pressure)) {\r\n          // Region 3a\r\n          const T3a = Region3Calculations.Reg3a_Tph(pressure, enthalpy);\r\n          const V3a = Region3Calculations.Reg3a_Vph(pressure, enthalpy);\r\n          let SteamPropertiesArray = Region3Calculations.Properties_fVT(V3a, T3a);\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n          return SteamPropertiesArray;\r\n        } // Region 3b\r\n        else {\r\n          const T3b = Region3Calculations.Reg3b_Tph(pressure, enthalpy);\r\n          const V3b = Region3Calculations.Reg3b_Vph(pressure, enthalpy);\r\n          let SteamPropertiesArray = Region3Calculations.Properties_fVT(V3b, T3b);\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n          return SteamPropertiesArray;\r\n        }\r\n      } // region 4\r\n      else {\r\n        let SteamPropertiesArray = Region4Calculations.Properties_fPH(pressure, enthalpy);\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n        return SteamPropertiesArray;\r\n      }\r\n    }\r\n  } else throw Errors.EnthalpyNotValid;\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as Units from \"./Units.js\";\r\nimport * as Region1Calculations from \"./Region1Calculations.js\";\r\nimport * as Region2Calculations from \"./Region2Calculations.js\";\r\nimport * as Region3Calculations from \"./Region3Calculations.js\";\r\nimport * as Region4Calculations from \"./Region4Calculations.js\";\r\nimport * as Region4SatPressure from \"./Region4SatPressure.js\";\r\nimport * as Boundary2_3 from \"./Boundary2_3Calculations.js\";\r\n\r\n//\r\n//  Steam Properties as a function of Pressure and Entropy\r\n//\r\n\r\nexport function SteamProperties(pressure, entropy) {\r\n  // SteamPropertiesArray = [(0) Pressure, (1) Temperature, (2) Quality, (3) Enthalpy, (4) Entropy,\r\n  //  (5) InternalEnergy, (6) Volume, (7) IsobaricHeat, (8) IsochoricHeat, (9) SpeedOfSound]\r\n\r\n  const entropyCritical = 4.41202148223476; // kJ/kg/K\r\n  const entropyMin = Region1Calculations.Properties_fPT(Constants.pTriple, 273.16)[Units.VectorParameters.Entropy];\r\n  const entropyMax = Region2Calculations.Properties_fPT(pressure, 1073.15)[Units.VectorParameters.Entropy];\r\n  // Verify that the pressure/enthalpy is in regions 1, 2, 3, or 4.  Region 5 doesn't have backward equations\r\n\r\n  if (pressure >= Constants.pT0 && pressure <= Constants.pmax && entropy >= entropyMin && entropy <= entropyMax) {\r\n    if (pressure <= Region4SatPressure.SatPressure(Constants.T13_boundary)) {\r\n      // Region 3 is not included in this group\r\n      const entropyQ0 = Region1Calculations.Properties_fPT(pressure, Region4Calculations.SatTemperature(pressure))[\r\n        Units.VectorParameters.Entropy\r\n      ];\r\n      const entropyQ1 = Region2Calculations.Properties_fPT(pressure, Region4Calculations.SatTemperature(pressure))[\r\n        Units.VectorParameters.Entropy\r\n      ];\r\n\r\n      if (entropy <= entropyQ0) {\r\n        // Region 1\r\n        let SteamPropertiesArray = Region1Calculations.Properties_fPT(\r\n          pressure,\r\n          Region1Calculations.T_fPS(pressure, entropy)\r\n        );\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n        return SteamPropertiesArray;\r\n      } else if (entropy >= entropyQ1) {\r\n        // Region 2\r\n        if (pressure <= 4) {\r\n          // Region 2a\r\n          let SteamPropertiesArray = Region2Calculations.Properties_fPT(\r\n            pressure,\r\n            Region2Calculations.T2a_fPS(pressure, entropy)\r\n          );\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n          return SteamPropertiesArray;\r\n        } else if (entropy >= 5.85) {\r\n          // Region 2b\r\n          return Region2Calculations.Properties_fPT(pressure, Region2Calculations.T2b_fPS(pressure, entropy));\r\n        } // Region 2c\r\n        else {\r\n          let SteamPropertiesArray = Region2Calculations.Properties_fPT(\r\n            pressure,\r\n            Region2Calculations.T2c_fPS(pressure, entropy)\r\n          );\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n          return SteamPropertiesArray;\r\n        }\r\n      } // Region 4\r\n      else {\r\n        let SteamPropertiesArray = Region4Calculations.Properties_fPS(pressure, entropy);\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n        return SteamPropertiesArray;\r\n      }\r\n    } // if the pressure is above the saturation pressure of 623.15 (which includes region 3)\r\n    else {\r\n      const reg1Entropy350C = Region1Calculations.Properties_fPT(pressure, Constants.T13_boundary)[\r\n        Units.VectorParameters.Entropy\r\n      ];\r\n      const entropyB23 = Region2Calculations.Properties_fPT(pressure, Boundary2_3.reg23BoundaryTfP(pressure))[\r\n        Units.VectorParameters.Entropy\r\n      ];\r\n\r\n      if (entropy <= reg1Entropy350C) {\r\n        // Region 1\r\n        let SteamPropertiesArray = Region1Calculations.Properties_fPT(\r\n          pressure,\r\n          Region1Calculations.T_fPS(pressure, entropy)\r\n        );\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n        return SteamPropertiesArray;\r\n      } else if (entropy >= entropyB23) {\r\n        // Region 2\r\n        if (entropy >= 5.85) {\r\n          // Region 2b\r\n          let SteamPropertiesArray = Region2Calculations.Properties_fPT(\r\n            pressure,\r\n            Region2Calculations.T2b_fPS(pressure, entropy)\r\n          );\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n          return SteamPropertiesArray;\r\n        } // Region 2c\r\n        else {\r\n          let SteamPropertiesArray = Region2Calculations.Properties_fPT(\r\n            pressure,\r\n            Region2Calculations.T2c_fPS(pressure, entropy)\r\n          );\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n          return SteamPropertiesArray;\r\n        }\r\n      } else if (pressure >= Region3Calculations.Reg3_PSATs(entropy)) {\r\n        // Region 3\r\n        if (entropy <= entropyCritical) {\r\n          // Region 3a\r\n          const T3a = Region3Calculations.Reg3a_Tps(pressure, entropy);\r\n          const V3a = Region3Calculations.Reg3a_Vps(pressure, entropy);\r\n          let SteamPropertiesArray = Region3Calculations.Properties_fVT(V3a, T3a);\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n          return SteamPropertiesArray;\r\n        } // Region 3b\r\n        else {\r\n          const T3b = Region3Calculations.Reg3b_Tps(pressure, entropy);\r\n          const V3b = Region3Calculations.Reg3b_Vps(pressure, entropy);\r\n          let SteamPropertiesArray = Region3Calculations.Properties_fVT(V3b, T3b);\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n          SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n          return SteamPropertiesArray;\r\n        }\r\n      } // region 4\r\n      else {\r\n        let SteamPropertiesArray = Region4Calculations.Properties_fPS(pressure, entropy);\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n        return SteamPropertiesArray;\r\n      }\r\n    }\r\n  } else throw Errors.EntropyOrPressureNotValid;\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as StmProp_fPS from \"./StmProp_fPS.js\";\r\nimport * as StmProp_fPH from \"./StmProp_fPH.js\";\r\nimport * as Units from \"./Units.js\";\r\nimport * as Region1Calculations from \"./Region1Calculations.js\";\r\nimport * as Region2Calculations from \"./Region2Calculations.js\";\r\nimport * as Region3Calculations from \"./Region3Calculations.js\";\r\nimport * as Region4Calculations from \"./Region4Calculations.js\";\r\nimport * as Region4SatPressure from \"./Region4SatPressure.js\";\r\nimport * as Boundary2_3 from \"./Boundary2_3Calculations.js\";\r\n\r\n// The following section calculates h(s) along the 1073.15K (800C) isotherm from pMin to 100 MPa\r\n// 1000 equally spaced values of s between sMin and sMax were used to calculate the pressure at those points\r\n// Then, using this calculated pressure and the 1073.15K temperature, the entropy value was calculated\r\n// This data was used for a table of x,y valves (entropy, enthalpy), equally spaced from sMin to sMax\r\n// This data was then curvefit and used to establish the upper enthalpy boundary as a function of s, over this range\r\n// The following polynomial is a curvefit based on the IAPWS IFC formulations, but is NOT part of that standard\r\n\r\nconst sMin = -1.545495919e-4; // SR4 Section 4.3 s'(273.15 K)\r\nconst sMax = 11.9210550686135; // Calculated in Excel using H2oPTS(H2oTP(273.15), 1073.15)\r\nconst s100MPa623K = 3.397782955; // SR4 Section 4.5 boundary between 1 and 3 at 100 MPa\r\nconst s100MPa1073K = 6.04048367171238; // Calculated in Excel using H2oPTS(100, 1073.15)\r\n//const hMax;\r\n\r\nfunction H_Pmin(entropy) {\r\n  //Curvefit for h(pmin, s) over range of s\r\n  return (\r\n    -6.62122258198414189 +\r\n    321.238185301903577 * entropy +\r\n    -82.0959654382662344 * Math.pow(entropy, 2) +\r\n    57.8221281826882412 * Math.pow(entropy, 3) +\r\n    -20.5039872574993337 * Math.pow(entropy, 4) +\r\n    3.96952357350072751 * Math.pow(entropy, 5) +\r\n    -0.423564091004529276 * Math.pow(entropy, 6) +\r\n    0.0232321078165524944 * Math.pow(entropy, 7) +\r\n    -0.000506920403085527285 * Math.pow(entropy, 8)\r\n  );\r\n}\r\n\r\nfunction HP800C(entropy) {\r\n  // Curvefit for h(800C, s) over range of s\r\n  return (\r\n    -232411.100029691685 +\r\n    16514718.0618790206 / entropy +\r\n    -499958223.428067708 / Math.pow(entropy, 2) +\r\n    8568365094.23440593 / Math.pow(entropy, 3) +\r\n    -90866887506.2776784 / Math.pow(entropy, 4) +\r\n    610151522908.616501 / Math.pow(entropy, 5) +\r\n    -2531273960518.454 / Math.pow(entropy, 6) +\r\n    5926968673997.74072 / Math.pow(entropy, 7) +\r\n    -5993244023196.03396 / Math.pow(entropy, 8)\r\n  );\r\n}\r\n\r\nfunction H_Max(entropy) {\r\n  if (entropy <= s100MPa1073K) {\r\n    return StmProp_fPS.SteamProperties(Constants.pmax, entropy)[Units.VectorParameters.Enthalpy];\r\n  } else {\r\n    return HP800C(entropy);\r\n  }\r\n}\r\n\r\n//\r\n//  Steam Properties as a function of Enthalpy and Entropy\r\n//\r\n\r\nexport function SteamProperties(enthalpy, entropy) {\r\n  const sSatLiq623K = 3.77828134; // SR4 Section 4.3 s'(623.15 K)\r\n  const sCritical = 4.41202148223476; // SR4 Section 4.3 s critical\r\n  const s2c2b = 5.85; // SR4 Section 4.4 boundary between regions 2c and 2b\r\n  const sSatVap273K = 9.155759395; // SR4 Section 4.4 maximum two phase entropy\r\n  const sB23Min = 5.048096828; // SR4 Section 4.6 sB23 boundary minimum s value\r\n  const sB23Max = 5.260578707; // SR4 Section 4.6 sB23 boundary maximum s value\r\n  const hB23Min = 2.563592004e3; // SR4 Section 4.6 sB23 boundary minimum h value\r\n  const hB23Max = 2.812942061e3; // SR4 Section 4.6 sB23 boundary maximum h value\r\n  const sSatVap623K = 5.210887825; // SR4 Section 5.3 lower bound of validity for region 4 backward equation\r\n  const sH2abMin = 6.06970916; // Calculated in Excel using H2oPQS(4,1)\r\n  const sH2abMax = 7.8523404; // Calculated in Excel using H2oPTS(4,1073.15)\r\n\r\n  // Verify that the entropy is between sMin and sMax\r\n  if (entropy >= sMin && entropy <= sMax) {\r\n    const hPmin = H_Pmin(entropy);\r\n    const hMax = H_Max(entropy);\r\n\r\n    // if the following true, at this point, we are within the overall valid region of p(s,h), except\r\n    // also not valid if 2 phase (Region 4) and less than s\"(623.15K)   Note: s' is saturated liquid line, s\" is saturated vapor line\r\n    if (enthalpy >= hPmin && enthalpy <= hMax) {\r\n      var hSat = 0; // variable used to define saturation border h(s)\r\n\r\n      if (entropy <= sSatVap273K) {\r\n        if (entropy <= sSatLiq623K) {\r\n          hSat = Region3Calculations.H1_sat_liqS(entropy);\r\n        } else if (entropy <= sCritical) {\r\n          hSat = Region3Calculations.H3a_sat_liqS(entropy);\r\n        } else if (entropy < s2c2b) {\r\n          hSat = Region3Calculations.H2c3b_sat_VapS(entropy);\r\n        } else {\r\n          hSat = Region3Calculations.H2ab_sat_VapS(entropy);\r\n        }\r\n      }\r\n\r\n      if (entropy <= sSatVap273K && enthalpy <= hSat) {\r\n        //Region 4\r\n        if (entropy >= sSatVap623K) {\r\n          const Tsat = Region3Calculations.TsatHS(enthalpy, entropy);\r\n          const Psat = Region4SatPressure.SatPressure(Tsat);\r\n          const HsatLiq = Region1Calculations.Properties_fPT(Psat, Tsat)[Units.VectorParameters.Enthalpy];\r\n          const HsatVap = Region2Calculations.Properties_fPT(Psat, Tsat, false)[Units.VectorParameters.Enthalpy];\r\n          const Quality = (enthalpy - HsatLiq) / (HsatVap - HsatLiq);\r\n          let SteamPropertiesArray = Region4Calculations.Properties_fPQ(Psat, Quality);\r\n          SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n          SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n          return SteamPropertiesArray;\r\n        } else throw Errors.EntropyNotValidForSaturatedSteam;\r\n      } else if (entropy <= sSatLiq623K) {\r\n        // could be region 1, or region 3a\r\n        if (enthalpy >= Region3Calculations.H1_sat_liqS(entropy)) {\r\n          //Either region 1 or 3a\r\n          if (entropy >= s100MPa623K && enthalpy >= Region3Calculations.Hb13S(entropy)) {\r\n            // region 3a\r\n            const P3a = Region3Calculations.P3aHS(enthalpy, entropy);\r\n            const T3a = Region3Calculations.Reg3a_Tph(P3a, enthalpy);\r\n            const V3a = Region3Calculations.Reg3a_Vps(P3a, entropy);\r\n            let SteamPropertiesArray = Region3Calculations.Properties_fVT(V3a, T3a);\r\n            SteamPropertiesArray[Units.VectorParameters.Pressure] = P3a;\r\n            SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n            SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n            return SteamPropertiesArray;\r\n          } // region 1\r\n          else {\r\n            const pressure = Region1Calculations.P_fHS(enthalpy, entropy);\r\n            let SteamPropertiesArray = StmProp_fPH.SteamProperties(pressure, enthalpy);\r\n            SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n            SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n            SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n            return SteamPropertiesArray;\r\n          }\r\n        } else throw Errors.EnthalpyNotValidForEntropy;\r\n      } else if (entropy <= sCritical) {\r\n        // region 3a or region 4, above or below the h'3a line\r\n        if (enthalpy >= Region3Calculations.H3a_sat_liqS(entropy)) {\r\n          // region 3a\r\n          const P3a = Region3Calculations.P3aHS(enthalpy, entropy);\r\n          const T3a = Region3Calculations.Reg3a_Tph(P3a, enthalpy);\r\n          const V3a = Region3Calculations.Reg3a_Vps(P3a, entropy);\r\n          let SteamPropertiesArray = Region3Calculations.Properties_fVT(V3a, T3a);\r\n          SteamPropertiesArray[Units.VectorParameters.Pressure] = P3a;\r\n          SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n          SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n          return SteamPropertiesArray;\r\n        } else throw Errors.EnthalpyNotValidForEntropy;\r\n      } else if (entropy <= s2c2b) {\r\n        // region 3b, 2c, or 4\r\n        if (enthalpy >= Region3Calculations.H2c3b_sat_VapS(entropy)) {\r\n          // region 3b or 2c\r\n          if (entropy <= sB23Min || enthalpy <= hB23Min) {\r\n            // region 3b\r\n            const P3b = Region3Calculations.P3bHS(enthalpy, entropy);\r\n            const T3b = Region3Calculations.Reg3b_Tph(P3b, enthalpy);\r\n            const V3b = Region3Calculations.Reg3b_Vps(P3b, entropy);\r\n            let SteamPropertiesArray = Region3Calculations.Properties_fVT(V3b, T3b);\r\n            SteamPropertiesArray[Units.VectorParameters.Pressure] = P3b;\r\n            SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n            SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n            return SteamPropertiesArray;\r\n          } else if (entropy >= sB23Max || enthalpy >= hB23Max) {\r\n            // region 2c\r\n            const pressure = Region2Calculations.P2c_fHS(enthalpy, entropy);\r\n            let SteamPropertiesArray = StmProp_fPH.SteamProperties(pressure, enthalpy);\r\n            SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n            SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n            SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n            return SteamPropertiesArray;\r\n            // return reg2Calcs.P2c_fHS(enthalpy,entropy);\r\n          }\r\n\r\n          // Verified in the range of validity of the TB23(h,s) equation.  SR4 Figure 4.  Next steps are:\r\n          // (1) Calculate TB23(h,s)          SR4 Equation 8\r\n          // (2) Calculate pB23(TB23)         Boundary p(TB23) IFC97 Equ 5\r\n          // (3) Calculate p(h,s)             Using SR2 Equ 5 backward equation p2c(h,s) // If p(h,s) >= pB23 then region 3 else region 2c: Within the small box in SR4 Figure 4\r\n          else {\r\n            const TB23 = Region3Calculations.Tb23HS(enthalpy, entropy); // Temperature within the small box\r\n            const PB23 = Region2Calculations.P2c_fHS(enthalpy, entropy); // SR2 Eq 5.  Pressure within the small box\r\n            const p23Boundary = Boundary2_3.reg23BoundaryPfT(TB23);\r\n            if (PB23 > p23Boundary) {\r\n              // Region 3b\r\n              const P3b = Region3Calculations.P3bHS(enthalpy, entropy);\r\n              const T3b = Region3Calculations.Reg3b_Tph(P3b, enthalpy);\r\n              const V3b = Region3Calculations.Reg3b_Vps(P3b, entropy);\r\n              let SteamPropertiesArray = Region3Calculations.Properties_fVT(V3b, T3b);\r\n              SteamPropertiesArray[Units.VectorParameters.Pressure] = P3b;\r\n              SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n              SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n              return SteamPropertiesArray;\r\n            } // Region 2c\r\n            else {\r\n              const pressure = Region2Calculations.P2c_fHS(enthalpy, entropy);\r\n              let SteamPropertiesArray = StmProp_fPH.SteamProperties(pressure, enthalpy);\r\n              SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n              SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n              SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n              return SteamPropertiesArray;\r\n              // return reg2Calcs.P2c_fHS(enthalpy, entropy);\r\n            }\r\n          }\r\n        } else throw Errors.EnthalpyNotValidForEntropy;\r\n      } else if (entropy <= sH2abMin) {\r\n        // Region 2b\r\n        const pressure = Region2Calculations.P2b_fHS(enthalpy, entropy);\r\n        let SteamPropertiesArray = StmProp_fPH.SteamProperties(pressure, enthalpy);\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n        SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n        return SteamPropertiesArray;\r\n        // return reg2Calcs.P2b_fHS(enthalpy,entropy);\r\n      } else if (entropy <= sH2abMax && enthalpy >= Region2Calculations.H2ab(entropy)) {\r\n        // Region 2b\r\n        const pressure = Region2Calculations.P2b_fHS(enthalpy, entropy);\r\n        let SteamPropertiesArray = StmProp_fPH.SteamProperties(pressure, enthalpy);\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n        SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n        return SteamPropertiesArray;\r\n        // return reg2Calcs.P2b_fHS(enthalpy,entropy);\r\n      } // Region 2a\r\n      else {\r\n        const pressure = Region2Calculations.P2a_fHS(enthalpy, entropy);\r\n        let SteamPropertiesArray = StmProp_fPH.SteamProperties(pressure, enthalpy);\r\n        SteamPropertiesArray[Units.VectorParameters.Pressure] = pressure;\r\n        SteamPropertiesArray[Units.VectorParameters.Enthalpy] = enthalpy;\r\n        SteamPropertiesArray[Units.VectorParameters.Entropy] = entropy;\r\n        return SteamPropertiesArray;\r\n        // return reg2Calcs.P2a_fHS(enthalpy,entropy);\r\n      }\r\n    } // end of \"If hmin <= s <= hmax\"\r\n    else throw Errors.EnthalpyNotValidForEntropy;\r\n  } // end of \"If smin <= s <= smax\"\r\n  else throw Errors.EntropyNotValid;\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\n\r\n// The following constants are from IAPWS R14, Pressure along the Melting and Sublimation Curves of Ordinary Water\r\nconst aMelt = [ 0.119539337e7, 0.808183159e5, 0.333826860e4 ];\r\nconst bMelt = [ 0.300000e1, 0.257500e2, 0.103750e3 ];\r\nconst aSublim = [ -0.212144006e2, 0.273203819e2, -0.610598130e1 ];\r\nconst bSublim = [ 0.333333333e-2, 0.120666667e1, 0.170333333e1 ];\r\nconst ReducingPressureIceIII = 208.566; // MPa\r\nconst ReducingTemperatureIceIII = 251.165; // MPa\r\nconst ReducingPressureIceV = 350.1; // MPa\r\nconst ReducingTemperatureIceV = 256.164; // MPa\r\nconst ReducingPressureIceVI = 273.31; // MPa\r\nconst ReducingTemperatureIceVI = 251.165; // MPa\r\nconst ReducingPressureIceVII = 2216; // MPa\r\nconst ReducingTemperatureIceVII = 355; // MPa\r\nexport const MeltTemp100MPa = 264.208747604379; // Melting temperature at 100 MPa\r\n\r\n\r\nexport function PressMeltIceIh(temperature) // IAPWS R14 Equation 1.  The range of validity will be limited to 0 to 100 MPa to correspond with the IAPWS IF97 Industrial Use formulations.\r\n{\r\n    if (temperature>=251.165 && temperature<=273.16)  // Temperature range of validity for ice Ih melting (solid/liquid boundary)\r\n    {\r\n        var pi = 0;\r\n        for (let i = 0; i < aMelt.length; i++)\r\n        {\r\n            pi += aMelt[i] * (1 - Math.pow(temperature / Constants.Ttriple, bMelt[i]));\r\n        }\r\n        pi += 1;\r\n        let pressure= pi * Constants.pTriple; // \r\n        if (pressure>=Constants.pTriple && pressure<=100) \r\n        {\r\n            return pressure;\r\n        }\r\n        else throw Errors.PressureNotWithinValidRange;\r\n    }\r\n    else throw Errors.TemperatureNotWithinValidRange;\r\n}\r\n\r\nexport function PressSublIceIh(temperature) // IAPWS R14 Equation 6.  The range of validity will be limited to 0 to 100 MPa to correspond with the IAPWS IF97 Industrial Use formulations.\r\n{\r\n    if (temperature >= 130 && temperature <= 273.16)  // Temperature range of validity for ice Ih melting (solid/liquid boundary)\r\n    {\r\n        var lnPi = 0;\r\n        for (let i = 0; i < aSublim.length; i++)\r\n        {\r\n            lnPi += aSublim[i] * Math.pow(temperature / Constants.Ttriple, bSublim[i]);\r\n        }\r\n        lnPi = lnPi/(temperature/Constants.Ttriple);\r\n        let pressure = Constants.pTriple* Math.exp(lnPi);  // MPa\r\n        if (pressure >0 && pressure <= Constants.pTriple)\r\n        {\r\n            return pressure;\r\n        }\r\n        else throw Errors.PressureNotWithinValidRange;\r\n    }\r\n    else throw Errors.TemperatureNotWithinValidRange;\r\n} \r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as Ice from \"./Ice.js\";\r\nimport * as Region3Calculations from \"./Region3Calculations.js\";\r\n\r\nexport const T_ref = 647.096; // K Reference Temperature\r\nexport const rho_ref = 322.0; // kg/m3 Reference density\r\nexport const mu_ref = 1.0e-6; // Pa*s Reference viscosity\r\nexport const ViscMaxT = 1173.15; // Maximum temperature at which the viscosity equation is applicable\r\n\r\n// Calculates visosity as a function of temperature and volume\r\n// pressure input is used to verify inputs are in the valid range\r\nexport function Visc(temperature, volume, pressure) {\r\n  try {\r\n    if (\r\n      (pressure > 0 && pressure <= 101 && temperature >= Constants.Ttriple - 1e-6 && temperature <= ViscMaxT) || // Pressure range from 0 to 101 MPa with temperature from the triple point to a max of 1173.15 K.  Note: Doesn't cover region below P Triple for temperature less than T Triple (down to sublimation line)\r\n      (temperature <= Constants.Ttriple &&\r\n        temperature >= Ice.MeltTemp100MPa &&\r\n        pressure >= Constants.pTriple &&\r\n        pressure <= 101 &&\r\n        pressure >= Ice.PressMeltIceIh(temperature)) || // (Temperature range between T triple and 100 MPa melting temperature) and (pressure between 100 MPa and  P triple) with pressures greater than the melting pressure.  Note. T melt decreases with increasing pressure above the triple point\r\n      (temperature <= Constants.Ttriple &&\r\n        temperature >= 250 &&\r\n        pressure <= Constants.pTriple &&\r\n        pressure > 0 &&\r\n        pressure <= Ice.PressSublIceIh(temperature)) || // for low pressures below P Triple 611 Pascals, for pressures less than the sublimation curve (gases).  Valid down to about 250K per R12 section 2.4 first bullet note\r\n      (temperature <= Constants.Ttriple &&\r\n        temperature >= Constants.Tmin &&\r\n        pressure > 0 &&\r\n        pressure <= ((temperature - Constants.Tmin) * (Constants.pTriple - Constants.pT0)) / 0.1 + Constants.pT0)\r\n    ) {\r\n      return Visc_fTV(temperature, volume);\r\n    }\r\n    throw Errors.TemperatureOrPressureNotValid;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Viscosity function for regions 1, 2 & 5.\r\n// Calculates mu_0 and mu_1, the first two viscosity terms\r\n// Doesn't check for valid pressure, temperature range\r\nexport function ViscR125(temperature, volume) {\r\n  var rho = 1 / volume;\r\n  var rho_dim = rho / rho_ref;\r\n  var T_dim = temperature / T_ref;\r\n  var mu_0 = 0;\r\n  var mu_1 = 0;\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    mu_0 += Constants.visc_Hi[i] / Math.pow(T_dim, i);\r\n  }\r\n  mu_0 = (100 * Math.sqrt(T_dim)) / mu_0;\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    var H_sum = 0;\r\n    for (let j = 0; j < 7; j++) {\r\n      H_sum += Constants.visc_Hij[i][j] * Math.pow(rho_dim - 1, j);\r\n    }\r\n    mu_1 += Math.pow(1 / T_dim - 1, i) * H_sum;\r\n  }\r\n  mu_1 = Math.exp(rho_dim * mu_1);\r\n\r\n  return mu_ref * (mu_0 * mu_1); // Pa seconds\r\n}\r\n\r\n// Calculates the mu_2 term, the third visosity term, if appropriate\r\n// Otherwise mu_2 is set to a value of 1\r\n// Then calls the mu_0 & mu_1 calc and multiplies them all together\r\nexport function Visc_fTV(temperature, volume) {\r\n  // var T_dim = temperature / T_ref;\r\n  var rho_dim = 1 / (volume * rho_ref);\r\n  var rho = 1 / volume;\r\n  var mu_2 = 1;\r\n\r\n  // If close to the critical point, then mu_2 is used\r\n  if (temperature > 645.91 && temperature < 650.77 && rho > 245.8 && rho < 405.3) {\r\n    // R12-08 Eq. 13\r\n    const dVdP_T = Region3Calculations.Properties_fVT(volume, temperature)[52]; // See if this changes from the input dVdP_T\r\n    var dVdP_TR = Region3Calculations.Properties_fVT(volume, Constants.TR)[52]; // Properties index [16] is dPdV_T.  Use pressure and T_crit to calculate dVdP_T_crit\r\n    const zeta = -(Constants.pc_H2O / (Constants.RHOc_H2O * Math.pow(volume, 2))) * dVdP_T; // R12-08 Eq21a. The differential reciprocol rule is needed to convert from rho to v, hence the (1/v)^2 term\r\n    var zetaTR = -(Constants.pc_H2O / (Constants.RHOc_H2O * Math.pow(volume, 2))) * dVdP_TR; // / R12-08 Eq21a.  Properties[52] is dv/dp_T\r\n\r\n    var delta_chi_dim = rho_dim * (zeta - zetaTR * (Constants.TR / temperature)); // R12-08 Eq. 21\r\n    if (delta_chi_dim < 0) {\r\n      delta_chi_dim = 0;\r\n    }\r\n    const xi = Constants.xi_0 * Math.pow(delta_chi_dim / Constants.Gamma_0, Constants.ni / Constants.gamma); // R12-08 Eq. 20\r\n    var Y = 0;\r\n    if (xi >= 0 && xi <= 0.3817016416) {\r\n      // R12-08 Eq. 13\r\n      Y =\r\n        (1 / 5) *\r\n        Constants.q_C *\r\n        xi *\r\n        Math.pow(Constants.q_D * xi, 5) *\r\n        (1 - Constants.q_C * xi + Math.pow(Constants.q_C * xi, 2) - (765 / 504) * Math.pow(Constants.q_D * xi, 2)); // R12-08 Eq. 15\r\n    } else {\r\n      const psi_D = Math.acos(Math.pow(1 + Math.pow(Constants.q_D, 2) * Math.pow(xi, 2), -0.5)); // R12-08 Eq. 17\r\n      const w = Math.pow(Math.abs((Constants.q_C * xi - 1) / (Constants.q_C * xi + 1)), 0.5) * Math.tan(psi_D / 2); // R12-08 Eq. 19\r\n      var L = 0; // R12-08 Eq. 18\r\n      if (Constants.q_C * xi > 1) {\r\n        L = Math.log((1 + w) / (1 - w));\r\n      } else {\r\n        L = 2 * Math.atan(Math.abs(w));\r\n      }\r\n      const Y1 = (1 / 12) * Math.sin(3 * psi_D);\r\n      const Y2 = Math.sin(2 * psi_D) / (4 * Constants.q_C * xi);\r\n      const Y3 = ((1 - (5 / 4) * Math.pow(Constants.q_C * xi, 2)) * Math.sin(psi_D)) / Math.pow(Constants.q_C * xi, 2);\r\n      const Y4 = 1 / Math.pow(Constants.q_C * xi, 3);\r\n      const Y5 = (1 - (3 / 2) * Math.pow(Constants.q_C * xi, 2)) * psi_D;\r\n      const Y6 = Math.pow(Math.abs(Math.pow(Constants.q_C * xi, 2) - 1), 1.5) * L;\r\n      Y = Y1 - Y2 + Y3 - Y4 * (Y5 - Y6); // R12-08 Eq.16\r\n    }\r\n\r\n    mu_2 = Math.exp(Constants.x_mi * Y);\r\n  }\r\n\r\n  return ViscR125(temperature, volume) * mu_2 * 1e6; // Pa seconds.  mu_ref already included in ViscR125\r\n}\r\n","import * as Constants from \"./Constants.js\";\r\nimport * as Errors from \"./Errors.js\";\r\n\r\n//const cond_ref = 1e-3; // W/K*m - R15-11 Eq 4\r\nconst mu_ref = 1; // Pa*s Reference viscosity - R15-11 Eq 5\r\nconst R = 0.46151805; // kJ/kg K Specific Gas Constant - R15-11 Eq 6\r\nconst Lambda = 177.8514; // Critical Region Constant - R15-11 Table 3\r\nconst xi0 = 0.13; // nm Table 3 Critical Region Constant correlation length- R15-11 Table 3\r\nconst qD = 1 / 0.4; // 1/nm Critical Region Constant reference wave number R15-11 Table 3\r\nconst nu = 0.63; // Critical Region Constant- R15-11 Table 3\r\nconst Gamma0 = 0.06; // Critical Region Constant- R15-11 Table 3\r\nconst gamma = 1.239; // Critical Region Constant- R15-11 Table 3\r\nconst T_R = 1.5; // Critical Region Constant- R15-11 Table 3\r\n\r\nexport function Cond(temperature, volume, pressure, visc, Cp, Cv, dVdP_T) {\r\n  try {\r\n    if (\r\n      (pressure > 0 &&\r\n        pressure < Constants.pTriple &&\r\n        temperature >= Constants.Ttriple &&\r\n        temperature <= Constants.T_Cond_Max) || // Pressure range from 0 to 101 MPa with temperature from the triple point to a max of 1173.15 K.  Note: Doesn't cover region below P Triple for temperature less than T Triple (down to sublimation line)\r\n      (pressure >= Constants.pTriple &&\r\n        pressure <= Constants.pmax &&\r\n        temperature >= Constants.Ttriple &&\r\n        temperature <= Constants.T_Cond_Max)\r\n    ) {\r\n      return Cond_With_crit_enh(temperature, volume, pressure, visc, Cp, Cv, dVdP_T);\r\n    }\r\n    throw Errors.TemperatureOrPressureNotValid;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug function for Thermal Conductivity without the critical enhancement to verify values in R15-11 Tables 4\r\n// Does not check to see if in a valid range because pressure is not an input\r\nexport function Cond_WO_crit_enh(temperature, volume) {\r\n  const T_dim = temperature / Constants.Tc_H2O;\r\n  const rho_dim = 1 / (volume * Constants.RHOc_H2O);\r\n  var lambda_0 = 0;\r\n  for (let k = 0; k < 5; k++) {\r\n    // R15-11 Eq 16\r\n    lambda_0 += Constants.cond_Lk[k] / Math.pow(T_dim, k);\r\n  }\r\n  lambda_0 = Math.sqrt(T_dim) / lambda_0;\r\n\r\n  var lambda_1 = 0;\r\n  for (let i = 0; i < 5; i++) {\r\n    var L_sum = 0;\r\n    for (let j = 0; j < 6; j++) {\r\n      L_sum += Constants.cond_Lij[i][j] * Math.pow(rho_dim - 1, j);\r\n    }\r\n    lambda_1 += Math.pow(1 / T_dim - 1, i) * L_sum;\r\n  }\r\n  lambda_1 = Math.exp(rho_dim * lambda_1);\r\n\r\n  return lambda_0 * lambda_1;\r\n}\r\n\r\n// Conductivity with the Critical Enhancement of R15-11 section 2.7\r\nexport function Cond_With_crit_enh(\r\n  temperature,\r\n  volume,\r\n  pressure,\r\n  viscosity,\r\n  isobaricHeat,\r\n  isochoricHeat,\r\n  dVdP_T\r\n  //dVdP_TR\r\n) {\r\n  const T_dim = temperature / Constants.Tc_H2O; // R15-11 eq 7\r\n  const rho_dim = 1 / (volume * Constants.RHOc_H2O); // R15-11 eq 9\r\n  const mu_dim = viscosity / mu_ref; // R15-11 eq 11\r\n  const heat_cap_ratio = isobaricHeat / isochoricHeat; // R15-11 Eq. 13\r\n\r\n  var zetaTR = 0;\r\n  // the ranges in the if statements below are from R15-11 Eq. 26\r\n  var j = 0;\r\n  if (rho_dim > 0 && rho_dim <= 0.310559006) {\r\n    j = 0;\r\n  } else if (rho_dim > 0.310559006 && rho_dim <= 0.776397516) {\r\n    j = 1;\r\n  } else if (rho_dim > 0.776397516 && rho_dim <= 1.242236025) {\r\n    j = 2;\r\n  } else if (rho_dim > 1.242236025 && rho_dim <= 1.863354037) {\r\n    j = 3;\r\n  } else if (rho_dim > 1.863354037) {\r\n    j = 4;\r\n  } else {\r\n    j = NaN;\r\n  }\r\n  var Aij = 0;\r\n  for (let i = 0; i < 6; i++) {\r\n    Aij = Constants.cond_Aij[i][j];\r\n    zetaTR += Aij * Math.pow(rho_dim, i);\r\n  }\r\n  zetaTR = 1 / zetaTR;\r\n\r\n  const dRhoDp_T = -dVdP_T / Math.pow(volume, 2); // Conversion from dv_dp to dRho_dp.  Uses the derivative reciprocal rule.\r\n  // const dRhoDp_TR = -dVdP_TR / Math.pow(volume, 2);\r\n  // const dRhoDp_TR = zetaTR * (Constants.Tc_H2O / Constants.RHOc_H2O); // Conversion from dv_dp to dRho_dp.\r\n  var cp_rel = isobaricHeat / R; // cp relative R15-11 Eq. 12\r\n  if (cp_rel < 0 || cp_rel > 1e13) {\r\n    // If negative or greater than 10^13, then it set it to 10^13.  See IAPWS R15-11 note on bottom of page 12\r\n    cp_rel = 1e13;\r\n  }\r\n\r\n  var zeta = dRhoDp_T * (Constants.pc_H2O / Constants.RHOc_H2O); // R15-11 Eq. 24\r\n  if (zeta < 0 || zeta > 1e13) {\r\n    // If negative or greater than 10^13, then it set it to 10^13. IAPWS R15-11 note on bottom of page 12\r\n    zeta = 1e13;\r\n  }\r\n\r\n  // var zeta2 = dRhoDp_TR * (Constants.pc_H2O / Constants.RHOc_H2O); // R15-11 Eq. 24\r\n\r\n  // If zeta is negative or greater than 10^13, then it set it to 10^13\r\n  // See IAPWS R15-11 note on bottom of page 12\r\n  // var zetaTR = dRhoDp_TR * (Constants.pc_H2O / Constants.RHOc_H2O); // R15-11 Eq. 24\r\n  if (zetaTR < 0 || zetaTR > 1e13) {\r\n    zetaTR = 1e13;\r\n  }\r\n\r\n  // IAPWS R15-11 eq 23\r\n  var chi = rho_dim * (zeta - zetaTR * (T_R / T_dim));\r\n  // refer to comment at the top of page 8 in IAPWS R15-11\r\n  if (chi < 0) {\r\n    chi = 0;\r\n  }\r\n\r\n  // R15 eq 22\r\n  var xi = xi0 * Math.pow(chi / Gamma0, nu / gamma);\r\n\r\n  const y = xi * qD; // R15 eq 20\r\n\r\n  // R15 eq 19 & eq 21\r\n  var Zy = 0;\r\n  if (y >= 1.2e-7) {\r\n    Zy =\r\n      (2 / (Math.PI * y)) *\r\n      ((1 - 1 / heat_cap_ratio) * Math.atan(y) +\r\n        (1 / heat_cap_ratio) * y -\r\n        (1 - Math.exp(-1 / (1 / y + Math.pow(y, 2) / (3 * Math.pow(rho_dim, 2))))));\r\n  }\r\n\r\n  // R15 eq 18\r\n  const lambda_2_temp = Zy * Lambda * rho_dim * cp_rel * T_dim;\r\n  const lambda_2 = lambda_2_temp / mu_dim;\r\n\r\n  const Lambda_01 = Cond_WO_crit_enh(temperature, volume);\r\n\r\n  // R15 eq 17\r\n  return Lambda_01 + lambda_2;\r\n}\r\n","// import * as Constants from \"./Constants.js\";\r\nimport * as Conversions from \"./Conversions.js\";\r\nimport * as Units from \"./Units.js\";\r\nimport * as StmProp_fPT from \"./StmProp_fPT.js\";\r\nimport * as StmProp_fPH from \"./StmProp_fPH.js\";\r\nimport * as StmProp_fPS from \"./StmProp_fPS.js\";\r\nimport * as StmProp_fHS from \"./StmProp_fHS.js\";\r\nimport * as Region4Calculations from \"./Region4Calculations.js\";\r\nimport * as Region4SatPressure from \"./Region4SatPressure.js\";\r\nimport * as Errors from \"./Errors.js\";\r\nimport * as Region3Calculations from \"./Region3Calculations.js\";\r\nimport * as Viscosity from \"./Viscosity.js\";\r\nimport * as Conductivity from \"./Conductivity.js\";\r\nimport * as Constants from \"./Constants.js\";\r\n\r\n// TODO: Licensing??\r\nvar licensing = {\r\n  checkLicense: function () {\r\n    var isOk = true;\r\n    if (!isOk) {\r\n      throw \"Trial Expired, see https://www.h2othermo.com/steam\";\r\n    }\r\n  },\r\n};\r\n\r\nexport function CallStmProp_fPT(pressure, temperature, units, returnIndex, metastable = false) {\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n    metastable = metastable ?? false;\r\n\r\n    // Check for purchase/trial.\r\n    licensing.checkLicense();\r\n\r\n    var p = 0.0;\r\n    var t = 0.0;\r\n    // Converts the inputs to the standard SI values (MPa, K)\r\n    switch (units) {\r\n      case Units.SI:\r\n        p = pressure;\r\n        t = temperature;\r\n        break;\r\n      case Units.USCustomary:\r\n        p = Conversions.PsiToMpa(pressure);\r\n        t = Conversions.FtoK(temperature);\r\n        break;\r\n      case Units.MetricBarA:\r\n        p = Conversions.BarToMpa(pressure);\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      case Units.MetricKpa:\r\n        p = Conversions.KpaToMpa(pressure);\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n\r\n    // Get Steam properties, convert to correct units and return the one element.\r\n    return Conversions.SteamPropertiesConversion(StmProp_fPT.SteamProperties(p, t, metastable), units)[returnIndex]; // calls the steam properties with standard SI units and then converts to the desired units.\r\n  } catch (e) {\r\n    // We throw strings. Convert to an Excel error\r\n    // let error = new CustomFunctions.Error(CustomFunctions.ErrorCode.invalidValue, e);\r\n    // throw error;\r\n\r\n    // So I just return the thrown string, which is displayed in the cell in Excel.\r\n    return e;\r\n  }\r\n}\r\n\r\nexport function CallStmProp_fPH(pressure, enthalpy, units, returnIndex) {\r\n  // try/catch block for returning properties f(p,h)\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n\r\n    // Check for purchase/trial.\r\n    licensing.checkLicense();\r\n\r\n    var p = pressure;\r\n    var h = enthalpy;\r\n    switch (\r\n      units // Converts the inputs to the standard SI values (MPa, kJ/kg)\r\n    ) {\r\n      case Units.SI:\r\n        p = pressure;\r\n        h = enthalpy;\r\n        break;\r\n      case Units.USCustomary:\r\n        p = Conversions.PsiToMpa(pressure);\r\n        h = Conversions.BtuPerLbmToKjPerKg(enthalpy);\r\n        break;\r\n      case Units.MetricBarA:\r\n        p = Conversions.BarToMpa(pressure);\r\n        h = enthalpy;\r\n        break;\r\n      case Units.MetricKpa:\r\n        p = Conversions.KpaToMpa(pressure);\r\n        h = enthalpy;\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    return Conversions.SteamPropertiesConversion(StmProp_fPH.SteamProperties(p, h), units)[returnIndex];\r\n  } catch (e) {\r\n    // Convert anything thrown to just the string and return it.\r\n    return e;\r\n  }\r\n}\r\n\r\nexport function CallStmProp_fPS(pressure, entropy, units, returnIndex) {\r\n  // try/catch block for returning properties f(p,s)\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n\r\n    // Check for purchase/trial.\r\n    licensing.checkLicense();\r\n\r\n    var p = pressure;\r\n    var s = entropy;\r\n    switch (\r\n      units // Converts the inputs to the standard SI values (MPa, kJ/kg/K)\r\n    ) {\r\n      case Units.SI:\r\n        p = pressure;\r\n        s = entropy;\r\n        break;\r\n      case Units.USCustomary:\r\n        p = Conversions.PsiToMpa(pressure);\r\n        s = Conversions.BtuPerLbmFtoKjPerKgK(entropy);\r\n        break;\r\n      case Units.MetricBarA:\r\n        p = Conversions.BarToMpa(pressure);\r\n        s = entropy;\r\n        break;\r\n      case Units.MetricKpa:\r\n        p = Conversions.KpaToMpa(pressure);\r\n        s = entropy;\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    return Conversions.SteamPropertiesConversion(StmProp_fPS.SteamProperties(p, s), units)[returnIndex];\r\n  } catch (e) {\r\n    // Convert anything thrown to just the string and return it.\r\n    return e;\r\n  }\r\n}\r\n\r\nexport function CallStmProp_fPQ(pressure, quality, units, returnIndex) {\r\n  // try/catch block for returning properties f(p,Q)\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n\r\n    // Check for purchase/trial.\r\n    licensing.checkLicense();\r\n\r\n    var p = pressure;\r\n    switch (\r\n      units // Converts the inputs to the standard SI values (MPa)\r\n    ) {\r\n      case Units.SI:\r\n        p = pressure;\r\n        break;\r\n      case Units.USCustomary:\r\n        p = Conversions.PsiToMpa(pressure);\r\n        break;\r\n      case Units.MetricBarA:\r\n        p = Conversions.BarToMpa(pressure);\r\n        break;\r\n      case Units.MetricKpa:\r\n        p = Conversions.KpaToMpa(pressure);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    return Conversions.SteamPropertiesConversionReg4(Region4Calculations.Properties_fPQ(p, quality), units)[\r\n      returnIndex\r\n    ];\r\n  } catch (e) {\r\n    // Convert anything thrown to just the string and return it.\r\n    return e;\r\n  }\r\n}\r\n\r\nexport function CallStmProp_fTQ(temperature, quality, units, returnIndex) {\r\n  // try/catch block for returning properties f(T,Q)\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n\r\n    // Check for purchase/trial.\r\n    licensing.checkLicense();\r\n\r\n    var t = temperature;\r\n    switch (\r\n      units // Converts the inputs to the standard SI values (K)\r\n    ) {\r\n      case Units.SI:\r\n        t = temperature;\r\n        break;\r\n      case Units.USCustomary:\r\n        t = Conversions.FtoK(temperature);\r\n        break;\r\n      case Units.MetricBarA:\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      case Units.MetricKpa:\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n\r\n    return Conversions.SteamPropertiesConversionReg4(Region4Calculations.Properties_fTQ(t, quality), units)[\r\n      returnIndex\r\n    ];\r\n  } catch (e) {\r\n    // Convert anything thrown to just the string and return it.\r\n    return e;\r\n  }\r\n}\r\n\r\nexport function CallStmProp_fHS(enthalpy, entropy, units, returnIndex) {\r\n  // try/catch block for returning properties f(h,s)\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n\r\n    // Check for purchase/trial.\r\n    licensing.checkLicense();\r\n\r\n    var h = enthalpy;\r\n    var s = entropy;\r\n    switch (\r\n      units // Converts the inputs to the standard SI values (kJ/kg, kJ/kg/K)\r\n    ) {\r\n      case Units.SI:\r\n        h = enthalpy;\r\n        s = entropy;\r\n        break;\r\n      case Units.USCustomary:\r\n        h = Conversions.BtuPerLbmToKjPerKg(enthalpy);\r\n        s = Conversions.BtuPerLbmFtoKjPerKgK(entropy);\r\n        break;\r\n      case Units.MetricBarA:\r\n        h = enthalpy;\r\n        s = entropy;\r\n        break;\r\n      case Units.MetricKpa:\r\n        h = enthalpy;\r\n        s = entropy;\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    return Conversions.SteamPropertiesConversion(StmProp_fHS.SteamProperties(h, s), units)[returnIndex];\r\n  } catch (e) {\r\n    // Convert anything thrown to just the string and return it.\r\n    return e;\r\n  }\r\n}\r\n\r\nexport function CallStmProp_PfT(temperature, units) {\r\n  // try/catch block for returning properties f(h,s)\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n\r\n    // Check for purchase/trial.\r\n    licensing.checkLicense();\r\n\r\n    var t = temperature;\r\n    switch (\r\n      units // Converts the input to the standard SI values (K)\r\n    ) {\r\n      case Units.SI:\r\n        t = temperature;\r\n        break;\r\n      case Units.USCustomary:\r\n        t = Conversions.FtoK(temperature);\r\n        break;\r\n      case Units.MetricBarA:\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      case Units.MetricKpa:\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    return Conversions.PressureConversion(Region4SatPressure.SatPressure(t), units);\r\n  } catch (e) {\r\n    // Convert anything thrown to just the string and return it.\r\n    return e;\r\n  }\r\n}\r\n\r\nexport function CallStmProp_TfP(pressure, units) {\r\n  // try/catch block for returning properties f(h,s)\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n\r\n    // Check for purchase/trial.\r\n    licensing.checkLicense();\r\n\r\n    var p = pressure;\r\n    switch (\r\n      units // Converts the input to the standard SI values (MPa)\r\n    ) {\r\n      case Units.SI:\r\n        p = pressure;\r\n        break;\r\n      case Units.USCustomary:\r\n        p = Conversions.PsiToMpa(pressure);\r\n        break;\r\n      case Units.MetricBarA:\r\n        p = Conversions.BarToMpa(pressure);\r\n        break;\r\n      case Units.MetricKpa:\r\n        p = Conversions.KpaToMpa(pressure);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    return Conversions.TemperatureConversion(Region4Calculations.SatTemperature(p), units);\r\n  } catch (e) {\r\n    // Convert anything thrown to just the string and return it.\r\n    return e;\r\n  }\r\n}\r\n\r\n// Surface Tension\r\nexport function CallStmProp_YfT(temperature, units) {\r\n  // try/catch block for returning properties f(h,s)\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n\r\n    // Check for purchase/trial.\r\n    licensing.checkLicense();\r\n\r\n    var t = temperature;\r\n    switch (\r\n      units // Converts the input to the standard SI values (K)\r\n    ) {\r\n      case Units.SI:\r\n        t = temperature;\r\n        break;\r\n      case Units.USCustomary:\r\n        t = Conversions.FtoK(temperature);\r\n        break;\r\n      case Units.MetricBarA:\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      case Units.MetricKpa:\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    return Conversions.SurfaceTensionConversion(Region4Calculations.SurfaceTension(t), units);\r\n  } catch (e) {\r\n    // Convert anything thrown to just the string and return it.\r\n    return e;\r\n  }\r\n}\r\n\r\n// Region 3 only.  For testing, verifying values in R7-97 Table 33\r\nexport function CallStmProp_fVT(volume, temperature, units, returnIndex) {\r\n  try {\r\n    // Excel passes null for default parameters when not specified. See https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-parameter-options?tabs=javascript.\r\n    units = units ?? Units.SI;\r\n\r\n    // Check for purchase/trial.\r\n    // licensing.checkLicense();  TO DO I think this was giving me a problem so I commented it out\r\n\r\n    var v = 0.0;\r\n    var t = 0.0;\r\n    // Converts the inputs to the standard SI values (m3/kg, K)\r\n    switch (units) {\r\n      case Units.SI:\r\n        v = volume;\r\n        t = temperature;\r\n        break;\r\n      case Units.USCustomary:\r\n        v = Conversions.CubicFeetPerLbmToCubicMetersPerKg(volume);\r\n        t = Conversions.FtoK(temperature);\r\n        break;\r\n      case Units.MetricBarA:\r\n        v = volume;\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      case Units.MetricKpa:\r\n        v = volume;\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    // Get Steam properties, convert to correct units and return the one element.\r\n    return Conversions.SteamPropertiesConversion(Region3Calculations.Properties_fVT(v, t), units)[returnIndex]; // calls the steam properties with standard SI units and then converts to the desired units.\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Viscosity f(p,T) R12-08\r\nexport function Viscosity_fPT(pressure, temperature, units) {\r\n  try {\r\n    units = units ?? Units.SI;\r\n\r\n    var p = 0.0;\r\n    var t = 0.0;\r\n    // Converts the inputs to the standard SI values (m3/kg, K)\r\n    switch (units) {\r\n      case Units.SI:\r\n        p = pressure; //MPa\r\n        t = temperature; //K\r\n        break;\r\n      case Units.USCustomary:\r\n        p = Conversions.PsiToMpa(pressure);\r\n        t = Conversions.FtoK(temperature);\r\n        break;\r\n      case Units.MetricBarA:\r\n        p = Conversions.BarToMpa(pressure);\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      case Units.MetricKpa:\r\n        p = Conversions.KpaToMpa(pressure);\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n\r\n    var volume = CallStmProp_fPT(p, t, 0, [6], false); // StmPproperties[6] is volume\r\n    var visc;\r\n    const viscosity = Viscosity.Visc(temperature, volume, pressure);\r\n\r\n    switch (units) {\r\n      case Units.SI:\r\n        visc = viscosity;\r\n        break;\r\n      case Units.USCustomary:\r\n        visc = viscosity * Conversions.PascalSecond_To_LbfSecondPerFt2(viscosity);\r\n        break;\r\n      case Units.MetricBarA:\r\n        visc = Conversions.PascalSecond_To_Centipoise(viscosity);\r\n        break;\r\n      case Units.MetricKpa:\r\n        visc = Conversions.PascalSecond_To_Centipoise(viscosity);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    return visc;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Viscosity for testing, verifying values in R12-08 Table 4 & 5.  Doesn't check for valid pressure range (use with caution).  SI units only\r\n// functions TVM(temperature, volume) calls this function\r\nexport function Viscosity_fTV(temperature, volume) {\r\n  return Viscosity.Visc_fTV(temperature, volume);\r\n}\r\n\r\n// Conductivity function for testing values in R15-11 table 4\r\n// function Test_VTK_WO_Crit_Enh(temperature, volume) calls this function\r\n// Does not check to verify in the inputs are in a valid range, for testing only\r\nexport function Conductivity_fTV_WO_Crit_Enh(temperature, volume) {\r\n  return Conductivity.Cond_WO_crit_enh(temperature, volume);\r\n}\r\n\r\n// Conductivity function for testing values in R15-11 table 5\r\n// function Test_VTK_With_Crit_Enh(temperature, volume) calls this function\r\n// Does not check to verify in the inputs are in a valid range, for testing only\r\n// Assumes input are in Region 3\r\nexport function Conductivity_fTV_With_Crit_Enh(t, v) {\r\n  // const TR = Constants.TR; // R15-11 fig 2\r\n  const p = Region3Calculations.Properties_fVT(v, t)[0];\r\n  const visc = Viscosity.Visc_fTV(t, v);\r\n  const Cp = CallStmProp_fPT(p, t, 0, 7, false);\r\n  const Cv = CallStmProp_fPT(p, t, 0, 8, false);\r\n  const dVdP_T = CallStmProp_fPT(p, t, 0, 52, false);\r\n  const dVdP_TR = CallStmProp_fPT(p, Constants.Tc_H2O, 0, 52, false);\r\n  return Conductivity.Cond_With_crit_enh(t, v, p, visc, Cp, Cv, dVdP_T, dVdP_TR);\r\n}\r\n\r\n// Conductivity f(p,T) R15-11\r\nexport function Conductivity_fPT(pressure, temperature, units) {\r\n  try {\r\n    units = units ?? Units.SI;\r\n    var conductivity;\r\n    var cond;\r\n    var p = 0.0;\r\n    var t = 0.0;\r\n    // Converts the inputs to the standard SI values (m3/kg, K)\r\n    switch (units) {\r\n      case Units.SI:\r\n        p = pressure; //MPa\r\n        t = temperature; //K\r\n        break;\r\n      case Units.USCustomary:\r\n        p = Conversions.PsiToMpa(pressure);\r\n        t = Conversions.FtoK(temperature);\r\n        break;\r\n      case Units.MetricBarA:\r\n        p = Conversions.BarToMpa(pressure);\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      case Units.MetricKpa:\r\n        p = Conversions.KpaToMpa(pressure);\r\n        t = Conversions.CtoK(temperature);\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n\r\n    var volume = CallStmProp_fPT(p, t, 0, [6], false); // StmPproperties[6] is volume\r\n    var viscosity = Viscosity.Visc(temperature, volume, pressure); // StmPproperties[6] is volume\r\n    var Cp = CallStmProp_fPT(p, t, 0, [7], false); // StmPproperties[6] is volume\r\n    var Cv = CallStmProp_fPT(p, t, 0, [8], false); // StmPproperties[6] is volume\r\n    var dVdP_T = CallStmProp_fPT(p, t, 0, [52], false); // StmPproperties[6] is volume\r\n    var dVdP_TR = CallStmProp_fPT(p, Constants.TR, 0, [52], false); // StmPproperties[6] is volume\r\n\r\n    conductivity = Conductivity.Cond(temperature, volume, pressure, viscosity, Cp, Cv, dVdP_T, dVdP_TR);\r\n\r\n    switch (units) {\r\n      case Units.SI:\r\n        cond = conductivity;\r\n        break;\r\n      case Units.USCustomary:\r\n        cond = conductivity * Conversions.mWattPerMeterK_To_BtuPerHrFtF(conductivity);\r\n        break;\r\n      case Units.MetricBarA:\r\n        cond = conductivity;\r\n        break;\r\n      case Units.MetricKpa:\r\n        cond = conductivity;\r\n        break;\r\n      default:\r\n        throw Errors.ErrorUnitsNotInRange;\r\n    }\r\n    return cond;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for Region 3 saturation pressure psat(h) to verify the values in 3R3-03 Table 18.\r\nexport function R3Psat_fH(enthalpy) {\r\n  try {\r\n    return Region3Calculations.Reg3_PSATh(enthalpy); // returns Region 3 saturation pressure\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for Region 3 saturation pressure psat(s) to verify the values in 3R3-03 Table 20.\r\nexport function R3Psat_fS(entropy) {\r\n  try {\r\n    return Region3Calculations.Reg3_PSATs(entropy); // returns Region 3 saturation pressure\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for boundary between region 1 and region 4 as a function of entropy.\r\nexport function H1_sat_liqS(entropy) {\r\n  try {\r\n    return Region3Calculations.H1_sat_liqS(entropy); // returns Region 3 saturation pressure\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for saturated liquid boundary between region 3 and region 4 as a function of entropy.\r\nexport function H3a_sat_liqS(entropy) {\r\n  try {\r\n    return Region3Calculations.H3a_sat_liqS(entropy); // returns Region 3 saturation pressure\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for boundary between region 1 and region 4 as a function of entropy.\r\nexport function H2ab_sat_VapS(entropy) {\r\n  try {\r\n    return Region3Calculations.H2ab_sat_VapS(entropy); // returns Region 3 saturation pressure\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for saturated liquid boundary between region 3 and region 4 as a function of entropy.\r\nexport function H2c3b_sat_VapS(entropy) {\r\n  try {\r\n    return Region3Calculations.H2c3b_sat_VapS(entropy); // returns Region 3 saturation pressure\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for the boundary between regions 1 & 3 as a function of entropy.\r\nexport function Hb13S(entropy) {\r\n  try {\r\n    return Region3Calculations.Hb13S(entropy); // returns Region 3 saturation pressure\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for the boundary between regions 2 & 3 as a function of temperature.\r\nexport function Tb23HS(enthalpy, entropy) {\r\n  try {\r\n    return Region3Calculations.Tb23HS(enthalpy, entropy); // returns Region 3 saturation pressure\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for the saturation temperature as a function of h & s\r\nexport function TsatHS(enthalpy, entropy) {\r\n  try {\r\n    return Region3Calculations.TsatHS(enthalpy, entropy); // returns Region 3 saturation pressure\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for the T3ab(p)\r\nexport function T3ab(pressure) {\r\n  try {\r\n    return Region3Calculations.T3ab(pressure); // returns Region 3 T3ab(p) boundary SR5 eq 2\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3op(p)\r\nexport function T3op(pressure) {\r\n  try {\r\n    return Region3Calculations.T3op(pressure); // returns Region 3 T3op(p) boundary SR5 eq 2\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3ef(p)\r\nexport function T3ef(pressure) {\r\n  try {\r\n    return Region3Calculations.T3ef(pressure); // returns Region 3 T3ef(p) boundary SR5 eq 2\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3cd(p)\r\nexport function T3cd(pressure) {\r\n  try {\r\n    return Region3Calculations.T3cd(pressure); // returns Region 3 T3cd(p) boundary SR5 eq 1\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3gh(p)\r\nexport function T3gh(pressure) {\r\n  try {\r\n    return Region3Calculations.T3gh(pressure); // returns Region 3 T3gh(p) boundary SR5 eq 1\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3ij(p)\r\nexport function T3ij(pressure) {\r\n  try {\r\n    return Region3Calculations.T3ij(pressure); // returns Region 3 T3ij(p) boundary SR5 eq 1\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3jk(p)\r\nexport function T3jk(pressure) {\r\n  try {\r\n    return Region3Calculations.T3jk(pressure); // returns Region 3 T3jk(p) boundary SR5 eq 1\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3mn(p)\r\nexport function T3mn(pressure) {\r\n  try {\r\n    return Region3Calculations.T3mn(pressure); // returns Region 3 T3mn(p) boundary SR5 eq 1\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3qu(p)\r\nexport function T3qu(pressure) {\r\n  try {\r\n    return Region3Calculations.T3qu(pressure); // returns Region 3 T3qu(p) boundary SR5 eq 1\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3rx(p)\r\nexport function T3rx(pressure) {\r\n  try {\r\n    return Region3Calculations.T3rx(pressure); // returns Region 3 T3rx(p) boundary SR5 eq 1\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3uv(p)\r\nexport function T3uv(pressure) {\r\n  try {\r\n    return Region3Calculations.T3uv(pressure); // returns Region 3 T3uv(p) boundary SR5 eq 1\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n\r\n// Debug Function for T3wx(p)\r\nexport function T3wx(pressure) {\r\n  try {\r\n    return Region3Calculations.T3wx(pressure); // returns Region 3 T3wx(p) boundary SR5 eq 1\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n}\r\n","import * as H2o from \"./H2oProperties.js\";\r\nimport * as Units from \"./Units.js\";\r\n//import * as Errors from \"./Errors.js\";\r\n\r\n/*const returnName = {\r\n  pressure: 0,\r\n  temperature: 1,\r\n  quality: 2,\r\n  enthalpy: 3,\r\n  entropy: 4,\r\n  internalenergy: 5,\r\n  volume: 6,\r\n  isobaricheat: 7,\r\n  isochoricheat: 8,\r\n  speedofsound: 9,\r\n  dpdt_v: 12,\r\n  dpdt_u: 13,\r\n  dpdt_h: 14,\r\n  dpdt_s: 15,\r\n  dpdv_t: 16,\r\n  dpdv_u: 17,\r\n  dpdv_h: 18,\r\n  dpdv_s: 19,\r\n  dpdu_t: 20,\r\n  dpdu_v: 21,\r\n  dpdu_h: 22,\r\n  dpdu_s: 23,\r\n  dpdh_t: 24,\r\n  dpdh_v: 25,\r\n  dpdh_u: 26,\r\n  dpdh_s: 27,\r\n  dpds_t: 28,\r\n  dpds_v: 29,\r\n  dpds_u: 30,\r\n  dpds_h: 31,\r\n  dtdp_v: 32,\r\n  dtdp_u: 33,\r\n  dtdp_h: 34,\r\n  dtdp_s: 35,\r\n  dtdv_p: 36,\r\n  dtdv_u: 37,\r\n  dtdv_h: 38,\r\n  dtdv_s: 39,\r\n  dtdu_p: 40,\r\n  dtdu_v: 41,\r\n  dtdu_h: 42,\r\n  dtdu_s: 43,\r\n  dtdh_p: 44,\r\n  dtdh_v: 45,\r\n  dtdh_u: 46,\r\n  dtdh_s: 47,\r\n  dtds_p: 48,\r\n  dtds_v: 49,\r\n  dtds_u: 50,\r\n  dtds_h: 51,\r\n  dvdp_t: 52,\r\n  dvdp_u: 53,\r\n  dvdp_h: 54,\r\n  dvdp_s: 55,\r\n  dvdt_p: 56,\r\n  dvdt_u: 57,\r\n  dvdt_h: 58,\r\n  dvdt_s: 59,\r\n  dvdu_p: 60,\r\n  dvdu_t: 61,\r\n  dvdu_h: 62,\r\n  dvdu_s: 63,\r\n  dvdh_p: 64,\r\n  dvdh_t: 65,\r\n  dvdh_u: 66,\r\n  dvdh_s: 67,\r\n  dvds_p: 68,\r\n  dvds_t: 69,\r\n  dvds_u: 70,\r\n  dvds_h: 71,\r\n  dudp_t: 72,\r\n  dudp_v: 73,\r\n  dudp_h: 74,\r\n  dudp_s: 75,\r\n  dudt_p: 76,\r\n  dudt_v: 77,\r\n  dudt_h: 78,\r\n  dudt_s: 79,\r\n  dudv_p: 80,\r\n  dudv_t: 81,\r\n  dudv_h: 82,\r\n  dudv_s: 83,\r\n  dudh_p: 84,\r\n  dudh_t: 85,\r\n  dudh_v: 86,\r\n  dudh_s: 87,\r\n  duds_p: 88,\r\n  duds_t: 89,\r\n  duds_v: 90,\r\n  duds_h: 91,\r\n  dhdp_t: 92,\r\n  dhdp_v: 93,\r\n  dhdp_u: 94,\r\n  dhdp_s: 95,\r\n  dhdt_p: 96,\r\n  dhdt_v: 97,\r\n  dhdt_u: 98,\r\n  dhdt_s: 99,\r\n  dhdv_p: 100,\r\n  dhdv_t: 101,\r\n  dhdv_u: 102,\r\n  dhdv_s: 103,\r\n  dhdu_p: 104,\r\n  dhdu_t: 105,\r\n  dhdu_v: 106,\r\n  dhdu_s: 107,\r\n  dhds_p: 108,\r\n  dhds_t: 109,\r\n  dhds_v: 110,\r\n  dhds_u: 111,\r\n  dsdp_t: 112,\r\n  dsdp_v: 113,\r\n  dsdp_u: 114,\r\n  dsdp_h: 115,\r\n  dsdt_p: 116,\r\n  dsdt_v: 117,\r\n  dsdt_u: 118,\r\n  dsdt_h: 119,\r\n  dsdv_p: 120,\r\n  dsdv_t: 121,\r\n  dsdv_u: 122,\r\n  dsdv_h: 123,\r\n  dsdu_p: 124,\r\n  dsdu_t: 125,\r\n  dsdu_v: 126,\r\n  dsdu_h: 127,\r\n  dsdh_p: 128,\r\n  dsdh_t: 129,\r\n  dsdh_v: 130,\r\n  dsdh_u: 131,\r\n};\r\n\r\n// Given a string, return the index from Units.VectorParameters. Throws if can't find the value.\r\nfunction nameToIndex(name) {\r\n  return returnName[name.toLowerCase()];\r\n}\r\n*/\r\n\r\n// Function #1\r\n/**\r\n * Sat Pressure f(T): (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/saturation-pressure-f_t/\r\n * @param {number} temperature (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa, (1)psia, (2)bara, (3)kPa\r\n */\r\nexport function TP(temperature, units) {\r\n  return H2o.CallStmProp_PfT(temperature, units);\r\n}\r\n\r\n// Function #2\r\n/**\r\n * Sat Temperature f(P):  (0)K, (1)°F, (2)°C, (3)°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/saturation-temperature-f_p/\r\n * @param {number} pressure(0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns  (0)K, (1)°F, (2)°C, (3)°C\r\n */\r\nexport function PT(pressure, units) {\r\n  return H2o.CallStmProp_TfP(pressure, units);\r\n}\r\n\r\n// Function #3\r\n// IAWPS R1-76\r\n/**\r\n * Surface Tension f(T): (0)mN/m, (1)lbf/ft, (2)mN/m, (3)mN/m\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/surface-tension-f_t/\r\n * @param {number} temperature (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)mN/m, (1)lbf/ft, (2)mN/m, (3)mN/m\r\n */\r\nexport function TY(temperature, units) {\r\n  return H2o.CallStmProp_YfT(temperature, units);\r\n}\r\n\r\n// Function #4\r\n/**\r\n * Enthalpy f(P,T): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/enthalpy-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @param {number} [metastable] false=normal, true=metastable\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function PTH(pressure, temperature, units, metastable) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.Enthalpy, metastable);\r\n}\r\n\r\n// Function #5\r\n/**\r\n * Entropy f(P,T): (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/entropy-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @param {number} [metastable] false=normal, true=metastable\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PTS(pressure, temperature, units, metastable) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.Entropy, metastable);\r\n}\r\n\r\n// Function #6\r\n/**\r\n * Internal Energy f(P,T): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/internal-energy-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @param {number} [metastable] false=normal, true=metastable\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function PTU(pressure, temperature, units, metastable) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.InternalEnergy, metastable);\r\n}\r\n\r\n// Function #7\r\n/**\r\n * Specific Volume f(P,T): (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/specific-volume-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @param {number} [metastable] false=normal, true=metastable\r\n * @returns (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n */\r\nexport function PTV(pressure, temperature, units, metastable) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.Volume, metastable);\r\n}\r\n\r\n// Function #8\r\n/**\r\n * Constant Pressure Specific Heat f(P,T): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-pressure-specific-heat-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @param {number} [metastable] false=normal, true=metastable\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PTCp(pressure, temperature, units, metastable) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.IsobaricHeat, metastable);\r\n}\r\n\r\n// Function #9\r\n/**\r\n * Constant Volumn Specific Heat f(P,T): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-volume-specific-heat-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @param {number} [metastable] false=normal, true=metastable\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PTCv(pressure, temperature, units, metastable) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.IsochoricHeat, metastable);\r\n}\r\n\r\n// Function #10\r\n/**\r\n * Speed of Sound f(P,T): (0)m/s, (1)ft/s, (2)m/s, (3)m/s\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/speed-of-sound-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @param {number} [metastable] false=normal, true=metastable\r\n * @returns (0)m/s, (1)ft/s, (2)m/s, (3)m/s\r\n */\r\nexport function PTW(pressure, temperature, units, metastable) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.SpeedOfSound, metastable);\r\n}\r\n\r\n// Function #11\r\n/**\r\n * Temperature f(P,H):  (0)K, (1)°F, (2)°C, (3)°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/temperature-f_ph/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns  (0)K, (1)°F, (2)°C, (3)°C\r\n */\r\nexport function PHT(pressure, enthalpy, units) {\r\n  return H2o.CallStmProp_fPH(pressure, enthalpy, units, Units.VectorParameters.Temperature);\r\n}\r\n\r\n// Function #12\r\n/**\r\n * Specific Entropy f(P,H): (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/entropy-f_ph/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PHS(pressure, enthalpy, units) {\r\n  return H2o.CallStmProp_fPH(pressure, enthalpy, units, Units.VectorParameters.Entropy);\r\n}\r\n\r\n// Function #13\r\n/**\r\n * Internal Energy f(P,H): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/internal-energy-f_ph/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function PHU(pressure, enthalpy, units) {\r\n  return H2o.CallStmProp_fPH(pressure, enthalpy, units, Units.VectorParameters.InternalEnergy);\r\n}\r\n\r\n// Function #14\r\n/**\r\n * Specific Volume f(P,H): (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/specific-volume-f_ph/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n */\r\nexport function PHV(pressure, enthalpy, units) {\r\n  return H2o.CallStmProp_fPH(pressure, enthalpy, units, Units.VectorParameters.Volume);\r\n}\r\n\r\n// Function #15\r\n/**\r\n * Constant Pressure Specific Heat f(P,H): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-pressure-specific-heat-f_ph/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PHCp(pressure, enthalpy, units) {\r\n  return H2o.CallStmProp_fPH(pressure, enthalpy, units, Units.VectorParameters.IsobaricHeat);\r\n}\r\n\r\n// Function #16\r\n/**\r\n * Constant Volumn Specific Heat f(P,H): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-volume-specific-heat-f_ph/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PHCv(pressure, enthalpy, units) {\r\n  return H2o.CallStmProp_fPH(pressure, enthalpy, units, Units.VectorParameters.IsochoricHeat);\r\n}\r\n\r\n// Function #17\r\n/**\r\n * Speed of Sound f(P,H): (0)m/s, (1)ft/s, (2)m/s, (3)m/s\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/speed-of-sound-f_ph/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)m/s, (1)ft/s, (2)m/s, (3)m/s\r\n */\r\nexport function PHW(pressure, enthalpy, units) {\r\n  return H2o.CallStmProp_fPH(pressure, enthalpy, units, Units.VectorParameters.SpeedOfSound);\r\n}\r\n\r\n// Function #18\r\n/**\r\n * Quality f(P,H): dimensionless\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/quality-f_ph/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns dimensionless\r\n */\r\nexport function PHQ(pressure, enthalpy, units) {\r\n  return H2o.CallStmProp_fPH(pressure, enthalpy, units, Units.VectorParameters.Quality);\r\n}\r\n\r\n// Function #19\r\n/**\r\n * Temperature f(P,S):  (0)K, (1)°F, (2)°C, (3)°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/temperature-f_ps/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns  (0)K, (1)°F, (2)°C, (3)°C\r\n */\r\nexport function PST(pressure, entropy, units) {\r\n  return H2o.CallStmProp_fPS(pressure, entropy, units, Units.VectorParameters.Temperature);\r\n}\r\n\r\n// Function #20\r\n/**\r\n * Enthalpy f(P,S): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/enthalpy-f_ps/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function PSH(pressure, entropy, units) {\r\n  return H2o.CallStmProp_fPS(pressure, entropy, units, Units.VectorParameters.Enthalpy);\r\n}\r\n\r\n// Function #21\r\n/**\r\n * Internal Energy f(P,S): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/internal-energy-f_ps/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function PSU(pressure, entropy, units) {\r\n  return H2o.CallStmProp_fPS(pressure, entropy, units, Units.VectorParameters.InternalEnergy);\r\n}\r\n\r\n// Function #22\r\n/**\r\n * Specific Volume f(P,S): (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/specific-volume-f_ps/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n */\r\nexport function PSV(pressure, entropy, units) {\r\n  return H2o.CallStmProp_fPS(pressure, entropy, units, Units.VectorParameters.Volume);\r\n}\r\n\r\n// Function #23\r\n/**\r\n * Constant Pressure Specific Heat f(P,S): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-pressure-specific-heat-f_ps/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PSCp(pressure, entropy, units) {\r\n  return H2o.CallStmProp_fPS(pressure, entropy, units, Units.VectorParameters.IsobaricHeat);\r\n}\r\n\r\n// Function #24\r\n/**\r\n * Constant Volumn Specific Heat f(P,S): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-volume-specific-heat-f_ps/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PSCv(pressure, entropy, units) {\r\n  return H2o.CallStmProp_fPS(pressure, entropy, units, Units.VectorParameters.IsochoricHeat);\r\n}\r\n\r\n// Function #25\r\n/**\r\n * Speed of Sound f(P,S): (0)m/s, (1)ft/s, (2)m/s, (3)m/s\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/speed-of-sound-f_ps/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)m/s, (1)ft/s, (2)m/s, (3)m/s\r\n */\r\nexport function PSW(pressure, entropy, units) {\r\n  return H2o.CallStmProp_fPS(pressure, entropy, units, Units.VectorParameters.SpeedOfSound);\r\n}\r\n\r\n// Function #26\r\n/**\r\n * Quality f(P,S): dimensionless\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/quality-f_ps/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns dimensionless\r\n */\r\nexport function PSQ(pressure, entropy, units) {\r\n  return H2o.CallStmProp_fPS(pressure, entropy, units, Units.VectorParameters.Quality);\r\n}\r\n\r\n// Function #27\r\n/**\r\n * Pressure f(H,S): (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/pressure-f_hs/\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa, (1)psia, (2)bara, (3)kPa\r\n */\r\nexport function HSP(enthalpy, entropy, units) {\r\n  return H2o.CallStmProp_fHS(enthalpy, entropy, units, Units.VectorParameters.Pressure);\r\n}\r\n\r\n// Function #28\r\n/**\r\n * Temperature f(H,S):  (0)K, (1)°F, (2)°C, (3)°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/temperature-f_hs/\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns  (0)K, (1)°F, (2)°C, (3)°C\r\n */\r\nexport function HST(enthalpy, entropy, units) {\r\n  return H2o.CallStmProp_fHS(enthalpy, entropy, units, Units.VectorParameters.Temperature);\r\n}\r\n\r\n// Function #29\r\n/**\r\n * Quality f(H,S): dimensionless\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/quality-f_hs/\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns dimensionless\r\n */\r\nexport function HSQ(enthalpy, entropy, units) {\r\n  return H2o.CallStmProp_fHS(enthalpy, entropy, units, Units.VectorParameters.Quality);\r\n}\r\n\r\n// Function #30\r\n/**\r\n * Internal Energy f(H,S): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/internal-energy-f_hs/\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function HSU(enthalpy, entropy, units) {\r\n  return H2o.CallStmProp_fHS(enthalpy, entropy, units, Units.VectorParameters.InternalEnergy);\r\n}\r\n\r\n// Function #31\r\n/**\r\n * Specific Volume f(H,S): (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/specific-volume-f_hs/\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n */\r\nexport function HSV(enthalpy, entropy, units) {\r\n  return H2o.CallStmProp_fHS(enthalpy, entropy, units, Units.VectorParameters.Volume);\r\n}\r\n\r\n// Function #32\r\n/**\r\n * Constant Pressure Specific Heat f(H,S): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-pressure-specific-heat-f_hs/\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function HSCp(enthalpy, entropy, units) {\r\n  return H2o.CallStmProp_fHS(enthalpy, entropy, units, Units.VectorParameters.IsobaricHeat);\r\n}\r\n\r\n// Function #33\r\n/**\r\n * Constant Volumn Specific Heat f(H,S): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-volume-specific-heat-f_hs/\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function HSCv(enthalpy, entropy, units) {\r\n  return H2o.CallStmProp_fHS(enthalpy, entropy, units, Units.VectorParameters.IsochoricHeat);\r\n}\r\n\r\n// Function #34\r\n/**\r\n * Speed of Sound f(H,S): (0)m/s, (1)ft/s, (2)m/s, (3)m/s\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/speed-of-sound-f_hs/\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)m/s, (1)ft/s, (2)m/s, (3)m/s\r\n */\r\nexport function HSW(enthalpy, entropy, units) {\r\n  return H2o.CallStmProp_fHS(enthalpy, entropy, units, Units.VectorParameters.SpeedOfSound);\r\n}\r\n\r\n// Function #35\r\n/**\r\n * Enthalpy f(P,Q): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/enthalpy-f_pq/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function PQH(pressure, quality, units) {\r\n  return H2o.CallStmProp_fPQ(pressure, quality, units, Units.VectorParameters.Enthalpy);\r\n}\r\n\r\n// Function #36\r\n/**\r\n * Entropy f(P,Q): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/entropy-f_pq/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PQS(pressure, quality, units) {\r\n  return H2o.CallStmProp_fPQ(pressure, quality, units, Units.VectorParameters.Entropy);\r\n}\r\n\r\n// Function #37\r\n/**\r\n * Internal Energy f(P,Q): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/internal-energy-f_pq/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function PQU(pressure, quality, units) {\r\n  return H2o.CallStmProp_fPQ(pressure, quality, units, Units.VectorParameters.InternalEnergy);\r\n}\r\n\r\n// Function #38\r\n/**\r\n * Specific Volume f(P,Q): (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/specific-volume-f_pq/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n */\r\nexport function PQV(pressure, quality, units) {\r\n  return H2o.CallStmProp_fPQ(pressure, quality, units, Units.VectorParameters.Volume);\r\n}\r\n\r\n// Function #39\r\n/**\r\n * Constant Pressure Specific Heat f(P,Q): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-pressure-specific-heat-f_pq/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PQCp(pressure, quality, units) {\r\n  return H2o.CallStmProp_fPQ(pressure, quality, units, Units.VectorParameters.IsobaricHeat);\r\n}\r\n\r\n// Function #40\r\n/**\r\n * Constant Volumn Specific Heat f(P,Q): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-volume-specific-heat-f_pq/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function PQCv(pressure, quality, units) {\r\n  return H2o.CallStmProp_fPQ(pressure, quality, units, Units.VectorParameters.IsochoricHeat);\r\n}\r\n\r\n// Function #41\r\n/**\r\n * Enthalpy f(T,Q): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/enthalpy-f_tq/\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function TQH(temperature, quality, units) {\r\n  return H2o.CallStmProp_fTQ(temperature, quality, units, Units.VectorParameters.Enthalpy);\r\n}\r\n\r\n// Function #42\r\n/**\r\n * Entropy f(T,Q): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/entropy-f_tq/\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function TQS(temperature, quality, units) {\r\n  return H2o.CallStmProp_fTQ(temperature, quality, units, Units.VectorParameters.Entropy);\r\n}\r\n\r\n// Function #43\r\n/**\r\n * Internal Energy f(T,Q): (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/internal-energy-f_tq/\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n */\r\nexport function TQU(temperature, quality, units) {\r\n  return H2o.CallStmProp_fTQ(temperature, quality, units, Units.VectorParameters.InternalEnergy);\r\n}\r\n\r\n// Function #44\r\n/**\r\n * Specific Volume f(T,Q): (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/specific-volume-f_tq/\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n */\r\nexport function TQV(temperature, quality, units) {\r\n  return H2o.CallStmProp_fTQ(temperature, quality, units, Units.VectorParameters.Volume);\r\n}\r\n\r\n// Function #45\r\n/**\r\n * Constant Pressure Specific Heat f(T,Q): 0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-pressure-specific-heat-f_tq/\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function TQCp(temperature, quality, units) {\r\n  return H2o.CallStmProp_fTQ(temperature, quality, units, Units.VectorParameters.IsobaricHeat);\r\n}\r\n\r\n// Function #46\r\n/**\r\n * Constant Volumn Specific Heat f(T,Q): (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/constant-volume-specific-heat-f_tq/\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} quality dimensionless\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n */\r\nexport function TQCv(temperature, quality, units) {\r\n  return H2o.CallStmProp_fTQ(temperature, quality, units, Units.VectorParameters.IsochoricHeat);\r\n}\r\n\r\n// Function #47\r\n/**\r\n * Viscosity f(P,T): (0)Pa·s, (1)lbf·s/ft³, (2)cP, (3)cP\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/viscosity-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)Pa·s, (1)lbf·s/ft², (2)cP, (3)cP\r\n */\r\nexport function PTM(pressure, temperature, units) {\r\n  return H2o.Viscosity_fPT(pressure, temperature, units);\r\n}\r\n\r\n// Function #48\r\n/**\r\n * Thermal Conductivity f(P,T): (0)mW/(m·K), (1) BTU/(hr⋅ft⋅°F), (2)mW/(m·K), (3)mW/(m·K)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/primary_functions/thermal-conductivity-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)mW/(m·K), (1) BTU/(hr⋅ft⋅°F), (2)mW/(m·K), (3)mW/(m·K)\r\n */\r\nexport function PTK(pressure, temperature, units) {\r\n  return H2o.Conductivity_fPT(pressure, temperature, units);\r\n}\r\n\r\n// Function #49\r\n/**\r\n * dPdT_V f(P,T): (0)MPa/K, (1)psia/°R, (2)bara/°C, (3)kPa/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdt_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/K, (1)psia/°R, (2)bara/°C, (3)kPa/°C\r\n */\r\nexport function PT_dPdT_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdT_V, false);\r\n}\r\n\r\n// Function #50\r\n/**\r\n * dPdT_U f(P,T): (0)MPa/K, (1)psia/°R, (2)bara/°C, (3)kPa/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdt_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/K, (1)psia/°R, (2)bara/°C, (3)kPa/°C\r\n */\r\nexport function PT_dPdT_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdT_U, false);\r\n}\r\n\r\n// Function #51\r\n/**\r\n * dPdT_H f(P,T): (0)MPa/K, (1)psia/°R, (2)bara/°C, (3)kPa/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdt_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/K, (1)psia/°R, (2)bara/°C, (3)kPa/°C\r\n */\r\nexport function PT_dPdT_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdT_H, false);\r\n}\r\n\r\n// Function #52\r\n/**\r\n * dPdT_S f(P,T): (0)MPa/K, (1)psia/°R, (2)bara/°C, (3)kPa/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdt_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/K, (1)psia/°R, (2)bara/°C, (3)kPa/°C\r\n */\r\nexport function PT_dPdT_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdT_S, false);\r\n}\r\n\r\n// Function #53\r\n/**\r\n * dPdV_T f(P,T): (0)MPa/(m³/kg), (1)psia/(ft³/lbm), (2)bara/(m³/kg), (3)kPa/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdv_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(m³/kg), (1)psia/(ft³/lbm), (2)bara/(m³/kg), (3)kPa/(m³/kg)\r\n */\r\nexport function PT_dPdV_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdV_T, false);\r\n}\r\n\r\n// Function #54\r\n/**\r\n * dPdV_U f(P,T): (0)MPa/(m³/kg), (1)psia/(ft³/lbm), (2)bara/(m³/kg), (3)kPa/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdv_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(m³/kg), (1)psia/(ft³/lbm), (2)bara/(m³/kg), (3)kPa/(m³/kg)\r\n */\r\nexport function PT_dPdV_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdV_U, false);\r\n}\r\n\r\n// Function #55\r\n/**\r\n * dPdV_H f(P,T): (0)MPa/(m³/kg), (1)psia/(ft³/lbm), (2)bara/(m³/kg), (3)kPa/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdv_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(m³/kg), (1)psia/(ft³/lbm), (2)bara/(m³/kg), (3)kPa/(m³/kg)\r\n */\r\nexport function PT_dPdV_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdV_H, false);\r\n}\r\n\r\n// Function #56\r\n/**\r\n * dPdV_S f(P,T): (0)MPa/(m³/kg), (1)psia/(ft³/lbm), (2)bara/(m³/kg), (3)kPa/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdv_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(m³/kg), (1)psia/(ft³/lbm), (2)bara/(m³/kg), (3)kPa/(m³/kg)\r\n */\r\nexport function PT_dPdV_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdV_S, false);\r\n}\r\n\r\n// Function #57\r\n/**\r\n * dPdU_T f(P,T): (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdu_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n */\r\nexport function PT_dPdU_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdU_T, false);\r\n}\r\n\r\n// Function #58\r\n/**\r\n * dPdU_V f(P,T): (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdu_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n */\r\nexport function PT_dPdU_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdU_V, false);\r\n}\r\n\r\n// Function #59\r\n/**\r\n * dPdU_H f(P,T): (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdu_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n */\r\nexport function PT_dPdU_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdU_H, false);\r\n}\r\n\r\n// Function #60\r\n/**\r\n * dPdU_S f(P,T): (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdu_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n */\r\nexport function PT_dPdU_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdU_S, false);\r\n}\r\n\r\n// Function #61\r\n/**\r\n * dPdH_T f(P,T): (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdh_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n */\r\nexport function PT_dPdH_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdH_T, false);\r\n}\r\n\r\n// Function #62\r\n/**\r\n * dPdH_V f(P,T): (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdh_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n */\r\nexport function PT_dPdH_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdH_V, false);\r\n}\r\n\r\n// Function #63\r\n/**\r\n * dPdH_U f(P,T): (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdh_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n */\r\nexport function PT_dPdH_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdH_U, false);\r\n}\r\n\r\n// Function #64\r\n/**\r\n * dPdH_S f(P,T): (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpdh_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/(kJ/kg), (1)psia/(BTU/lbm), (2)bara/(kJ/kg), (3)kPa/(kJ/kg)\r\n */\r\nexport function PT_dPdH_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdH_S, false);\r\n}\r\n\r\n// Function #65\r\n/**\r\n * dPdS_T f(P,T): (0)MPa/[kJ/(kg·K)], (1)psia/[BTU/(lbm·°R)], (2)bara/[kJ/(kg·°C)], (3)kPa/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpds_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/[kJ/(kg·K)], (1)psia/[BTU/(lbm·°R)], (2)bara/[kJ/(kg·°C)], (3)kPa/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dPdS_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdS_T, false);\r\n}\r\n\r\n// Function #66\r\n/**\r\n * dPdS_V f(P,T): (0)MPa/[kJ/(kg·K)], (1)psia/[BTU/(lbm·°R)], (2)bara/[kJ/(kg·°C)], (3)kPa/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpds_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/[kJ/(kg·K)], (1)psia/[BTU/(lbm·°R)], (2)bara/[kJ/(kg·°C)], (3)kPa/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dPdS_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdS_V, false);\r\n}\r\n\r\n// Function #67\r\n/**\r\n * dPdS_U f(P,T): (0)MPa/[kJ/(kg·K)], (1)psia/[BTU/(lbm·°R)], (2)bara/[kJ/(kg·°C)], (3)kPa/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpds_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/[kJ/(kg·K)], (1)psia/[BTU/(lbm·°R)], (2)bara/[kJ/(kg·°C)], (3)kPa/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dPdS_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdS_U, false);\r\n}\r\n\r\n// Function #68\r\n/**\r\n * dPdS_H f(P,T): (0)MPa/[kJ/(kg·K)], (1)psia/[BTU/(lbm·°R)], (2)bara/[kJ/(kg·°C)], (3)kPa/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dpds_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa/[kJ/(kg·K)], (1)psia/[BTU/(lbm·°R)], (2)bara/[kJ/(kg·°C)], (3)kPa/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dPdS_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dPdS_H, false);\r\n}\r\n\r\n// Function #69\r\n/**\r\n * dTdP_V f(P,T): (0)K/MPa, (1)°R/psia, (2)°C/bara, (3)°C/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdp_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/MPa, (1)°R/psia, (2)°C/bara, (3)°C/kPa\r\n */\r\nexport function PT_dTdP_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdP_V, false);\r\n}\r\n\r\n// Function #70\r\n/**\r\n * dTdP_U f(P,T): (0)K/MPa, (1)°R/psia, (2)°C/bara, (3)°C/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdp_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/MPa, (1)°R/psia, (2)°C/bara, (3)°C/kPa\r\n */\r\nexport function PT_dTdP_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdP_U, false);\r\n}\r\n\r\n// Function #71\r\n/**\r\n * dTdP_H f(P,T): (0)K/MPa, (1)°R/psia, (2)°C/bara, (3)°C/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdp_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/MPa, (1)°R/psia, (2)°C/bara, (3)°C/kPa\r\n */\r\nexport function PT_dTdP_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdP_H, false);\r\n}\r\n\r\n// Function #72\r\n/**\r\n * dTdP_S f(P,T): (0)K/MPa, (1)°R/psia, (2)°C/bara, (3)°C/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdp_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/MPa, (1)°R/psia, (2)°C/bara, (3)°C/kPa\r\n */\r\nexport function PT_dTdP_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdP_S, false);\r\n}\r\n\r\n// Function #73\r\n/**\r\n * dTdV_P f(P,T): (0)K/(m³/kg), (1)°R/(ft³/lbm), (2)°C/(m³/kg), (3)°C/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdv_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(m³/kg), (1)°R/(ft³/lbm), (2)°C/(m³/kg), (3)°C/(m³/kg)\r\n */\r\nexport function PT_dTdV_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdV_P, false);\r\n}\r\n\r\n// Function #74\r\n/**\r\n * dTdV_U f(P,T): (0)K/(m³/kg), (1)°R/(ft³/lbm), (2)°C/(m³/kg), (3)°C/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdv_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(m³/kg), (1)°R/(ft³/lbm), (2)°C/(m³/kg), (3)°C/(m³/kg)\r\n */\r\nexport function PT_dTdV_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdV_U, false);\r\n}\r\n\r\n// Function #75\r\n/**\r\n * dTdV_H f(P,T): (0)K/(m³/kg), (1)°R/(ft³/lbm), (2)°C/(m³/kg), (3)°C/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdv_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(m³/kg), (1)°R/(ft³/lbm), (2)°C/(m³/kg), (3)°C/(m³/kg)\r\n */\r\nexport function PT_dTdV_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdV_H, false);\r\n}\r\n\r\n// Function #76\r\n/**\r\n * dTdV_S f(P,T): (0)K/(m³/kg), (1)°R/(ft³/lbm), (2)°C/(m³/kg), (3)°C/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdv_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(m³/kg), (1)°R/(ft³/lbm), (2)°C/(m³/kg), (3)°C/(m³/kg)\r\n */\r\nexport function PT_dTdV_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdV_S, false);\r\n}\r\n\r\n// Function #77\r\n/**\r\n * dTdU_P f(P,T): (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdu_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n */\r\nexport function PT_dTdU_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdU_P, false);\r\n}\r\n\r\n// Function #78\r\n/**\r\n * dTdU_V f(P,T): (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdu_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n */\r\nexport function PT_dTdU_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdU_V, false);\r\n}\r\n\r\n// Function #79\r\n/**\r\n * dTdU_H f(P,T): (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdu_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n */\r\nexport function PT_dTdU_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdU_H, false);\r\n}\r\n\r\n// Function #80\r\n/**\r\n * dTdU_S f(P,T): (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdu_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n */\r\nexport function PT_dTdU_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdU_S, false);\r\n}\r\n\r\n// Function #81\r\n/**\r\n * dTdH_P f(P,T): (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdh_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n */\r\nexport function PT_dTdH_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdH_P, false);\r\n}\r\n\r\n// Function #82\r\n/**\r\n * dTdH_V f(P,T): (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdh_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n */\r\nexport function PT_dTdH_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdH_V, false);\r\n}\r\n\r\n// Function #83\r\n/**\r\n * dTdH_U f(P,T): (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdh_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n */\r\nexport function PT_dTdH_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdH_U, false);\r\n}\r\n\r\n// Function #84\r\n/**\r\n * dTdH_S f(P,T): (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtdh_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/(kJ/kg), (1)°R/(BTU/lbm), (2)°C/(kJ/kg), (3)°C/(kJ/kg)\r\n */\r\nexport function PT_dTdH_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdH_S, false);\r\n}\r\n\r\n// Function #85\r\n/**\r\n * dTdS_P f(P,T): (0)K/[kJ/(kg·K)], (1)°R/[BTU/(lbm·°R)], (2)°C/[kJ/(kg·°C)], (3)°C/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtds_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/[kJ/(kg·K)], (1)°R/[BTU/(lbm·°R)], (2)°C/[kJ/(kg·°C)], (3)°C/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dTdS_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdS_P, false);\r\n}\r\n\r\n// Function #86\r\n/**\r\n * dTdS_V f(P,T): (0)K/[kJ/(kg·K)], (1)°R/[BTU/(lbm·°R)], (2)°C/[kJ/(kg·°C)], (3)°C/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtds_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/[kJ/(kg·K)], (1)°R/[BTU/(lbm·°R)], (2)°C/[kJ/(kg·°C)], (3)°C/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dTdS_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdS_V, false);\r\n}\r\n\r\n// Function #87\r\n/**\r\n * dTdS_U f(P,T): (0)K/[kJ/(kg·K)], (1)°R/[BTU/(lbm·°R)], (2)°C/[kJ/(kg·°C)], (3)°C/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtds_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/[kJ/(kg·K)], (1)°R/[BTU/(lbm·°R)], (2)°C/[kJ/(kg·°C)], (3)°C/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dTdS_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdS_U, false);\r\n}\r\n\r\n// Function #88\r\n/**\r\n * dTdS_H f(P,T): (0)K/[kJ/(kg·K)], (1)°R/[BTU/(lbm·°R)], (2)°C/[kJ/(kg·°C)], (3)°C/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dtds_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)K/[kJ/(kg·K)], (1)°R/[BTU/(lbm·°R)], (2)°C/[kJ/(kg·°C)], (3)°C/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dTdS_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dTdS_H, false);\r\n}\r\n\r\n// Function #89\r\n/**\r\n * dVdP_T f(P,T): (0)(m³/kg)/MPa, (1)(ft³/lbm)/psia, (2)(m³/kg)/bara, (3)(m³/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdp_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/MPa, (1)(ft³/lbm)/psia, (2)(m³/kg)/bara, (3)(m³/kg)/kPa\r\n */\r\nexport function PT_dVdP_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdP_T, false);\r\n}\r\n\r\n// Function #90\r\n/**\r\n * dVdP_U f(P,T): (0)(m³/kg)/MPa, (1)(ft³/lbm)/psia, (2)(m³/kg)/bara, (3)(m³/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdp_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/MPa, (1)(ft³/lbm)/psia, (2)(m³/kg)/bara, (3)(m³/kg)/kPa\r\n */\r\nexport function PT_dVdP_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdP_U, false);\r\n}\r\n\r\n// Function #91\r\n/**\r\n * dVdP_H f(P,T): (0)(m³/kg)/MPa, (1)(ft³/lbm)/psia, (2)(m³/kg)/bara, (3)(m³/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdp_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/MPa, (1)(ft³/lbm)/psia, (2)(m³/kg)/bara, (3)(m³/kg)/kPa\r\n */\r\nexport function PT_dVdP_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdP_H, false);\r\n}\r\n\r\n// Function #92\r\n/**\r\n * dVdP_S f(P,T): (0)(m³/kg)/MPa, (1)(ft³/lbm)/psia, (2)(m³/kg)/bara, (3)(m³/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdp_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/MPa, (1)(ft³/lbm)/psia, (2)(m³/kg)/bara, (3)(m³/kg)/kPa\r\n */\r\nexport function PT_dVdP_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdP_S, false);\r\n}\r\n\r\n// Function #93\r\n/**\r\n * dVdT_P f(P,T): (0)(m³/kg)/K, (1)(ft³/lbm)/°R, (2)(m³/kg)/°C, (3)(m³/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdt_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/K, (1)(ft³/lbm)/°R, (2)(m³/kg)/°C, (3)(m³/kg)/°C\r\n */\r\nexport function PT_dVdT_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdT_P, false);\r\n}\r\n\r\n// Function #94\r\n/**\r\n * dVdT_U f(P,T): (0)(m³/kg)/K, (1)(ft³/lbm)/°R, (2)(m³/kg)/°C, (3)(m³/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdt_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/K, (1)(ft³/lbm)/°R, (2)(m³/kg)/°C, (3)(m³/kg)/°C\r\n */\r\nexport function PT_dVdT_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdT_U, false);\r\n}\r\n\r\n// Function #95\r\n/**\r\n * dVdT_H f(P,T): (0)(m³/kg)/K, (1)(ft³/lbm)/°R, (2)(m³/kg)/°C, (3)(m³/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdt_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/K, (1)(ft³/lbm)/°R, (2)(m³/kg)/°C, (3)(m³/kg)/°C\r\n */\r\nexport function PT_dVdT_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdT_H, false);\r\n}\r\n\r\n// Function #96\r\n/**\r\n * dVdT_S f(P,T): (0)(m³/kg)/K, (1)(ft³/lbm)/°R, (2)(m³/kg)/°C, (3)(m³/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdt_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/K, (1)(ft³/lbm)/°R, (2)(m³/kg)/°C, (3)(m³/kg)/°C\r\n */\r\nexport function PT_dVdT_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdT_S, false);\r\n}\r\n\r\n// Function #97\r\n/**\r\n * dVdU_P f(P,T): (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdu_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n */\r\nexport function PT_dVdU_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdU_P, false);\r\n}\r\n\r\n// Function #98\r\n/**\r\n * dVdU_T f(P,T): (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdu_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n */\r\nexport function PT_dVdU_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdU_T, false);\r\n}\r\n\r\n// Function #99\r\n/**\r\n * dVdU_H f(P,T): (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdu_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n */\r\nexport function PT_dVdU_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdU_H, false);\r\n}\r\n\r\n// Function #100\r\n/**\r\n * dVdU_S f(P,T): (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdu_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n */\r\nexport function PT_dVdU_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdU_S, false);\r\n}\r\n\r\n// Function #101\r\n/**\r\n * dVdH_P f(P,T): (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdh_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n */\r\nexport function PT_dVdH_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdH_P, false);\r\n}\r\n\r\n// Function #102\r\n/**\r\n * dVdH_T f(P,T): (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdh_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n */\r\nexport function PT_dVdH_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdH_T, false);\r\n}\r\n\r\n// Function #103\r\n/**\r\n * dVdH_U f(P,T): (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdh_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n */\r\nexport function PT_dVdH_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdH_U, false);\r\n}\r\n\r\n// Function #104\r\n/**\r\n * dVdH_S f(P,T): (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvdh_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/(kJ/kg), (1)(ft³/lbm)/(BTU/lbm), (2)(m³/kg)/(kJ/kg), (3)(m³/kg)/(kJ/kg)\r\n */\r\nexport function PT_dVdH_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdH_S, false);\r\n}\r\n\r\n// Function #105\r\n/**\r\n * dVdS_P f(P,T): (0)(m³/kg)/[kJ/(kg·K)], (1)(ft³/lbm)/[BTU/(lbm·°R)], (2)(m³/kg)/[kJ/(kg·°C)], (3)(m³/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvds_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/[kJ/(kg·K)], (1)(ft³/lbm)/[BTU/(lbm·°R)], (2)(m³/kg)/[kJ/(kg·°C)], (3)(m³/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dVdS_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdS_P, false);\r\n}\r\n\r\n// Function #106\r\n/**\r\n * dVdS_T f(P,T): (0)(m³/kg)/[kJ/(kg·K)], (1)(ft³/lbm)/[BTU/(lbm·°R)], (2)(m³/kg)/[kJ/(kg·°C)], (3)(m³/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvds_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/[kJ/(kg·K)], (1)(ft³/lbm)/[BTU/(lbm·°R)], (2)(m³/kg)/[kJ/(kg·°C)], (3)(m³/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dVdS_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdS_T, false);\r\n}\r\n\r\n// Function #107\r\n/**\r\n * dVdS_U f(P,T): (0)(m³/kg)/[kJ/(kg·K)], (1)(ft³/lbm)/[BTU/(lbm·°R)], (2)(m³/kg)/[kJ/(kg·°C)], (3)(m³/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvds_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/[kJ/(kg·K)], (1)(ft³/lbm)/[BTU/(lbm·°R)], (2)(m³/kg)/[kJ/(kg·°C)], (3)(m³/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dVdS_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdS_U, false);\r\n}\r\n\r\n// Function #108\r\n/**\r\n * dVdS_H f(P,T): (0)(m³/kg)/[kJ/(kg·K)], (1)(ft³/lbm)/[BTU/(lbm·°R)], (2)(m³/kg)/[kJ/(kg·°C)], (3)(m³/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dvds_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(m³/kg)/[kJ/(kg·K)], (1)(ft³/lbm)/[BTU/(lbm·°R)], (2)(m³/kg)/[kJ/(kg·°C)], (3)(m³/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dVdS_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dVdS_H, false);\r\n}\r\n\r\n// Function #109\r\n/**\r\n * dUdP_T f(P,T): (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudp_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n */\r\nexport function PT_dUdP_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdP_T, false);\r\n}\r\n\r\n// Function #110\r\n/**\r\n * dUdP_V f(P,T): (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudp_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n */\r\nexport function PT_dUdP_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdP_V, false);\r\n}\r\n\r\n// Function #111\r\n/**\r\n * dUdP_H f(P,T): (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudp_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n */\r\nexport function PT_dUdP_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdP_H, false);\r\n}\r\n\r\n// Function #112\r\n/**\r\n * dUdP_S f(P,T): (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudp_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n */\r\nexport function PT_dUdP_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdP_S, false);\r\n}\r\n\r\n// Function #113\r\n/**\r\n * dUdT_P f(P,T): (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudt_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n */\r\nexport function PT_dUdT_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdT_P, false);\r\n}\r\n\r\n// Function #114\r\n/**\r\n * dUdT_V f(P,T): (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudt_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n */\r\nexport function PT_dUdT_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdT_V, false);\r\n}\r\n\r\n// Function #115\r\n/**\r\n * dUdT_H f(P,T): (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudt_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n */\r\nexport function PT_dUdT_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdT_H, false);\r\n}\r\n\r\n// Function #116\r\n/**\r\n * dUdT_S f(P,T): (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudt_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns ((0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n */\r\nexport function PT_dUdT_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdT_S, false);\r\n}\r\n\r\n// Function #117\r\n/**\r\n * dUdV_P f(P,T): (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudv_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n */\r\nexport function PT_dUdV_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdV_P, false);\r\n}\r\n\r\n// Function #118\r\n/**\r\n * dUdV_T f(P,T): (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudv_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n */\r\nexport function PT_dUdV_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdV_T, false);\r\n}\r\n\r\n// Function #119\r\n/**\r\n * dUdV_H f(P,T): (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudv_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n */\r\nexport function PT_dUdV_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdV_H, false);\r\n}\r\n\r\n// Function #120\r\n/**\r\n * dUdV_S f(P,T): (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudv_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n */\r\nexport function PT_dUdV_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdV_S, false);\r\n}\r\n\r\n// Function #121\r\n/**\r\n * dUdH_P f(P,T): (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudh_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n */\r\nexport function PT_dUdH_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdH_P, false);\r\n}\r\n\r\n// Function #122\r\n/**\r\n * dUdH_T f(P,T): (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudh_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n */\r\nexport function PT_dUdH_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdH_T, false);\r\n}\r\n\r\n// Function #123\r\n/**\r\n * dUdH_V f(P,T): (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudh_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n */\r\nexport function PT_dUdH_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdH_V, false);\r\n}\r\n\r\n// Function #124\r\n/**\r\n * dUdH_S f(P,T): (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dudh_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n */\r\nexport function PT_dUdH_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdH_S, false);\r\n}\r\n\r\n// Function #125\r\n/**\r\n * dUdS_P f(P,T): (0)(kJ/kg)[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/duds_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dUdS_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdS_P, false);\r\n}\r\n\r\n// Function #126\r\n/**\r\n * dUdS_T f(P,T): (0)(kJ/kg)[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/duds_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dUdS_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdS_T, false);\r\n}\r\n\r\n// Function #127\r\n/**\r\n * dUdS_V f(P,T): (0)(kJ/kg)[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/duds_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dUdS_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdS_V, false);\r\n}\r\n\r\n// Function #128\r\n/**\r\n * dUdS_H f(P,T): (0)(kJ/kg)[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/duds_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dUdS_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dUdS_H, false);\r\n}\r\n\r\n// Function #129\r\n/**\r\n * dHdP_T f(P,T): (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdp_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n */\r\nexport function PT_dHdP_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdP_T, false);\r\n}\r\n\r\n// Function #130\r\n/**\r\n * dHdP_V f(P,T): (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdp_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n */\r\nexport function PT_dHdP_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdP_V, false);\r\n}\r\n\r\n// Function #131\r\n/**\r\n * dHdP_U f(P,T): (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdp_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n */\r\nexport function PT_dHdP_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdP_U, false);\r\n}\r\n\r\n// Function #132\r\n/**\r\n * dHdP_S f(P,T): (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdp_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/MPa, (1)(BTU/lbm)/psia, (2)(kJ/kg)/bara, (3)(kJ/kg)/kPa\r\n */\r\nexport function PT_dHdP_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdP_S, false);\r\n}\r\n\r\n// Function #133\r\n/**\r\n * dHdT_P f(P,T): (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdt_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n */\r\nexport function PT_dHdT_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdT_P, false);\r\n}\r\n\r\n// Function #134\r\n/**\r\n * dHdT_V f(P,T): (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdt_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n */\r\nexport function PT_dHdT_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdT_V, false);\r\n}\r\n\r\n// Function #135\r\n/**\r\n * dHdT_U f(P,T): (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdt_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n */\r\nexport function PT_dHdT_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdT_U, false);\r\n}\r\n\r\n// Function #136\r\n/**\r\n * dHdT_S f(P,T): (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdt_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/K, (1)(BTU/lbm)/°R, (2)(kJ/kg)/°C, (3)(kJ/kg)/°C\r\n */\r\nexport function PT_dHdT_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdT_S, false);\r\n}\r\n\r\n// Function #137\r\n/**\r\n * dHdV_P f(P,T): (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdv_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n */\r\nexport function PT_dHdV_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdV_P, false);\r\n}\r\n\r\n// Function #138\r\n/**\r\n * dHdV_T f(P,T): (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdv_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n */\r\nexport function PT_dHdV_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdV_T, false);\r\n}\r\n\r\n// Function #139\r\n/**\r\n * dHdV_U f(P,T): (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdv_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n */\r\nexport function PT_dHdV_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdV_U, false);\r\n}\r\n\r\n// Function #140\r\n/**\r\n * dHdV_S f(P,T): (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdv_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(m³/kg), (1)(BTU/lbm)/(ft³/lbm), (2)(kJ/kg)/(m³/kg), (3)(kJ/kg)/(m³/kg)\r\n */\r\nexport function PT_dHdV_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdV_S, false);\r\n}\r\n\r\n// Function #141\r\n/**\r\n * dHdU_P f(P,T): (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdu_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n */\r\nexport function PT_dHdU_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdU_P, false);\r\n}\r\n\r\n// Function #142\r\n/**\r\n * dHdU_T f(P,T): (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdu_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n */\r\nexport function PT_dHdU_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdU_T, false);\r\n}\r\n\r\n// Function #143\r\n/**\r\n * dHdU_V f(P,T): (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdu_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n */\r\nexport function PT_dHdU_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdU_V, false);\r\n}\r\n\r\n// Function #144\r\n/**\r\n * dHdU_S f(P,T): (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhdu_s-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/(kJ/kg), (1)(BTU/lbm)/(BTU/lbm), (2)(kJ/kg)/(kJ/kg), (3)(kJ/kg)/(kJ/kg)\r\n */\r\nexport function PT_dHdU_S(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdU_S, false);\r\n}\r\n\r\n// Function #145\r\n/**\r\n * dHdS_P f(P,T): (0)(kJ/kg)/[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhds_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dHdS_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdS_P, false);\r\n}\r\n\r\n// Function #146\r\n/**\r\n * dHdS_T f(P,T): (0)(kJ/kg)/[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhds_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dHdS_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdS_T, false);\r\n}\r\n\r\n// Function #147\r\n/**\r\n * dHdS_V f(P,T): (0)(kJ/kg)/[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhds_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dHdS_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdS_V, false);\r\n}\r\n\r\n// Function #148\r\n/**\r\n * dHdS_U f(P,T): (0)(kJ/kg)/[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dhds_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)(kJ/kg)/[kJ/(kg·K)], (1)(BTU/lbm)/[BTU/(lbm·°R)], (2)(kJ/kg)/[kJ/(kg·°C)], (3)(kJ/kg)/[kJ/(kg·°C)]\r\n */\r\nexport function PT_dHdS_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dHdS_U, false);\r\n}\r\n\r\n// Function #149\r\n/**\r\n * dSdP_T f(P,T): (0)[kJ/(kg·K)]/MPa, (1)[BTU/(lbm·°R)]/psia, (2)[kJ/(kg·°C)]/bara, (3)[kJ/(kg/°C)]/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdp_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/MPa, (1)[BTU/(lbm·°R)]/psia, (2)[kJ/(kg·°C)]/bara, (3)[kJ/(kg/°C)]/kPa\r\n */\r\nexport function PT_dSdP_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdP_T, false);\r\n}\r\n\r\n// Function #150\r\n/**\r\n * dSdP_V f(P,T): (0)[kJ/(kg·K)]/MPa, (1)[BTU/(lbm·°R)]/psia, (2)[kJ/(kg·°C)]/bara, (3)[kJ/(kg/°C)]/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdp_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/MPa, (1)[BTU/(lbm·°R)]/psia, (2)[kJ/(kg·°C)]/bara, (3)[kJ/(kg/°C)]/kPa\r\n */\r\nexport function PT_dSdP_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdP_V, false);\r\n}\r\n\r\n// Function #151\r\n/**\r\n * dSdP_U f(P,T): (0)[kJ/(kg·K)]/MPa, (1)[BTU/(lbm·°R)]/psia, (2)[kJ/(kg·°C)]/bara, (3)[kJ/(kg/°C)]/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdp_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/MPa, (1)[BTU/(lbm·°R)]/psia, (2)[kJ/(kg·°C)]/bara, (3)[kJ/(kg/°C)]/kPa\r\n */\r\nexport function PT_dSdP_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdP_U, false);\r\n}\r\n\r\n// Function #152\r\n/**\r\n * dSdP_H f(P,T): (0)[kJ/(kg·K)]/MPa, (1)[BTU/(lbm·°R)]/psia, (2)[kJ/(kg·°C)]/bara, (3)[kJ/(kg/°C)]/kPa\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdp_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/MPa, (1)[BTU/(lbm·°R)]/psia, (2)[kJ/(kg·°C)]/bara, (3)[kJ/(kg/°C)]/kPa\r\n */\r\nexport function PT_dSdP_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdP_H, false);\r\n}\r\n\r\n// Function #153\r\n/**\r\n * dSdT_P f(P,T): (0)[kJ/(kg·K)]/K, (1)[BTU/(lbm·°R)]/°R, (2)[kJ/(kg·°C)]/°C, (3)[kJ/(kg·°C)]/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdt_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/K, (1)[BTU/(lbm·°R)]/°R, (2)[kJ/(kg·°C)]/°C, (3)[kJ/(kg·°C)]/°C\r\n */\r\nexport function PT_dSdT_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdT_P, false);\r\n}\r\n\r\n// Function #154\r\n/**\r\n * dSdT_V f(P,T): (0)[kJ/(kg·K)]/K, (1)[BTU/(lbm·°R)]/°R, (2)[kJ/(kg·°C)]/°C, (3)[kJ/(kg·°C)]/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdt_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/K, (1)[BTU/(lbm·°R)]/°R, (2)[kJ/(kg·°C)]/°C, (3)[kJ/(kg·°C)]/°C\r\n */\r\nexport function PT_dSdT_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdT_V, false);\r\n}\r\n\r\n// Function #155\r\n/**\r\n * dSdT_U f(P,T): (0)[kJ/(kg·K)]/K, (1)[BTU/(lbm·°R)]/°R, (2)[kJ/(kg·°C)]/°C, (3)[kJ/(kg·°C)]/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdt_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/K, (1)[BTU/(lbm·°R)]/°R, (2)[kJ/(kg·°C)]/°C, (3)[kJ/(kg·°C)]/°C\r\n */\r\nexport function PT_dSdT_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdT_U, false);\r\n}\r\n\r\n// Function #156\r\n/**\r\n * dSdT_H f(P,T): (0)[kJ/(kg·K)]/K, (1)[BTU/(lbm·°R)]/°R, (2)[kJ/(kg·°C)]/°C, (3)[kJ/(kg·°C)]/°C\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdt_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/K, (1)[BTU/(lbm·°R)]/°R, (2)[kJ/(kg·°C)]/°C, (3)[kJ/(kg·°C)]/°C\r\n */\r\nexport function PT_dSdT_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdT_H, false);\r\n}\r\n\r\n// Function #157\r\n/**\r\n * dSdV_P f(P,T): (0)[kJ/(kg·K)]/(m³/kg), (1)[BTU/(lbm·°R)]/(ft³/lbm), (2)[kJ/(kg·°C)]/(m³/kg), (3)[kJ/(kg·°C)]/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdv_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(m³/kg), (1)[BTU/(lbm·°R)]/(ft³/lbm), (2)[kJ/(kg·°C)]/(m³/kg), (3)[kJ/(kg·°C)]/(m³/kg)\r\n */\r\nexport function PT_dSdV_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdV_P, false);\r\n}\r\n\r\n// Function #158\r\n/**\r\n * dSdV_T f(P,T): (0)[kJ/(kg·K)]/(m³/kg), (1)[BTU/(lbm·°R)]/(ft³/lbm), (2)[kJ/(kg·°C)]/(m³/kg), (3)[kJ/(kg·°C)]/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdv_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(m³/kg), (1)[BTU/(lbm·°R)]/(ft³/lbm), (2)[kJ/(kg·°C)]/(m³/kg), (3)[kJ/(kg·°C)]/(m³/kg)\r\n */\r\nexport function PT_dSdV_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdV_T, false);\r\n}\r\n\r\n// Function #159\r\n/**\r\n * dSdV_U f(P,T): (0)[kJ/(kg·K)]/(m³/kg), (1)[BTU/(lbm·°R)]/(ft³/lbm), (2)[kJ/(kg·°C)]/(m³/kg), (3)[kJ/(kg·°C)]/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdv_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(m³/kg), (1)[BTU/(lbm·°R)]/(ft³/lbm), (2)[kJ/(kg·°C)]/(m³/kg), (3)[kJ/(kg·°C)]/(m³/kg)\r\n */\r\nexport function PT_dSdV_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdV_U, false);\r\n}\r\n\r\n// Function #160\r\n/**\r\n * dSdV_H f(P,T): (0)[kJ/(kg·K)]/(m³/kg), (1)[BTU/(lbm·°R)]/(ft³/lbm), (2)[kJ/(kg·°C)]/(m³/kg), (3)[kJ/(kg·°C)]/(m³/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdv_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(m³/kg), (1)[BTU/(lbm·°R)]/(ft³/lbm), (2)[kJ/(kg·°C)]/(m³/kg), (3)[kJ/(kg·°C)]/(m³/kg)\r\n */\r\nexport function PT_dSdV_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdV_H, false);\r\n}\r\n\r\n// Function #161\r\n/**\r\n * dSdU_P f(P,T): (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdu_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n */\r\nexport function PT_dSdU_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdU_P, false);\r\n}\r\n\r\n// Function #162\r\n/**\r\n * dSdU_T f(P,T): (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdu_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n */\r\nexport function PT_dSdU_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdU_T, false);\r\n}\r\n\r\n// Function #163\r\n/**\r\n * dSdU_V f(P,T): (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdu_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n */\r\nexport function PT_dSdU_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdU_V, false);\r\n}\r\n\r\n// Function #164\r\n/**\r\n * dSdU_H f(P,T): (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdu_h-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n */\r\nexport function PT_dSdU_H(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdU_H, false);\r\n}\r\n\r\n// Function #165\r\n/**\r\n * dSdH_P f(P,T): (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdh_p-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n */\r\nexport function PT_dSdH_P(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdH_P, false);\r\n}\r\n\r\n// Function #166\r\n/**\r\n * dSdH_T f(P,T): (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdh_t-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n */\r\nexport function PT_dSdH_T(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdH_T, false);\r\n}\r\n\r\n// Function #167\r\n/**\r\n * dSdH_V f(P,T): (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdh_v-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n */\r\nexport function PT_dSdH_V(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdH_V, false);\r\n}\r\n\r\n// Function #168\r\n/**\r\n * dSdH_U f(P,T): (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n * @customfunction\r\n * @helpurl https://h2othermo.com/derivative_functions/dsdh_u-f_pt/\r\n * @param {number} pressure (0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)[kJ/(kg·K)]/(kJ/kg), (1)[BTU/(lbm·°R)]/(BTU/lbm), (2)[kJ/(kg·°C)]/(kJ/kg), (3)[kJ/(kg·°C)]/(kJ/kg)\r\n */\r\nexport function PT_dSdH_U(pressure, temperature, units) {\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, Units.VectorParameters.dSdH_U, false);\r\n}\r\n\r\n/* @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure(0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param  {string} return What to return (\"enthalpy\", \"entropy\", etc.)\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @param {number} [metastable] false=normal, true=metastable\r\n * @returns Specified Return Parameter in Units Specified\r\n \r\nexport function fPT(pressure, temperature, returnName, units, metastable) {\r\n  const index = nameToIndex(returnName);\r\n  if (index == undefined) {\r\n    return Errors.ErrorReturnTypeUnknown;\r\n  }\r\n  return H2o.CallStmProp_fPT(pressure, temperature, units, index, metastable);\r\n}\r\n*/\r\n\r\n/*\r\n * Returns requested parameter f(P,h): Specified Return Parameter in Units Specified\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure(0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {string} return What to return (\"enthalpy\", \"entropy\", etc.)\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n *\r\nexport function fPH(pressure, enthalpy, returnName, units) {\r\n  const index = nameToIndex(returnName);\r\n  if (index == undefined) {\r\n    return Errors.ErrorReturnTypeUnknown;\r\n  }\r\n  return H2o.CallStmProp_fPH(pressure, enthalpy, units, index);\r\n}\r\n*/\r\n\r\n/*\r\n * Returns requested parameter f(P,S): Specified Return Parameter in Units Specified\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure(0)MPa, (1)psia, (2)bara, (3)kPa\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param {string} return What to return (\"enthalpy\", \"entropy\", etc.)\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n *\r\nexport function fPS(pressure, entropy, returnName, units) {\r\n  const index = nameToIndex(returnName);\r\n  if (index == undefined) {\r\n    return Errors.ErrorReturnTypeUnknown;\r\n  }\r\n  return H2o.CallStmProp_fPS(pressure, entropy, units, index);\r\n}\r\n*/\r\n\r\n/*\r\n * Returns requested parameter f(H,S): Specified Return Parameter in Units Specified\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} enthalpy (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n * @param {number} entropy (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n * @param {string} return What to return (\"enthalpy\", \"entropy\", etc.)\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n *\r\nexport function fHS(enthalpy, entropy, returnName, units) {\r\n  const index = nameToIndex(returnName);\r\n  if (index == undefined) {\r\n    return Errors.ErrorReturnTypeUnknown;\r\n  }\r\n  return H2o.CallStmProp_fPS(enthalpy, entropy, units, index);\r\n}\r\n*/\r\n\r\n// Debug Function for Viscosity\r\n/*\r\n * Viscosity f(T, v) used to verify the values in R12-08 Table 4 & 5.  This does not check to see if the pressure is valid (use with caution).  Only supports SI units\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} temperature  K\r\n * @param {number} volume (0)m³/kg\r\n * @returns Pa·s (use with caution, see help url)\r\n *\r\nexport function TVM(temperature, volume) {\r\n  return H2o.Viscosity_fTV(temperature, volume);\r\n}\r\n*/\r\n\r\n// Debug function for Conductivity W/O the critical enhancement for verifying values in R15-11 table 4\r\n// Does not check to verify in a valid range, only used for testing\r\n/*\r\n * Conductivity f(V,T) without critical enhancement\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} temperature K\r\n * @param {number} volume m³/kg\r\n * @returns mW/(m·K)\r\n *\r\nexport function Test_TVK_WO_Crit_Enh(temperature, volume) {\r\n  return H2o.Conductivity_fTV_WO_Crit_Enh(temperature, volume);\r\n}\r\n*/\r\n\r\n// Debug function for Conductivity With the critical enhancement for verifying values in R15-11 table 5\r\n// Assumes the input values are in Region 3.  Does not check in a valid range, only for testing\r\n/*\r\n * Conductivity f(V,T) with critical enhancement\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} temperature K\r\n * @param {number} volume m³/kg\r\n * @returns mW/(m·K)\r\n *\r\nexport function Test_TVK_With_Crit_Enh(temperature, volume) {\r\n  return H2o.Conductivity_fTV_With_Crit_Enh(temperature, volume);\r\n}\r\n*/\r\n\r\n// Debug Functions for Region 3 f(v,T) to verify the values in R7-97 Table 33.\r\n// Comment out when done testing or add a check to make sure in Region 3\r\n/*\r\n * Region 3 only: returns pressure f(v,T)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} volume (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)MPa, (1)psia, (2)bara, (3)kPa\r\n *\r\nexport function Test_VTP(volume, temperature, units) {\r\n  return H2o.CallStmProp_fVT(volume, temperature, units, Units.VectorParameters.Pressure);\r\n}\r\n*/\r\n\r\n/*\r\n * Region 3 only: returns enthalpy f(v,T)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} volume (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n *\r\nexport function Test_VTH(volume, temperature, units) {\r\n  return H2o.CallStmProp_fVT(volume, temperature, units, Units.VectorParameters.Enthalpy);\r\n}\r\n*/\r\n\r\n/*\r\n * Region 3 only: returns internal energy f(v,T)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} volume (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/kg, (1)BTU/lbm, (2)kJ/kg, (3)kJ/kg\r\n *\r\nexport function Test_VTU(volume, temperature, units) {\r\n  return H2o.CallStmProp_fVT(volume, temperature, units, Units.VectorParameters.InternalEnergy);\r\n}\r\n*/\r\n\r\n/*\r\n * Region 3 only: returns entropy f(v,T)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} volume (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n *\r\nexport function Test_VTS(volume, temperature, units) {\r\n  return H2o.CallStmProp_fVT(volume, temperature, units, Units.VectorParameters.Entropy);\r\n}\r\n*/\r\n\r\n/*\r\n * Region 3 only: returns isobaric specific heat f(v,T)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} volume (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)kJ/(kg·K), (1)BTU/(lbm·°F), (2)kJ/(kg·°C), (3)kJ/(kg·°C)\r\n *\r\nexport function Test_VTCp(volume, temperature, units) {\r\n  return H2o.CallStmProp_fVT(volume, temperature, units, Units.VectorParameters.IsobaricHeat);\r\n}\r\n*/\r\n\r\n/*\r\n * Region 3 only: returns speed of sound f(v,T)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} volume (0)m³/kg, (1)ft³/lbm, (2)m³/kg, (3)m³/kg\r\n * @param {number} temperature  (0)K, (1)°F, (2)°C, (3)°C\r\n * @param {number} [units=0] (0)SI, (1)US Customary, (2)Metric bara, (3) Metric kPa\r\n * @returns (0)m/s, (1)ft/s, (2)m/s, (3)m/s\r\n *\r\nexport function Test_VTW(volume, temperature, units) {\r\n  return H2o.CallStmProp_fVT(volume, temperature, units, Units.VectorParameters.SpeedOfSound);\r\n}\r\n*/\r\n\r\n// Debug Function for Region 3 saturation pressure psat(h) to verify the values in 3R3-03 Table 18.\r\n// Comment out when done testing or add a check to make sure inputs within valid range\r\n/*\r\n * returns Region 3 saturation pressure psat(h)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} enthalpy  kJ/kg\r\n * @returns MPa\r\n *\r\nexport function Test_R3_h_psat(enthalpy) {\r\n  return H2o.R3Psat_fH(enthalpy);\r\n}\r\n*/\r\n\r\n// Debug Function for Region 3 saturation pressure psat(s) to verify the values in 3R3-03 Table 20.\r\n// Comment out when done testing or add a check to make sure inputs within valid range\r\n/*\r\n * returns Region 1 to Region 4 boundary: h(s)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} entropy  kJ/(kg·K)\r\n * @returns enthalpy kJ/kg\r\n *\r\nexport function Test_R3_s_psat(enthalpy) {\r\n  return H2o.R3Psat_fS(enthalpy);\r\n}\r\n*/\r\n\r\n// Debug Function for boundary equation between Region 1 and Region 4 to verify the values in SR4-04 Table 11\r\n// Comment out when done testing or add a check to make sure inputs within valid range\r\n/*\r\n * returns Region 1 to Region 4 boundary: h(s)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} entropy  kJ/(kg·K)\r\n * @returns enthalpy kJ/kg\r\n *\r\nexport function Test_H1_sat_liqS(enthalpy) {\r\n  return H2o.H1_sat_liqS(enthalpy);\r\n}\r\n*/\r\n\r\n// Debug Function for saturated liquid boundary equation between Region 3 and Region 4 to verify the values in SR4-04 Table 11\r\n// Comment out when done testing or add a check to make sure inputs within valid range\r\n/*\r\n * returns Region 3 to Region 4 saturated liquid boundary: h(s)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} entropy  kJ/(kg·K)\r\n * @returns enthalpy kJ/kg\r\n *\r\nexport function Test_H3a_sat_liqS(enthalpy) {\r\n  return H2o.H3a_sat_liqS(enthalpy);\r\n}\r\n*/\r\n\r\n// Debug Function for saturated vapor boundary between Region 2 and Region 4 to verify the values in SR4-04 Table 18\r\n// Comment out when done testing or add a check to make sure inputs within valid range\r\n/*\r\n * returns Region 1 to Region 4 boundary: h(s)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} entropy  kJ/(kg·K)\r\n * @returns enthalpy kJ/kg\r\n *\r\nexport function Test_H2ab_sat_VapS(entropy) {\r\n  return H2o.H2ab_sat_VapS(entropy);\r\n}\r\n*/\r\n\r\n// Debug Function for saturated liquid boundary equation between Region 2&3 and Region 4 to verify the values in SR4-04 Table 18\r\n// Comment out when done testing or add a check to make sure inputs within valid range\r\n/*\r\n * returns Region 3 to Region 4 saturated liquid boundary: h(s)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} entropy  kJ/(kg·K)\r\n * @returns enthalpy kJ/kg\r\n *\r\nexport function Test_H2c3b_sat_VapS(entropy) {\r\n  return H2o.H2c3b_sat_VapS(entropy);\r\n}\r\n*/\r\n\r\n// Debug Function for the boundary between Regions 1 and 3 to verify the values in SR4-04 Table 24\r\n// Comment out when done testing or add a check to make sure inputs within valid range\r\n/*\r\n * returns boundary between Regions 1 & 3 f(s)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} entropy  kJ/(kg·K)\r\n * @returns enthalpy kJ/kg\r\n *\r\nexport function Test_Hb13S(entropy) {\r\n  return H2o.Hb13S(entropy);\r\n}\r\n*/\r\n\r\n// Debug Function for the boundary between Regions 2 and 3 to verify the values in SR4-04 Table 26\r\n// Comment out when done testing or add a check to make sure inputs within valid range\r\n/*\r\n * returns boundary between Regions 2 & 3 T(h,s)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} enthalpy  kJ/kg\r\n * @param {number} entropy  kJ/(kg·K)\r\n * @returns Temperature K\r\n *\r\nexport function Test_Tb23HS(enthalpy, entropy) {\r\n  return H2o.Tb23HS(enthalpy, entropy);\r\n}\r\n*/\r\n\r\n// Debug Function for the boundary between Regions 2 and 3 to verify the values in SR4-04 Table 26\r\n// Comment out when done testing or add a check to make sure inputs within valid range\r\n/*\r\n * returns boundary between Regions 2 & 3 T(h,s)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} enthalpy  kJ/kg\r\n * @param {number} entropy  kJ/(kg·K)\r\n * @returns Saturation Temperature K\r\n *\r\nexport function Test_TsatHS(enthalpy, entropy) {\r\n  return H2o.TsatHS(enthalpy, entropy);\r\n}\r\n*/\r\n\r\n// Debug Function for T3ab(p) SR5-05 eq 2\r\n/*\r\n * Region 3 only: returns T3ab(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3ab K\r\n *\r\nexport function Test_T3ab(pressure) {\r\n  return H2o.T3ab(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3op(p) SR5-05 eq 2\r\n/*\r\n * Region 3 only: returns T3op(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3op K\r\n *\r\nexport function Test_T3op(pressure) {\r\n  return H2o.T3op(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3ef(p) SR5-05 eq 3\r\n/*\r\n * Region 3 only: returns T3ef(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3ef K\r\n *\r\nexport function Test_T3ef(pressure) {\r\n  return H2o.T3ef(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3cd(p) SR5-05 eq 1\r\n/*\r\n * Region 3 only: returns T3cd(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3cd K\r\n *\r\nexport function Test_T3cd(pressure) {\r\n  return H2o.T3cd(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3gh(p) SR5-05 eq 1\r\n/*\r\n * Region 3 only: returns T3gh(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3gh K\r\n *\r\nexport function Test_T3gh(pressure) {\r\n  return H2o.T3gh(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3ij(p) SR5-05 eq 1\r\n/*\r\n * Region 3 only: returns T3ij(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3ij K\r\n *\r\nexport function Test_T3ij(pressure) {\r\n  return H2o.T3ij(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3jk(p) SR5-05 eq 1\r\n/*\r\n * Region 3 only: returns T3jk(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3jk K\r\n *\r\nexport function Test_T3jk(pressure) {\r\n  return H2o.T3jk(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3mn(p) SR5-05 eq 1\r\n/*\r\n * Region 3 only: returns T3mn(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3mn K\r\n *\r\nexport function Test_T3mn(pressure) {\r\n  return H2o.T3mn(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3qu(p) SR5-05 eq 1\r\n/*\r\n * Region 3 only: returns T3qu(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3qu K\r\n *\r\nexport function Test_T3qu(pressure) {\r\n  return H2o.T3qu(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3rx(p) SR5-05 eq 1\r\n/*\r\n * Region 3 only: returns T3rx(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3rx K\r\n *\r\nexport function Test_T3rx(pressure) {\r\n  return H2o.T3rx(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3uv(p) SR5-05 eq 1\r\n/*\r\n * Region 3 only: returns T3uv(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3uv K\r\n *\r\nexport function Test_T3uv(pressure) {\r\n  return H2o.T3uv(pressure);\r\n}\r\n*/\r\n\r\n// Debug Function for T3wx(p) SR5-05 eq 1\r\n/*\r\n * Region 3 only: returns T3wx(p)\r\n * @customfunction\r\n * @helpurl https://h2othermo/functions/\r\n * @param {number} pressure MPa\r\n * @returns T3wx K\r\n\r\nexport function Test_T3wx(pressure) {\r\n  return H2o.T3wx(pressure);\r\n}\r\n */\r\n\nCustomFunctions.associate(\"TP\", TP);\nCustomFunctions.associate(\"PT\", PT);\nCustomFunctions.associate(\"TY\", TY);\nCustomFunctions.associate(\"PTH\", PTH);\nCustomFunctions.associate(\"PTS\", PTS);\nCustomFunctions.associate(\"PTU\", PTU);\nCustomFunctions.associate(\"PTV\", PTV);\nCustomFunctions.associate(\"PTCP\", PTCp);\nCustomFunctions.associate(\"PTCV\", PTCv);\nCustomFunctions.associate(\"PTW\", PTW);\nCustomFunctions.associate(\"PHT\", PHT);\nCustomFunctions.associate(\"PHS\", PHS);\nCustomFunctions.associate(\"PHU\", PHU);\nCustomFunctions.associate(\"PHV\", PHV);\nCustomFunctions.associate(\"PHCP\", PHCp);\nCustomFunctions.associate(\"PHCV\", PHCv);\nCustomFunctions.associate(\"PHW\", PHW);\nCustomFunctions.associate(\"PHQ\", PHQ);\nCustomFunctions.associate(\"PST\", PST);\nCustomFunctions.associate(\"PSH\", PSH);\nCustomFunctions.associate(\"PSU\", PSU);\nCustomFunctions.associate(\"PSV\", PSV);\nCustomFunctions.associate(\"PSCP\", PSCp);\nCustomFunctions.associate(\"PSCV\", PSCv);\nCustomFunctions.associate(\"PSW\", PSW);\nCustomFunctions.associate(\"PSQ\", PSQ);\nCustomFunctions.associate(\"HSP\", HSP);\nCustomFunctions.associate(\"HST\", HST);\nCustomFunctions.associate(\"HSQ\", HSQ);\nCustomFunctions.associate(\"HSU\", HSU);\nCustomFunctions.associate(\"HSV\", HSV);\nCustomFunctions.associate(\"HSCP\", HSCp);\nCustomFunctions.associate(\"HSCV\", HSCv);\nCustomFunctions.associate(\"HSW\", HSW);\nCustomFunctions.associate(\"PQH\", PQH);\nCustomFunctions.associate(\"PQS\", PQS);\nCustomFunctions.associate(\"PQU\", PQU);\nCustomFunctions.associate(\"PQV\", PQV);\nCustomFunctions.associate(\"PQCP\", PQCp);\nCustomFunctions.associate(\"PQCV\", PQCv);\nCustomFunctions.associate(\"TQH\", TQH);\nCustomFunctions.associate(\"TQS\", TQS);\nCustomFunctions.associate(\"TQU\", TQU);\nCustomFunctions.associate(\"TQV\", TQV);\nCustomFunctions.associate(\"TQCP\", TQCp);\nCustomFunctions.associate(\"TQCV\", TQCv);\nCustomFunctions.associate(\"PTM\", PTM);\nCustomFunctions.associate(\"PTK\", PTK);\nCustomFunctions.associate(\"PT_DPDT_V\", PT_dPdT_V);\nCustomFunctions.associate(\"PT_DPDT_U\", PT_dPdT_U);\nCustomFunctions.associate(\"PT_DPDT_H\", PT_dPdT_H);\nCustomFunctions.associate(\"PT_DPDT_S\", PT_dPdT_S);\nCustomFunctions.associate(\"PT_DPDV_T\", PT_dPdV_T);\nCustomFunctions.associate(\"PT_DPDV_U\", PT_dPdV_U);\nCustomFunctions.associate(\"PT_DPDV_H\", PT_dPdV_H);\nCustomFunctions.associate(\"PT_DPDV_S\", PT_dPdV_S);\nCustomFunctions.associate(\"PT_DPDU_T\", PT_dPdU_T);\nCustomFunctions.associate(\"PT_DPDU_V\", PT_dPdU_V);\nCustomFunctions.associate(\"PT_DPDU_H\", PT_dPdU_H);\nCustomFunctions.associate(\"PT_DPDU_S\", PT_dPdU_S);\nCustomFunctions.associate(\"PT_DPDH_T\", PT_dPdH_T);\nCustomFunctions.associate(\"PT_DPDH_V\", PT_dPdH_V);\nCustomFunctions.associate(\"PT_DPDH_U\", PT_dPdH_U);\nCustomFunctions.associate(\"PT_DPDH_S\", PT_dPdH_S);\nCustomFunctions.associate(\"PT_DPDS_T\", PT_dPdS_T);\nCustomFunctions.associate(\"PT_DPDS_V\", PT_dPdS_V);\nCustomFunctions.associate(\"PT_DPDS_U\", PT_dPdS_U);\nCustomFunctions.associate(\"PT_DPDS_H\", PT_dPdS_H);\nCustomFunctions.associate(\"PT_DTDP_V\", PT_dTdP_V);\nCustomFunctions.associate(\"PT_DTDP_U\", PT_dTdP_U);\nCustomFunctions.associate(\"PT_DTDP_H\", PT_dTdP_H);\nCustomFunctions.associate(\"PT_DTDP_S\", PT_dTdP_S);\nCustomFunctions.associate(\"PT_DTDV_P\", PT_dTdV_P);\nCustomFunctions.associate(\"PT_DTDV_U\", PT_dTdV_U);\nCustomFunctions.associate(\"PT_DTDV_H\", PT_dTdV_H);\nCustomFunctions.associate(\"PT_DTDV_S\", PT_dTdV_S);\nCustomFunctions.associate(\"PT_DTDU_P\", PT_dTdU_P);\nCustomFunctions.associate(\"PT_DTDU_V\", PT_dTdU_V);\nCustomFunctions.associate(\"PT_DTDU_H\", PT_dTdU_H);\nCustomFunctions.associate(\"PT_DTDU_S\", PT_dTdU_S);\nCustomFunctions.associate(\"PT_DTDH_P\", PT_dTdH_P);\nCustomFunctions.associate(\"PT_DTDH_V\", PT_dTdH_V);\nCustomFunctions.associate(\"PT_DTDH_U\", PT_dTdH_U);\nCustomFunctions.associate(\"PT_DTDH_S\", PT_dTdH_S);\nCustomFunctions.associate(\"PT_DTDS_P\", PT_dTdS_P);\nCustomFunctions.associate(\"PT_DTDS_V\", PT_dTdS_V);\nCustomFunctions.associate(\"PT_DTDS_U\", PT_dTdS_U);\nCustomFunctions.associate(\"PT_DTDS_H\", PT_dTdS_H);\nCustomFunctions.associate(\"PT_DVDP_T\", PT_dVdP_T);\nCustomFunctions.associate(\"PT_DVDP_U\", PT_dVdP_U);\nCustomFunctions.associate(\"PT_DVDP_H\", PT_dVdP_H);\nCustomFunctions.associate(\"PT_DVDP_S\", PT_dVdP_S);\nCustomFunctions.associate(\"PT_DVDT_P\", PT_dVdT_P);\nCustomFunctions.associate(\"PT_DVDT_U\", PT_dVdT_U);\nCustomFunctions.associate(\"PT_DVDT_H\", PT_dVdT_H);\nCustomFunctions.associate(\"PT_DVDT_S\", PT_dVdT_S);\nCustomFunctions.associate(\"PT_DVDU_P\", PT_dVdU_P);\nCustomFunctions.associate(\"PT_DVDU_T\", PT_dVdU_T);\nCustomFunctions.associate(\"PT_DVDU_H\", PT_dVdU_H);\nCustomFunctions.associate(\"PT_DVDU_S\", PT_dVdU_S);\nCustomFunctions.associate(\"PT_DVDH_P\", PT_dVdH_P);\nCustomFunctions.associate(\"PT_DVDH_T\", PT_dVdH_T);\nCustomFunctions.associate(\"PT_DVDH_U\", PT_dVdH_U);\nCustomFunctions.associate(\"PT_DVDH_S\", PT_dVdH_S);\nCustomFunctions.associate(\"PT_DVDS_P\", PT_dVdS_P);\nCustomFunctions.associate(\"PT_DVDS_T\", PT_dVdS_T);\nCustomFunctions.associate(\"PT_DVDS_U\", PT_dVdS_U);\nCustomFunctions.associate(\"PT_DVDS_H\", PT_dVdS_H);\nCustomFunctions.associate(\"PT_DUDP_T\", PT_dUdP_T);\nCustomFunctions.associate(\"PT_DUDP_V\", PT_dUdP_V);\nCustomFunctions.associate(\"PT_DUDP_H\", PT_dUdP_H);\nCustomFunctions.associate(\"PT_DUDP_S\", PT_dUdP_S);\nCustomFunctions.associate(\"PT_DUDT_P\", PT_dUdT_P);\nCustomFunctions.associate(\"PT_DUDT_V\", PT_dUdT_V);\nCustomFunctions.associate(\"PT_DUDT_H\", PT_dUdT_H);\nCustomFunctions.associate(\"PT_DUDT_S\", PT_dUdT_S);\nCustomFunctions.associate(\"PT_DUDV_P\", PT_dUdV_P);\nCustomFunctions.associate(\"PT_DUDV_T\", PT_dUdV_T);\nCustomFunctions.associate(\"PT_DUDV_H\", PT_dUdV_H);\nCustomFunctions.associate(\"PT_DUDV_S\", PT_dUdV_S);\nCustomFunctions.associate(\"PT_DUDH_P\", PT_dUdH_P);\nCustomFunctions.associate(\"PT_DUDH_T\", PT_dUdH_T);\nCustomFunctions.associate(\"PT_DUDH_V\", PT_dUdH_V);\nCustomFunctions.associate(\"PT_DUDH_S\", PT_dUdH_S);\nCustomFunctions.associate(\"PT_DUDS_P\", PT_dUdS_P);\nCustomFunctions.associate(\"PT_DUDS_T\", PT_dUdS_T);\nCustomFunctions.associate(\"PT_DUDS_V\", PT_dUdS_V);\nCustomFunctions.associate(\"PT_DUDS_H\", PT_dUdS_H);\nCustomFunctions.associate(\"PT_DHDP_T\", PT_dHdP_T);\nCustomFunctions.associate(\"PT_DHDP_V\", PT_dHdP_V);\nCustomFunctions.associate(\"PT_DHDP_U\", PT_dHdP_U);\nCustomFunctions.associate(\"PT_DHDP_S\", PT_dHdP_S);\nCustomFunctions.associate(\"PT_DHDT_P\", PT_dHdT_P);\nCustomFunctions.associate(\"PT_DHDT_V\", PT_dHdT_V);\nCustomFunctions.associate(\"PT_DHDT_U\", PT_dHdT_U);\nCustomFunctions.associate(\"PT_DHDT_S\", PT_dHdT_S);\nCustomFunctions.associate(\"PT_DHDV_P\", PT_dHdV_P);\nCustomFunctions.associate(\"PT_DHDV_T\", PT_dHdV_T);\nCustomFunctions.associate(\"PT_DHDV_U\", PT_dHdV_U);\nCustomFunctions.associate(\"PT_DHDV_S\", PT_dHdV_S);\nCustomFunctions.associate(\"PT_DHDU_P\", PT_dHdU_P);\nCustomFunctions.associate(\"PT_DHDU_T\", PT_dHdU_T);\nCustomFunctions.associate(\"PT_DHDU_V\", PT_dHdU_V);\nCustomFunctions.associate(\"PT_DHDU_S\", PT_dHdU_S);\nCustomFunctions.associate(\"PT_DHDS_P\", PT_dHdS_P);\nCustomFunctions.associate(\"PT_DHDS_T\", PT_dHdS_T);\nCustomFunctions.associate(\"PT_DHDS_V\", PT_dHdS_V);\nCustomFunctions.associate(\"PT_DHDS_U\", PT_dHdS_U);\nCustomFunctions.associate(\"PT_DSDP_T\", PT_dSdP_T);\nCustomFunctions.associate(\"PT_DSDP_V\", PT_dSdP_V);\nCustomFunctions.associate(\"PT_DSDP_U\", PT_dSdP_U);\nCustomFunctions.associate(\"PT_DSDP_H\", PT_dSdP_H);\nCustomFunctions.associate(\"PT_DSDT_P\", PT_dSdT_P);\nCustomFunctions.associate(\"PT_DSDT_V\", PT_dSdT_V);\nCustomFunctions.associate(\"PT_DSDT_U\", PT_dSdT_U);\nCustomFunctions.associate(\"PT_DSDT_H\", PT_dSdT_H);\nCustomFunctions.associate(\"PT_DSDV_P\", PT_dSdV_P);\nCustomFunctions.associate(\"PT_DSDV_T\", PT_dSdV_T);\nCustomFunctions.associate(\"PT_DSDV_U\", PT_dSdV_U);\nCustomFunctions.associate(\"PT_DSDV_H\", PT_dSdV_H);\nCustomFunctions.associate(\"PT_DSDU_P\", PT_dSdU_P);\nCustomFunctions.associate(\"PT_DSDU_T\", PT_dSdU_T);\nCustomFunctions.associate(\"PT_DSDU_V\", PT_dSdU_V);\nCustomFunctions.associate(\"PT_DSDU_H\", PT_dSdU_H);\nCustomFunctions.associate(\"PT_DSDH_P\", PT_dSdH_P);\nCustomFunctions.associate(\"PT_DSDH_T\", PT_dSdH_T);\nCustomFunctions.associate(\"PT_DSDH_V\", PT_dSdH_V);\nCustomFunctions.associate(\"PT_DSDH_U\", PT_dSdH_U);"],"names":["BtuPerKj","R_H2O","Tc_H2O","pc_H2O","RHOc_H2O","T13_boundary","T23_100MPa","T25_boundary","T_Cond_Max","Tmin","Ttriple","pTriple","pT0","p2a2b_boundary","pmax","reg2_3Boundary","reg1_Gibb_I","reg1_Gibb_J","reg1_Gibb_n","reg1_Tph_I","reg1_Tph_J","reg1_Tph_n","reg1_Tps_I","reg1_Tps_J","reg1_Tps_n","reg2_Gibb_Ideal_J","reg2_Gibb_Ideal_n","reg2_Gibb_Ideal_na","reg2_Gibb_Res_I","reg2_Gibb_Res_J","reg2_Gibb_Res_n","reg2_MSV_Gibb_Res_I","reg2_MSV_Gibb_Res_J","reg2_MSV_Gibb_Res_n","reg2_B2bc_n","reg2a_Tph_I","reg2a_Tph_J","reg2a_Tph_n","reg2b_Tph_I","reg2b_Tph_J","reg2b_Tph_n","reg2c_Tph_I","reg2c_Tph_J","reg2c_Tph_n","reg2a_Tps_I","reg2a_Tps_J","reg2a_Tps_n","reg2b_Tps_I","reg2b_Tps_J","reg2b_Tps_n","reg2c_Tps_I","reg2c_Tps_J","reg2c_Tps_n","reg3_HelmH_I","reg3_HelmH_J","reg3_HelmH_n","reg4_sat_eq_n","reg5_Gibb_Ideal_J","reg5_Gibb_Ideal_n","reg5_Gibb_Res_I","reg5_Gibb_Res_J","reg5_Gibb_Res_n","reg1_pHS_I","reg1_pHS_J","reg1_pHS_n","h2ab_n","reg2a_pHS_I","reg2a_pHS_J","reg2a_pHS_n","reg2b_pHS_I","reg2b_pHS_J","reg2b_pHS_n","reg2c_pHS_I","reg2c_pHS_J","reg2c_pHS_n","reg3_h3ab_fP","reg3a_Tph_I","reg3a_Tph_J","reg3a_Tph_n","reg3b_Tph_I","reg3b_Tph_J","reg3b_Tph_n","reg3a_Vph_I","reg3a_Vph_J","reg3a_Vph_n","reg3b_Vph_I","reg3b_Vph_J","reg3b_Vph_n","reg3a_Tps_I","reg3a_Tps_J","reg3a_Tps_n","reg3b_Tps_I","reg3b_Tps_J","reg3b_Tps_n","reg3a_Vps_I","reg3a_Vps_J","reg3a_Vps_n","reg3b_Vps_I","reg3b_Vps_J","reg3b_Vps_n","reg3_PSATh_I","reg3_PSATh_J","reg3_PSATh_n","reg3_PSATs_I","reg3_PSATs_J","reg3_PSATs_n","reg3a_pHS_I","reg3a_pHS_J","reg3a_pHS_n","reg3b_pHS_I","reg3b_pHS_J","reg3b_pHS_n","reg3_h1_satLiqS_I","reg3_h1_satLiqS_J","reg3_h1_satLiqS_n","reg3_h3a_satLiqS_I","reg3_h3a_satLiqS_J","reg3_h3a_satLiqS_n","reg3_h2ab_satVapS_I","reg3_h2ab_satVapS_J","reg3_h2ab_satVapS_n","reg3_h2c3b_satVapS_I","reg3_h2c3b_satVapS_J","reg3_h2c3b_satVapS_n","reg3_hB13_I","reg3_hB13_J","reg3_hB13_n","reg3_TB23HS_I","reg3_TB23HS_J","reg3_TB23HS_n","reg3_TsatHS_I","reg3_TsatHS_J","reg3_TsatHS_n","reg3_T3ab_I","reg3_T3ab_n","reg3_T3cd_I","reg3_T3cd_n","reg3_T3gh_I","reg3_T3gh_n","reg3_T3ij_I","reg3_T3ij_n","reg3_T3jk_I","reg3_T3jk_n","reg3_T3mn_I","reg3_T3mn_n","reg3_T3op_I","reg3_T3op_n","reg3_T3qu_I","reg3_T3qu_n","reg3_T3rx_I","reg3_T3rx_n","reg3_T3uv_I","reg3_T3uv_n","reg3_T3wx_I","reg3_T3wx_n","visc_Hi","visc_Hij","x_mi","q_C","q_D","ni","gamma","xi_0","Gamma_0","TR","cond_Lk","cond_Lij","cond_Aij","SI","USCustomary","MetricBarA","MetricKpa","VectorParameters","Pressure","Temperature","Quality","Enthalpy","Entropy","InternalEnergy","Volume","IsobaricHeat","IsochoricHeat","SpeedOfSound","dPdT_V","dPdT_U","dPdT_H","dPdT_S","dPdV_T","dPdV_U","dPdV_H","dPdV_S","dPdU_T","dPdU_V","dPdU_H","dPdU_S","dPdH_T","dPdH_V","dPdH_U","dPdH_S","dPdS_T","dPdS_V","dPdS_U","dPdS_H","dTdP_V","dTdP_U","dTdP_H","dTdP_S","dTdV_P","dTdV_U","dTdV_H","dTdV_S","dTdU_P","dTdU_V","dTdU_H","dTdU_S","dTdH_P","dTdH_V","dTdH_U","dTdH_S","dTdS_P","dTdS_V","dTdS_U","dTdS_H","dVdP_T","dVdP_U","dVdP_H","dVdP_S","dVdT_P","dVdT_U","dVdT_H","dVdT_S","dVdU_P","dVdU_T","dVdU_H","dVdU_S","dVdH_P","dVdH_T","dVdH_U","dVdH_S","dVdS_P","dVdS_T","dVdS_U","dVdS_H","dUdP_T","dUdP_V","dUdP_H","dUdP_S","dUdT_P","dUdT_V","dUdT_H","dUdT_S","dUdV_P","dUdV_T","dUdV_H","dUdV_S","dUdH_P","dUdH_T","dUdH_V","dUdH_S","dUdS_P","dUdS_T","dUdS_V","dUdS_H","dHdP_T","dHdP_V","dHdP_U","dHdP_S","dHdT_P","dHdT_V","dHdT_U","dHdT_S","dHdV_P","dHdV_T","dHdV_U","dHdV_S","dHdU_P","dHdU_T","dHdU_V","dHdU_S","dHdS_P","dHdS_T","dHdS_V","dHdS_U","dSdP_T","dSdP_V","dSdP_U","dSdP_H","dSdT_P","dSdT_V","dSdT_U","dSdT_H","dSdV_P","dSdV_T","dSdV_U","dSdV_H","dSdU_P","dSdU_T","dSdU_V","dSdU_H","dSdH_P","dSdH_T","dSdH_V","dSdH_U","ErrorUnitsNotInRange","PressureOrTempNotInRange","TemperatureOrPressureNotValid","TemperatureOrPressureNotInRegion1","TemperatureOrPressureNotInRegion2","TemperatureOrPressureNotInRegion3","TemperatureNotInRegion3a3b","TemperatureNotInRegion3c3d3e3f","TemperatureNotInRegion3c3g3h3i3j3k","TemperatureNotInRegion3c3l3h3i3j3k","TemperatureNotInRegion3c3l3m3n3o3p3j3k","TemperatureNotInRegion3u3v3w3x","TemperatureNotInRegion3u3x3y3z","TemperatureNotInRegion3u3y","TemperatureNotInRegion3x3z","TemperatureNotInRegion3c3s3r3k","TemperatureNotInRegion3c3s3t","TemperatureNotInRegion3c3t","TemperatureNotInRegion3c3s3u3y","PressureNotWithinValidRange","TemperatureNotWithinValidRange","PressureNotWithinValidSaturatedSteamRegion","QualityNotWithinValidRange","PressureNotValid","PressureOrIndexNotValid","PressureOrQualityNotValid","EntropyNotValidForSaturatedSteam","EntropyNotValid","EntropyOrPressureNotValid","EnthalpyNotValidForEntropy","EnthalpyNotValid","KpaPerPsi","PsiPerMpa","SteamPropertiesConversionReg4","inputProperties","outputProperties","arguments","length","undefined","Units","KtoF","BtuPerLbm_Per_KjPerKg","BtuPerLbmR_Per_KjPerKgK","Ft3perLbm_per_M3PerKg","FeetPerMeter","MpaToBar","KtoC","MpaToKpa","Errors","SteamPropertiesConversion","units","MPa_per_K_To_psia_per_R","MPa_per_M3PerKg_To_psia_per_Ft3PerLbm","MPa_per_KjPerKg_To_psia_per_BtuPerLbm","MPa_per_KjPerKg_K_To_psia_per_BtuPerLbm_R","K_per_MPa_To_R_per_Psia","K_per_M3perKg_To_R_per_Ft3PerLbm","K_per_KjPerKg_To_R_per_BtuPerLbm","K_per_KjPerKg_K_To_R_per_BtuPerLbm_R","M3PerKg_per_MPa_To_Ft3PerLbm_per_Psia","M3PerKg_per_K_To_Ft3PerLbm_per_R","M3PerKg_per_KjPerKg_To_Ft3PerLbm_per_BtuPerLbm","M3PerKg_per_KjPerKg_K_To_Ft3perLbm_per_BtuPerLbmR","KjPerKg_per_MPa_To_BtuPerLbm_per_Psia","KjPerKg_per_K_To_BtuPerLbm_per_R","KjPerKg_per_M3PerKg_To_BtuPerLbm_per_Ft3PerLbm","KjPerKg_per_KjPerKgK_To_BtuPerLbm_per_BtuPerLbmR","KjPerKgK_per_Mpa_To_BtuPerLbmR_per_Psia","KjPerKgK_per_K_To_BtuPerLbmR_per_R","KjPerKgK_per_M3PerKg_To_BtuPerLbmR_per_Ft3PerLbm","KjPerKgK_per_KjPerKg_To_BtuPerLbmR_per_BtuPerLbm","MPa_per_K_To_bara_per_C","MPa_per_M3PerKg_To_bara_per_M3PerKg","MPa_per_KjPerKg_To_bara_per_KjPerKg","MPa_per_KjPerKg_K_To_bara_per_KjPerKg_C","K_per_MPa_To_C_per_Bara","M3PerKg_per_MPa_To_M3PerKg_per_Bara","KjPerKg_per_MPa_To_KjPerKg_per_Bara","KjPerKgK_per_Mpa_To_KjPerKgC_per_Bara","MPa_per_K_To_kPa_per_C","MPa_per_M3PerKg_To_kPa_per_M3PerKg","MPa_per_KjPerKg_To_kPa_per_KjPerKg","MPa_per_KjPerKg_K_To_kPa_per_KjPerKg_C","K_per_MPa_To_C_per_Kpa","M3PerKg_per_MPa_To_M3PerKg_per_KPa","KJPerKg_per_MPa_To_KjPerKg_per_Kpa","KjPerKgK_per_Mpa_To_KjPerKgC_per_KPa","C0","F0","k","CtoK","c","FtoK","f","mpa","BarToMpa","bar","KpaToMpa","kpa","PsiToMpa","psi","PsiToKpa","LbmPerKg","Math","pow","BtuPerLbmToKjPerKg","BtuPerLbm","Constants","BtuPerLbmFtoKjPerKgK","btuPerLbmF","CentiPoise_Per_PascalSecond","LbfPerNewton","SatPressure","temperature","theta","A","B","C","sqrt","reg4SatPressureT3q3r3u3xPoint","satPressureT13Boundary","satPressureTcH2O","R","Properties_fPT","pressure","Region4SatPressure","p","gamma_pi","gamma_tau","gamma_pi_pi","gamma_tau_tau","gamma_pi_tau","pi","tau","i","alpha_v","kappa_T","err","T_fPH","enthalpy","T_fPS","entropy","reg23BoundaryPfT","reg23BoundaryTfP","p3cd","Pcritical","Reg3SubregionParameters","_createClass","reducingVolume","reducingPressure","reducingTemperature","aParam","bParam","cParam","dParam","eParam","iParam","jParam","nParam","_classCallCheck","this","ReducingVolume","ReducingPressure","ReducingTemperature","aParameter","bParameter","cParameter","dParameter","eParameter","I","J","n","reg3Constants","Reg3SubregBoundaryMost","T3Boundary","Reg3SubregAbOpWxBoundary","log","Reg3SubregEfBoundary","SubRegion3V","SR3Parameters","wRoot","j","Properties_fVT","volume","delta","phi","phi_delta","phi_tau","phi_delta_delta","phi_tau_tau","phi_delta_tau","alpha_p","Beta_p","Reg3a_Tph","eta","Reg3b_Tph","Reg3a_Vps","sigma","omega","Reg3b_Vps","P3aHS","P3bHS","H1_sat_liqS","H3a_sat_liqS","H2c3b_sat_VapS","T3uv_SatPress","T3wx_SatPress","SatPropertiesQ0_fP","satTemp","SatTemperature","Region1Calculations","SpecificVolume","Region3Calculations","StmPropArray_Q0","SatPropertiesQ1_fP","StmPropArray_Q1","Region2Calculations","ret","satProperties","parameterValue","parameterIndex","properties","propertiesQ0","propertiesQ1","quality","Properties_fPH","Properties_fPS","Properties_fPQ","satProperties_fPQ","beta","E","F","G","D","p_Reducing","T_reducing","metastable","tWilson","Region4Calculations","Boundary2_3","gamma_0","gamma_0_pi","gamma_0_tau","gamma_0_tau_tau","gamma_r","gamma_r_pi","gamma_r_tau","gamma_r_pi_pi","gamma_r_tau_tau","gamma_r_pi_tau","gibbIdeal_n","gibbRes_I","gibbRes_J","gibbRes_n","B2bc_PfH","T2b_fPH","T2c_fPH","T2b_fPS","T2c_fPS","P2b_fHS","P2c_fHS","SteamProperties","Boundary2_3Calculations","SteamPropertiesArray","T3ab","T3cd","T3ef","T3gh","T3ij","T3jk","T3mn","T3op","exp","SubRegion3V_n","T3qu","T3rx","T3uv","T3wx","Volume_fPT","Region5Calculations","enthalpyMin","enthalpyMax","enthalpyQ0","enthalpyQ1","reg1Enthalpy350C","enthalpyB23","T3a","V3a","T3b","V3b","entropyMin","entropyMax","entropyQ0","entropyQ1","reg1Entropy350C","entropyB23","sMin","sMax","s100MPa623K","s100MPa1073K","sSatLiq623K","sCritical","sSatVap273K","hPmin","H_Pmin","hMax","StmProp_fPS","HP800C","H_Max","hSat","sigma1","sigma2","Tsat","Psat","HsatLiq","P3a","StmProp_fPH","P3b","TB23","aMelt","bMelt","aSublim","bSublim","MeltTemp100MPa","T_ref","rho_ref","mu_ref","ViscMaxT","Visc","Ice","lnPi","rho_dim","rho","mu_2","dVdP_TR","delta_chi_dim","xi","Y","L","psi_D","acos","w","abs","tan","atan","sin","T_dim","mu_0","mu_1","H_sum","ViscR125","Visc_fTV","e","Lambda","xi0","qD","nu","Gamma0","T_R","licensing","checkLicense","CallStmProp_fPT","returnIndex","_units","_metastable","t","Conversions","StmProp_fPT","CallStmProp_fPH","_units2","h","CallStmProp_fPS","_units3","s","CallStmProp_fPQ","_units4","CallStmProp_fTQ","_units5","SatPropertiesQ0_fT","reg2","SatPropertiesQ1_fT","satProperties_fTQ","CallStmProp_fHS","_units6","StmProp_fHS","CallStmProp_YfT","_units9","surfaceTension","Viscosity_fPT","_units11","visc","viscosity","Viscosity","Conductivity_fPT","_units12","conductivity","cond","Cp","Cv","isobaricHeat","isochoricHeat","mu_dim","heat_cap_ratio","zetaTR","NaN","dRhoDp_T","cp_rel","zeta","chi","y","Zy","PI","lambda_2","Lambda_01","lambda_0","lambda_1","L_sum","Cond_WO_crit_enh","Cond_With_crit_enh","Conductivity","CustomFunctions","associate","_units7","H2o","_units8"],"sourceRoot":""}